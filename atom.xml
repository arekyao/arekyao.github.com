<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[YY Every Day]]></title>
  <link href="http://arekyao.github.io/atom.xml" rel="self"/>
  <link href="http://arekyao.github.io/"/>
  <updated>2013-10-07T22:36:47+08:00</updated>
  <id>http://arekyao.github.io/</id>
  <author>
    <name><![CDATA[Arek.Yao]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Workflow Engine in Python]]></title>
    <link href="http://arekyao.github.io/blog/2013/10/02/workflow-engine-in-python/"/>
    <updated>2013-10-02T07:49:00+08:00</updated>
    <id>http://arekyao.github.io/blog/2013/10/02/workflow-engine-in-python</id>
    <content type="html"><![CDATA[<h2 id="whats-workflow">1,What’s workflow</h2>

<p>A <a href="http://en.wikipedia.org/wiki/Workflow">workflow</a> consists of a sequence of connected steps where each step follows without delay or gap and ends just before the subsequent step may begin.</p>

<p>it’s just a complicated finite statemachine</p>

<h2 id="spiff-workflowhttpsgithubcomknipknapspiffworkflow">2,<a href="https://github.com/knipknap/SpiffWorkflow">Spiff workflow</a></h2>

<p>Spiff Workflow is a library implementing a framework for workflows.
It is based on http://www.workflowpatterns.com and implemented in pure Python.</p>

<!-- more -->
<p>In addition, Spiff Workflow provides a parser and workflow emulation
layer that can be used to create executable Spiff Workflow specifications
from Business Process Model and Notation (BPMN) documents.</p>

<p>For documentation please refer to:</p>

<p>https://github.com/knipknap/SpiffWorkflow/wiki</p>

<h2 id="how-to-make-spiff-workflow-work">3,How to make spiff workflow work</h2>

<p>There are many test cases in test directory, you would know how it works, at least know most parts.</p>

<p>Generally, it can work like this:</p>

<ul>
  <li>a, template ,which define the workflow based on <a href="http://www.workflowpatterns.com/">workflow pattern</a>   </li>
  <li>b, tools  which can transform the template to real object in spiff object  </li>
  <li>c, engine, which is used to make spiff workflow object work like flow,lol  </li>
</ul>

<p>However,there is some trap in it.
you can make it work by function,complete_all() or complete_next()
but you can not know how the flow works by getting ready task,
the right way is by callback function</p>

<p>ps: I was stuck by this for two or three days.</p>

<h2 id="one-better-example-using-spiff-workflow">4, one better example using spiff workflow</h2>

<p>the case code:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
<span class="line-number">23</span>
<span class="line-number">24</span>
<span class="line-number">25</span>
<span class="line-number">26</span>
<span class="line-number">27</span>
<span class="line-number">28</span>
<span class="line-number">29</span>
<span class="line-number">30</span>
<span class="line-number">31</span>
<span class="line-number">32</span>
<span class="line-number">33</span>
<span class="line-number">34</span>
<span class="line-number">35</span>
<span class="line-number">36</span>
<span class="line-number">37</span>
<span class="line-number">38</span>
<span class="line-number">39</span>
<span class="line-number">40</span>
<span class="line-number">41</span>
<span class="line-number">42</span>
<span class="line-number">43</span>
<span class="line-number">44</span>
<span class="line-number">45</span>
<span class="line-number">46</span>
<span class="line-number">47</span>
<span class="line-number">48</span>
<span class="line-number">49</span>
<span class="line-number">50</span>
<span class="line-number">51</span>
<span class="line-number">52</span>
<span class="line-number">53</span>
<span class="line-number">54</span>
<span class="line-number">55</span>
<span class="line-number">56</span>
<span class="line-number">57</span>
<span class="line-number">58</span>
<span class="line-number">59</span>
<span class="line-number">60</span>
<span class="line-number">61</span>
<span class="line-number">62</span>
<span class="line-number">63</span>
<span class="line-number">64</span>
<span class="line-number">65</span>
<span class="line-number">66</span>
<span class="line-number">67</span>
<span class="line-number">68</span>
<span class="line-number">69</span>
<span class="line-number">70</span>
<span class="line-number">71</span>
<span class="line-number">72</span>
<span class="line-number">73</span>
<span class="line-number">74</span>
<span class="line-number">75</span>
<span class="line-number">76</span>
<span class="line-number">77</span>
<span class="line-number">78</span>
<span class="line-number">79</span>
<span class="line-number">80</span>
<span class="line-number">81</span>
<span class="line-number">82</span>
<span class="line-number">83</span>
<span class="line-number">84</span>
<span class="line-number">85</span>
<span class="line-number">86</span>
<span class="line-number">87</span>
<span class="line-number">88</span>
<span class="line-number">89</span>
<span class="line-number">90</span>
<span class="line-number">91</span>
<span class="line-number">92</span>
<span class="line-number">93</span>
<span class="line-number">94</span>
<span class="line-number">95</span>
<span class="line-number">96</span>
<span class="line-number">97</span>
<span class="line-number">98</span>
<span class="line-number">99</span>
<span class="line-number">100</span>
<span class="line-number">101</span>
<span class="line-number">102</span>
<span class="line-number">103</span>
<span class="line-number">104</span>
<span class="line-number">105</span>
<span class="line-number">106</span>
<span class="line-number">107</span>
<span class="line-number">108</span>
<span class="line-number">109</span>
<span class="line-number">110</span>
<span class="line-number">111</span>
<span class="line-number">112</span>
<span class="line-number">113</span>
<span class="line-number">114</span>
<span class="line-number">115</span>
<span class="line-number">116</span>
<span class="line-number">117</span>
<span class="line-number">118</span>
<span class="line-number">119</span>
<span class="line-number">120</span>
<span class="line-number">121</span>
<span class="line-number">122</span>
<span class="line-number">123</span>
<span class="line-number">124</span>
<span class="line-number">125</span>
<span class="line-number">126</span>
<span class="line-number">127</span>
<span class="line-number">128</span>
<span class="line-number">129</span>
<span class="line-number">130</span>
<span class="line-number">131</span>
<span class="line-number">132</span>
<span class="line-number">133</span>
<span class="line-number">134</span>
<span class="line-number">135</span>
<span class="line-number">136</span>
<span class="line-number">137</span>
<span class="line-number">138</span>
<span class="line-number">139</span>
<span class="line-number">140</span>
<span class="line-number">141</span>
<span class="line-number">142</span>
<span class="line-number">143</span>
<span class="line-number">144</span>
<span class="line-number">145</span>
<span class="line-number">146</span>
<span class="line-number">147</span>
<span class="line-number">148</span>
<span class="line-number">149</span>
<span class="line-number">150</span>
<span class="line-number">151</span>
<span class="line-number">152</span>
<span class="line-number">153</span>
<span class="line-number">154</span>
<span class="line-number">155</span>
<span class="line-number">156</span>
<span class="line-number">157</span>
<span class="line-number">158</span>
<span class="line-number">159</span>
<span class="line-number">160</span>
<span class="line-number">161</span>
<span class="line-number">162</span>
<span class="line-number">163</span>
</pre></td><td class="code"><pre><code class="py"><span class="line"><span class="c"># -*- coding: utf-8</span>
</span><span class="line">
</span><span class="line"><span class="kn">import</span> <span class="nn">sys</span><span class="o">,</span> <span class="nn">os</span>
</span><span class="line"><span class="n">sys</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">insert</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="n">os</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">os</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">dirname</span><span class="p">(</span><span class="n">__file__</span><span class="p">),</span>  <span class="s">&#39;../../lib&#39;</span><span class="p">))</span>
</span><span class="line">
</span><span class="line"><span class="kn">from</span> <span class="nn">SpiffWorkflow.specs</span> <span class="kn">import</span> <span class="o">*</span>
</span><span class="line"><span class="kn">from</span> <span class="nn">SpiffWorkflow</span> <span class="kn">import</span> <span class="n">Task</span><span class="p">,</span> <span class="n">Workflow</span>
</span><span class="line"><span class="kn">from</span> <span class="nn">SpiffWorkflow.storage</span> <span class="kn">import</span> <span class="n">XmlSerializer</span>
</span><span class="line">
</span><span class="line">
</span><span class="line"><span class="k">def</span> <span class="nf">on_entered_cb</span><span class="p">(</span><span class="n">workflow</span><span class="p">,</span> <span class="n">task</span><span class="p">,</span> <span class="n">taken_path</span><span class="p">):</span>
</span><span class="line">    <span class="c">#print &quot;entered:&quot;,task.get_name()</span>
</span><span class="line">    <span class="k">return</span> <span class="bp">True</span>
</span><span class="line">
</span><span class="line"><span class="k">def</span> <span class="nf">on_ready_cb</span><span class="p">(</span><span class="n">workflow</span><span class="p">,</span> <span class="n">task</span><span class="p">,</span> <span class="n">taken_path</span><span class="p">):</span>
</span><span class="line">    <span class="c">#print &quot;ready:&quot;,task.get_name()</span>
</span><span class="line">    <span class="k">return</span> <span class="bp">True</span>
</span><span class="line">
</span><span class="line">
</span><span class="line"><span class="k">def</span> <span class="nf">on_reached_cb</span><span class="p">(</span><span class="n">workflow</span><span class="p">,</span> <span class="n">task</span><span class="p">,</span> <span class="n">taken_path</span><span class="p">):</span>
</span><span class="line">    <span class="c">#print &quot;reached:&quot;,task.get_name()</span>
</span><span class="line">    <span class="k">return</span> <span class="bp">True</span>
</span><span class="line">
</span><span class="line"><span class="k">def</span> <span class="nf">on_complete_cb</span><span class="p">(</span><span class="n">workflow</span><span class="p">,</span> <span class="n">task</span><span class="p">,</span> <span class="n">taken_path</span><span class="p">):</span>
</span><span class="line">    <span class="c"># Record the path.</span>
</span><span class="line">    <span class="k">print</span> <span class="s">&quot;complete:&quot;</span><span class="p">,</span><span class="n">task</span><span class="o">.</span><span class="n">get_name</span><span class="p">()</span>
</span><span class="line">    <span class="c">#print task.get_description()</span>
</span><span class="line">    <span class="n">indent</span> <span class="o">=</span> <span class="s">&#39;  &#39;</span> <span class="o">*</span> <span class="p">(</span><span class="n">task</span><span class="o">.</span><span class="n">_get_depth</span><span class="p">()</span> <span class="o">-</span> <span class="mi">1</span><span class="p">)</span>
</span><span class="line">    <span class="n">taken_path</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="s">&#39;</span><span class="si">%s%s</span><span class="s">&#39;</span> <span class="o">%</span> <span class="p">(</span><span class="n">indent</span><span class="p">,</span> <span class="n">task</span><span class="o">.</span><span class="n">get_name</span><span class="p">()))</span>
</span><span class="line">    <span class="k">return</span> <span class="bp">True</span>
</span><span class="line">
</span><span class="line">
</span><span class="line">
</span><span class="line"><span class="k">class</span> <span class="nc">QuestionError</span><span class="p">(</span><span class="ne">Exception</span><span class="p">):</span>
</span><span class="line">
</span><span class="line">    <span class="k">def</span> <span class="nf">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">value</span><span class="p">):</span>
</span><span class="line">        <span class="bp">self</span><span class="o">.</span><span class="n">value</span> <span class="o">=</span> <span class="n">value</span>
</span><span class="line">
</span><span class="line">    <span class="k">def</span> <span class="nf">__str__</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
</span><span class="line">        <span class="k">return</span> <span class="nb">repr</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">value</span><span class="p">)</span>
</span><span class="line">
</span><span class="line">
</span><span class="line">
</span><span class="line">
</span><span class="line"><span class="k">class</span> <span class="nc">QuestionWorkflow</span><span class="p">(</span><span class="nb">object</span><span class="p">):</span>
</span><span class="line">    <span class="k">def</span> <span class="nf">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
</span><span class="line">        <span class="bp">self</span><span class="o">.</span><span class="n">serializer</span> <span class="o">=</span> <span class="n">XmlSerializer</span><span class="p">()</span>
</span><span class="line">
</span><span class="line">    <span class="k">def</span> <span class="nf">set_up</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span><span class="n">filename</span><span class="p">):</span>
</span><span class="line">        <span class="c"># Test patterns that are defined in XML format.</span>
</span><span class="line">        <span class="n">xml</span> <span class="o">=</span> <span class="nb">open</span><span class="p">(</span><span class="n">filename</span><span class="p">)</span><span class="o">.</span><span class="n">read</span><span class="p">()</span>
</span><span class="line">        <span class="bp">self</span><span class="o">.</span><span class="n">wf_spec</span> <span class="o">=</span> <span class="n">WorkflowSpec</span><span class="o">.</span><span class="n">deserialize</span><span class="p">(</span><span class="n">XmlSerializer</span><span class="p">(),</span> <span class="n">xml</span><span class="p">,</span> <span class="n">filename</span> <span class="o">=</span> <span class="n">filename</span><span class="p">)</span>
</span><span class="line">        <span class="bp">self</span><span class="o">.</span><span class="n">taken_path</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">track_workflow</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">wf_spec</span><span class="p">)</span>
</span><span class="line">        <span class="bp">self</span><span class="o">.</span><span class="n">workflow</span>   <span class="o">=</span> <span class="n">Workflow</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">wf_spec</span><span class="p">)</span>
</span><span class="line">
</span><span class="line">
</span><span class="line">    <span class="k">def</span> <span class="nf">run</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">UserSelection</span><span class="p">,</span> <span class="n">restart</span><span class="o">=</span><span class="bp">False</span><span class="p">):</span>
</span><span class="line">
</span><span class="line">        <span class="k">if</span> <span class="n">restart</span><span class="p">:</span>
</span><span class="line">            <span class="bp">self</span><span class="o">.</span><span class="n">workflow</span> <span class="o">=</span> <span class="n">Workflow</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">wf_spec</span><span class="p">)</span>
</span><span class="line">
</span><span class="line">        <span class="n">workflow</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">workflow</span>
</span><span class="line">        <span class="n">condition_keys</span> <span class="o">=</span> <span class="p">[]</span>
</span><span class="line">        <span class="k">if</span> <span class="n">UserSelection</span> <span class="ow">is</span> <span class="bp">None</span><span class="p">:</span>
</span><span class="line">            <span class="n">UserSelection</span> <span class="o">=</span> <span class="p">{}</span>
</span><span class="line">
</span><span class="line">        <span class="n">task_data_dict</span> <span class="o">=</span> <span class="n">UserSelection</span><span class="o">.</span><span class="n">copy</span><span class="p">()</span>
</span><span class="line">
</span><span class="line">        <span class="k">while</span> <span class="ow">not</span> <span class="n">workflow</span><span class="o">.</span><span class="n">is_completed</span><span class="p">():</span>
</span><span class="line">            <span class="n">tasks</span> <span class="o">=</span> <span class="n">workflow</span><span class="o">.</span><span class="n">get_tasks</span><span class="p">(</span><span class="n">Task</span><span class="o">.</span><span class="n">READY</span><span class="p">)</span>
</span><span class="line">
</span><span class="line">            <span class="k">for</span> <span class="n">t</span> <span class="ow">in</span> <span class="n">tasks</span><span class="p">:</span>
</span><span class="line">                <span class="k">print</span> <span class="s">&quot;Ready:&quot;</span><span class="p">,</span> <span class="n">t</span><span class="o">.</span><span class="n">task_spec</span><span class="o">.</span><span class="n">name</span>
</span><span class="line">                <span class="k">if</span>  <span class="nb">hasattr</span><span class="p">(</span><span class="n">t</span><span class="o">.</span><span class="n">task_spec</span><span class="p">,</span> <span class="s">&quot;cond_task_specs&quot;</span><span class="p">):</span>
</span><span class="line">                    <span class="k">for</span> <span class="n">cond</span><span class="p">,</span> <span class="n">name</span> <span class="ow">in</span> <span class="n">t</span><span class="o">.</span><span class="n">task_spec</span><span class="o">.</span><span class="n">cond_task_specs</span><span class="p">:</span>
</span><span class="line">                        <span class="k">for</span> <span class="n">cond_unit</span> <span class="ow">in</span> <span class="n">cond</span><span class="o">.</span><span class="n">args</span><span class="p">:</span>
</span><span class="line">                            <span class="k">if</span> <span class="nb">hasattr</span><span class="p">(</span><span class="n">cond_unit</span><span class="p">,</span> <span class="s">&quot;name&quot;</span><span class="p">):</span>
</span><span class="line">                                <span class="n">condition_keys</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">cond_unit</span><span class="o">.</span><span class="n">name</span><span class="p">)</span>
</span><span class="line">
</span><span class="line">
</span><span class="line">            <span class="n">flag_keys_in_user_select</span> <span class="o">=</span> <span class="bp">True</span>
</span><span class="line">            <span class="k">for</span> <span class="n">cond_key</span> <span class="ow">in</span> <span class="n">condition_keys</span><span class="p">:</span>
</span><span class="line">                <span class="k">if</span> <span class="ow">not</span> <span class="n">task_data_dict</span><span class="o">.</span><span class="n">has_key</span><span class="p">(</span><span class="n">cond_key</span><span class="p">):</span>
</span><span class="line">                    <span class="k">print</span> <span class="n">cond_key</span>
</span><span class="line">                    <span class="n">flag_keys_in_user_select</span> <span class="o">=</span> <span class="bp">False</span>
</span><span class="line">                    <span class="k">break</span>
</span><span class="line">
</span><span class="line">            <span class="k">if</span> <span class="ow">not</span> <span class="n">flag_keys_in_user_select</span><span class="p">:</span>
</span><span class="line">                <span class="c"># some tast&#39;s condition&#39;s key not in input userselect dict</span>
</span><span class="line">                <span class="k">return</span>
</span><span class="line">
</span><span class="line">            <span class="k">for</span> <span class="n">t</span> <span class="ow">in</span> <span class="n">tasks</span><span class="p">:</span>
</span><span class="line">                <span class="n">t</span><span class="o">.</span><span class="n">set_data</span><span class="p">(</span><span class="o">**</span><span class="n">task_data_dict</span><span class="p">)</span>
</span><span class="line">
</span><span class="line">            <span class="n">workflow</span><span class="o">.</span><span class="n">complete_next</span><span class="p">()</span>
</span><span class="line">
</span><span class="line">        <span class="k">if</span> <span class="ow">not</span> <span class="n">workflow</span><span class="o">.</span><span class="n">is_completed</span><span class="p">():</span>
</span><span class="line">            <span class="k">raise</span> <span class="n">QuestionError</span><span class="p">(</span><span class="s">&#39;invalid feature[</span><span class="si">%s</span><span class="s">]&#39;</span> <span class="o">%</span> <span class="n">filename</span><span class="p">)</span>
</span><span class="line">
</span><span class="line">    <span class="k">def</span> <span class="nf">print_trace</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
</span><span class="line">        <span class="n">path</span> <span class="o">=</span> <span class="s">&#39;</span><span class="se">\n</span><span class="s">&#39;</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">taken_path</span><span class="p">)</span> <span class="o">+</span> <span class="s">&#39;</span><span class="se">\n</span><span class="s">&#39;</span>
</span><span class="line">        <span class="n">info</span> <span class="o">=</span> <span class="s">&quot;&quot;</span>
</span><span class="line">        <span class="n">info</span> <span class="o">+=</span> <span class="s">&#39;the workflowrun path:</span><span class="se">\n</span><span class="s">&#39;</span>
</span><span class="line">        <span class="n">info</span> <span class="o">+=</span> <span class="s">&#39;</span><span class="si">%s</span><span class="se">\n</span><span class="s">&#39;</span> <span class="o">%</span> <span class="n">path</span>
</span><span class="line">        <span class="k">print</span> <span class="n">info</span>
</span><span class="line">
</span><span class="line">
</span><span class="line">    <span class="k">def</span> <span class="nf">track_task</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">task_spec</span><span class="p">,</span> <span class="n">taken_path</span><span class="p">):</span>
</span><span class="line">
</span><span class="line">        <span class="c">#reached event call back</span>
</span><span class="line">        <span class="k">if</span> <span class="n">task_spec</span><span class="o">.</span><span class="n">reached_event</span><span class="o">.</span><span class="n">is_connected</span><span class="p">(</span><span class="n">on_reached_cb</span><span class="p">):</span>
</span><span class="line">            <span class="n">task_spec</span><span class="o">.</span><span class="n">reached_event</span><span class="o">.</span><span class="n">disconnect</span><span class="p">(</span><span class="n">on_reached_cb</span><span class="p">)</span>
</span><span class="line">        <span class="n">task_spec</span><span class="o">.</span><span class="n">reached_event</span><span class="o">.</span><span class="n">connect</span><span class="p">(</span><span class="n">on_reached_cb</span><span class="p">,</span> <span class="n">taken_path</span><span class="p">)</span>
</span><span class="line">
</span><span class="line">        <span class="c">#completed event call back</span>
</span><span class="line">        <span class="k">if</span> <span class="n">task_spec</span><span class="o">.</span><span class="n">completed_event</span><span class="o">.</span><span class="n">is_connected</span><span class="p">(</span><span class="n">on_complete_cb</span><span class="p">):</span>
</span><span class="line">            <span class="n">task_spec</span><span class="o">.</span><span class="n">completed_event</span><span class="o">.</span><span class="n">disconnect</span><span class="p">(</span><span class="n">on_complete_cb</span><span class="p">)</span>
</span><span class="line">        <span class="n">task_spec</span><span class="o">.</span><span class="n">completed_event</span><span class="o">.</span><span class="n">connect</span><span class="p">(</span><span class="n">on_complete_cb</span><span class="p">,</span> <span class="n">taken_path</span><span class="p">)</span>
</span><span class="line">
</span><span class="line">        <span class="c">#enter event call back</span>
</span><span class="line">        <span class="k">if</span> <span class="n">task_spec</span><span class="o">.</span><span class="n">entered_event</span><span class="o">.</span><span class="n">is_connected</span><span class="p">(</span><span class="n">on_entered_cb</span><span class="p">):</span>
</span><span class="line">            <span class="n">task_spec</span><span class="o">.</span><span class="n">entered_event</span><span class="o">.</span><span class="n">disconnect</span><span class="p">(</span><span class="n">on_entered_cb</span><span class="p">)</span>
</span><span class="line">        <span class="n">task_spec</span><span class="o">.</span><span class="n">entered_event</span><span class="o">.</span><span class="n">connect</span><span class="p">(</span><span class="n">on_entered_cb</span><span class="p">,</span> <span class="n">taken_path</span><span class="p">)</span>
</span><span class="line">
</span><span class="line">        <span class="c">#ready event call back</span>
</span><span class="line">        <span class="k">if</span> <span class="n">task_spec</span><span class="o">.</span><span class="n">ready_event</span><span class="o">.</span><span class="n">is_connected</span><span class="p">(</span><span class="n">on_ready_cb</span><span class="p">):</span>
</span><span class="line">            <span class="n">task_spec</span><span class="o">.</span><span class="n">ready_event</span><span class="o">.</span><span class="n">disconnect</span><span class="p">(</span><span class="n">on_ready_cb</span><span class="p">)</span>
</span><span class="line">        <span class="n">task_spec</span><span class="o">.</span><span class="n">ready_event</span><span class="o">.</span><span class="n">connect</span><span class="p">(</span><span class="n">on_ready_cb</span><span class="p">,</span> <span class="n">taken_path</span><span class="p">)</span>
</span><span class="line">
</span><span class="line">
</span><span class="line">
</span><span class="line">    <span class="k">def</span> <span class="nf">track_workflow</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">wf_spec</span><span class="p">,</span> <span class="n">taken_path</span> <span class="o">=</span> <span class="bp">None</span><span class="p">):</span>
</span><span class="line">        <span class="k">if</span> <span class="n">taken_path</span> <span class="ow">is</span> <span class="bp">None</span><span class="p">:</span>
</span><span class="line">            <span class="n">taken_path</span> <span class="o">=</span> <span class="p">[]</span>
</span><span class="line">        <span class="k">for</span> <span class="n">name</span> <span class="ow">in</span> <span class="n">wf_spec</span><span class="o">.</span><span class="n">task_specs</span><span class="p">:</span>
</span><span class="line">            <span class="c">#print &quot;track_workflow:&quot;,name</span>
</span><span class="line">            <span class="bp">self</span><span class="o">.</span><span class="n">track_task</span><span class="p">(</span><span class="n">wf_spec</span><span class="o">.</span><span class="n">task_specs</span><span class="p">[</span><span class="n">name</span><span class="p">],</span> <span class="n">taken_path</span><span class="p">)</span>
</span><span class="line">        <span class="k">return</span> <span class="n">taken_path</span>
</span><span class="line">
</span><span class="line"><span class="k">if</span> <span class="n">__name__</span> <span class="o">==</span> <span class="s">&#39;__main__&#39;</span><span class="p">:</span>
</span><span class="line">    <span class="n">qw</span> <span class="o">=</span> <span class="n">QuestionWorkflow</span><span class="p">()</span>
</span><span class="line">    <span class="n">qw</span><span class="o">.</span><span class="n">set_up</span><span class="p">(</span><span class="s">&quot;./case.xml&quot;</span><span class="p">)</span>
</span><span class="line">    <span class="k">print</span> <span class="s">&quot;==========1st question==========&quot;</span>
</span><span class="line">    <span class="n">user_selct</span> <span class="o">=</span> <span class="p">{</span><span class="s">&#39;man&#39;</span><span class="p">:</span><span class="s">&#39;1&#39;</span><span class="p">}</span>
</span><span class="line">    <span class="n">qw</span><span class="o">.</span><span class="n">run</span><span class="p">(</span><span class="n">user_selct</span><span class="p">)</span>
</span><span class="line">    <span class="k">print</span> <span class="s">&quot;==========2nd question==========&quot;</span>
</span><span class="line">    <span class="n">user_selct</span> <span class="o">=</span> <span class="p">{</span><span class="s">&#39;man&#39;</span><span class="p">:</span><span class="s">&#39;1&#39;</span><span class="p">,</span> <span class="s">&#39;house&#39;</span><span class="p">:</span> <span class="s">&#39;2&#39;</span><span class="p">}</span>
</span><span class="line">    <span class="n">qw</span><span class="o">.</span><span class="n">run</span><span class="p">(</span><span class="n">user_selct</span><span class="p">)</span>
</span><span class="line">    <span class="k">print</span> <span class="s">&quot;==========3rd question==========&quot;</span>
</span><span class="line">    <span class="n">user_selct</span> <span class="o">=</span> <span class="p">{</span><span class="s">&#39;man&#39;</span><span class="p">:</span><span class="s">&#39;1&#39;</span><span class="p">,</span> <span class="s">&#39;house&#39;</span><span class="p">:</span> <span class="s">&#39;2&#39;</span><span class="p">,</span> <span class="s">&#39;why&#39;</span><span class="p">:</span> <span class="s">&#39;because you are a hero&#39;</span><span class="p">}</span>
</span><span class="line">    <span class="n">qw</span><span class="o">.</span><span class="n">run</span><span class="p">(</span><span class="n">user_selct</span><span class="p">)</span>
</span><span class="line">
</span><span class="line">    <span class="sd">&#39;&#39;&#39;</span>
</span><span class="line"><span class="sd">    print &quot;==========4th question=========&quot;</span>
</span><span class="line"><span class="sd">    user_selct = {&#39;man&#39;:&#39;1&#39;, &#39;house&#39;: &#39;2&#39;, &#39;role&#39;:&#39;5&#39;}</span>
</span><span class="line"><span class="sd">    qw.run(user_selct)</span>
</span><span class="line"><span class="sd">    &#39;&#39;&#39;</span>
</span><span class="line">
</span><span class="line">    <span class="k">print</span> <span class="s">&quot;==========fix some question==========&quot;</span>
</span><span class="line">    <span class="n">user_selct</span> <span class="o">=</span> <span class="p">{</span><span class="s">&#39;man&#39;</span><span class="p">:</span><span class="s">&#39;1&#39;</span><span class="p">,</span> <span class="s">&#39;house&#39;</span><span class="p">:</span> <span class="s">&#39;1&#39;</span><span class="p">,</span> <span class="s">&#39;role&#39;</span><span class="p">:</span><span class="s">&#39;5&#39;</span><span class="p">}</span>
</span><span class="line">    <span class="n">qw</span><span class="o">.</span><span class="n">run</span><span class="p">(</span><span class="n">user_selct</span><span class="p">,</span><span class="bp">True</span><span class="p">)</span>
</span><span class="line">
</span><span class="line">    <span class="k">print</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>the template case.xml file</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
<span class="line-number">23</span>
<span class="line-number">24</span>
<span class="line-number">25</span>
<span class="line-number">26</span>
<span class="line-number">27</span>
<span class="line-number">28</span>
<span class="line-number">29</span>
<span class="line-number">30</span>
<span class="line-number">31</span>
<span class="line-number">32</span>
<span class="line-number">33</span>
<span class="line-number">34</span>
<span class="line-number">35</span>
<span class="line-number">36</span>
<span class="line-number">37</span>
<span class="line-number">38</span>
<span class="line-number">39</span>
<span class="line-number">40</span>
<span class="line-number">41</span>
<span class="line-number">42</span>
<span class="line-number">43</span>
<span class="line-number">44</span>
<span class="line-number">45</span>
<span class="line-number">46</span>
<span class="line-number">47</span>
<span class="line-number">48</span>
<span class="line-number">49</span>
<span class="line-number">50</span>
<span class="line-number">51</span>
<span class="line-number">52</span>
<span class="line-number">53</span>
<span class="line-number">54</span>
<span class="line-number">55</span>
<span class="line-number">56</span>
<span class="line-number">57</span>
<span class="line-number">58</span>
<span class="line-number">59</span>
<span class="line-number">60</span>
<span class="line-number">61</span>
<span class="line-number">62</span>
<span class="line-number">63</span>
<span class="line-number">64</span>
<span class="line-number">65</span>
<span class="line-number">66</span>
<span class="line-number">67</span>
</pre></td><td class="code"><pre><code class="xml"><span class="line"><span class="cp">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span>
</span><span class="line"><span class="nt">&lt;process-definition</span> <span class="na">name=</span><span class="s">&quot;Daixm Workflow&quot;</span> <span class="na">revision=</span><span class="s">&quot;1.6&quot;</span><span class="nt">&gt;</span>
</span><span class="line">    <span class="nt">&lt;description&gt;</span>
</span><span class="line">    A test workflow that contains all possible tasks.
</span><span class="line">    <span class="nt">&lt;/description&gt;</span>
</span><span class="line">
</span><span class="line">    <span class="c">&lt;!-- Start with an implicit simple split. --&gt;</span>
</span><span class="line">    <span class="nt">&lt;start-task&gt;</span>
</span><span class="line">        <span class="nt">&lt;successor&gt;</span>house_choice<span class="nt">&lt;/successor&gt;</span>
</span><span class="line">    <span class="nt">&lt;/start-task&gt;</span>
</span><span class="line">
</span><span class="line">    <span class="nt">&lt;exclusive-choice</span> <span class="na">name=</span><span class="s">&quot;house_choice&quot;</span><span class="nt">&gt;</span>
</span><span class="line">        <span class="c">&lt;!-- No House --&gt;</span>
</span><span class="line">        <span class="nt">&lt;default-successor&gt;</span>role_choice<span class="nt">&lt;/default-successor&gt;</span>
</span><span class="line">
</span><span class="line">        <span class="nt">&lt;conditional-successor&gt;</span>
</span><span class="line">            <span class="nt">&lt;equals</span> <span class="na">left-field=</span><span class="s">&quot;house&quot;</span> <span class="na">right-value=</span><span class="s">&quot;1&quot;</span> <span class="nt">/&gt;</span>
</span><span class="line">            <span class="nt">&lt;successor&gt;</span>build_house<span class="nt">&lt;/successor&gt;</span>
</span><span class="line">        <span class="nt">&lt;/conditional-successor&gt;</span>
</span><span class="line">
</span><span class="line">        <span class="nt">&lt;conditional-successor&gt;</span>
</span><span class="line">            <span class="nt">&lt;equals</span> <span class="na">left-field=</span><span class="s">&quot;house&quot;</span> <span class="na">right-value=</span><span class="s">&quot;2&quot;</span> <span class="nt">/&gt;</span>
</span><span class="line">            <span class="nt">&lt;successor&gt;</span>buy_house<span class="nt">&lt;/successor&gt;</span>
</span><span class="line">        <span class="nt">&lt;/conditional-successor&gt;</span>
</span><span class="line">    <span class="nt">&lt;/exclusive-choice&gt;</span>
</span><span class="line">
</span><span class="line">    <span class="nt">&lt;task</span> <span class="na">name=</span><span class="s">&quot;buy_house&quot;</span><span class="nt">&gt;</span>
</span><span class="line">        <span class="nt">&lt;description&gt;</span><span class="nt">&lt;/description&gt;</span>
</span><span class="line">        <span class="nt">&lt;successor&gt;</span>house_location<span class="nt">&lt;/successor&gt;</span>
</span><span class="line">    <span class="nt">&lt;/task&gt;</span>
</span><span class="line">
</span><span class="line">    <span class="nt">&lt;task</span> <span class="na">name=</span><span class="s">&quot;house_location&quot;</span><span class="nt">&gt;</span>
</span><span class="line">        <span class="nt">&lt;successor&gt;</span>house_age<span class="nt">&lt;/successor&gt;</span>
</span><span class="line">    <span class="nt">&lt;/task&gt;</span>
</span><span class="line">
</span><span class="line">    <span class="nt">&lt;task</span> <span class="na">name=</span><span class="s">&quot;house_age&quot;</span><span class="nt">&gt;</span>
</span><span class="line">        <span class="nt">&lt;successor&gt;</span>role_choice<span class="nt">&lt;/successor&gt;</span>
</span><span class="line">    <span class="nt">&lt;/task&gt;</span>
</span><span class="line">
</span><span class="line">    <span class="nt">&lt;task</span> <span class="na">name=</span><span class="s">&quot;build_house&quot;</span><span class="nt">&gt;</span>
</span><span class="line">        <span class="nt">&lt;successor&gt;</span>role_choice<span class="nt">&lt;/successor&gt;</span>
</span><span class="line">    <span class="nt">&lt;/task&gt;</span>
</span><span class="line">
</span><span class="line">
</span><span class="line">    <span class="nt">&lt;exclusive-choice</span> <span class="na">name=</span><span class="s">&quot;role_choice&quot;</span><span class="nt">&gt;</span>
</span><span class="line">        <span class="c">&lt;!-- No House --&gt;</span>
</span><span class="line">        <span class="nt">&lt;default-successor&gt;</span>no_jobs<span class="nt">&lt;/default-successor&gt;</span>
</span><span class="line">        <span class="nt">&lt;conditional-successor&gt;</span>
</span><span class="line">            <span class="nt">&lt;equals</span> <span class="na">left-field=</span><span class="s">&quot;role&quot;</span> <span class="na">right-value=</span><span class="s">&quot;1&quot;</span> <span class="nt">/&gt;</span>
</span><span class="line">            <span class="nt">&lt;successor&gt;</span>jobs_working<span class="nt">&lt;/successor&gt;</span>
</span><span class="line">        <span class="nt">&lt;/conditional-successor&gt;</span>
</span><span class="line">    <span class="nt">&lt;/exclusive-choice&gt;</span>
</span><span class="line">
</span><span class="line">
</span><span class="line">    <span class="nt">&lt;task</span> <span class="na">name=</span><span class="s">&quot;no_jobs&quot;</span><span class="nt">&gt;</span>
</span><span class="line">        <span class="nt">&lt;successor&gt;</span>last<span class="nt">&lt;/successor&gt;</span>
</span><span class="line">    <span class="nt">&lt;/task&gt;</span>
</span><span class="line">
</span><span class="line">    <span class="nt">&lt;task</span> <span class="na">name=</span><span class="s">&quot;jobs_working&quot;</span><span class="nt">&gt;</span>
</span><span class="line">        <span class="nt">&lt;successor&gt;</span>last<span class="nt">&lt;/successor&gt;</span>
</span><span class="line">    <span class="nt">&lt;/task&gt;</span>
</span><span class="line">
</span><span class="line">    <span class="c">&lt;!-- A final task. --&gt;</span>
</span><span class="line">    <span class="nt">&lt;task</span> <span class="na">name=</span><span class="s">&quot;last&quot;</span><span class="nt">&gt;</span>
</span><span class="line">        <span class="nt">&lt;successor&gt;</span>end<span class="nt">&lt;/successor&gt;</span>
</span><span class="line">    <span class="nt">&lt;/task&gt;</span>
</span><span class="line"><span class="nt">&lt;/process-definition&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[The Key Technologies in Simple XiangQi Engine MaxQi]]></title>
    <link href="http://arekyao.github.io/blog/2013/07/02/the-key-technologies-in-simple-xiangqi-engine-maxqi/"/>
    <updated>2013-07-02T08:30:00+08:00</updated>
    <id>http://arekyao.github.io/blog/2013/07/02/the-key-technologies-in-simple-xiangqi-engine-maxqi</id>
    <content type="html"><![CDATA[<h2 id="mini-max-algorithm">1,mini-max algorithm</h2>

<p>minimize the opponent’s potential max profit.</p>

<p>easy to understand,right?</p>

<h2 id="alpha-beta-cutoff">2,alpha-beta cutoff</h2>

<p>It stops completely evaluating a move when at least one possibility has been found that proves the move to be worse than a previously examined move.  <br />
  <!-- more -->
 Such moves need not be evaluated further. </p>

<p>When applied to a standard minimax tree, it returns the same move as minimax would, but prunes away branches that cannot possibly influence the final decision</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
</pre></td><td class="code"><pre><code class=""><span class="line">function alphabeta(node, depth, a, b, Player)        
</span><span class="line">    if depth = 0 or node is a terminal node
</span><span class="line">        return the heuristic value of node
</span><span class="line">    if Player = MaxPlayer
</span><span class="line">        for each child of node
</span><span class="line">            a := max(a, alphabeta(child, depth-1, a, b, not(Player) ))    
</span><span class="line">            if b &lt;= a
</span><span class="line">                break                             (* Beta cut-off *)
</span><span class="line">        return a
</span><span class="line">    else
</span><span class="line">        for each child of node
</span><span class="line">            b := min(b, alphabeta(child, depth-1, a, b, not(Player) ))    
</span><span class="line">            if b &lt;= a
</span><span class="line">                break                             (* Alpha cut-off *)
</span><span class="line">        return b
</span><span class="line">(* Initial call *)
</span><span class="line">alphabeta(origin, depth, -infinity, +infinity, MaxPlayer)</span></code></pre></td></tr></table></div></figure></notextile></div>

<h2 id="quiescence-search">3,Quiescence search</h2>

<p>When have to recapture , it have to search until there is no tradeoff</p>

<h2 id="iterative-search">4,Iterative search</h2>

<p>the key is the search depth.</p>

<p>The efficiency of the alpha-beta search is strongly enhanced (in terms of the number of nodes searched) <br />
if the best move is tried first, and trying idiotic moves first (such as both Queens getting berserk) can easily lead to an explosion of the search.  </p>

<p>Rather than aggressively starting a search of the required depth, proceed carefully and first invest some time doing a search of shallower depth.  </p>

<p>What it can get ,through the shallower depth search , the window (alpha-beta,the min &amp; max) and the best move, which is supposed to search first in deepen search</p>

<h2 id="hash-table">5, Hash table</h2>

<p>Use the result which has been faced last time.</p>

<p>So it is needed some hash key to describe the whole board </p>

<p>The Zobrist Keys show up!</p>

<h2 id="zobrist-hashing">6,Zobrist hashing</h2>

<p>Zobrist hashing starts by randomly generating bitstrings for each possible element of a board game</p>

<p>The final Zobrist hash is computed by combining those bitstrings using bitwise XOR.</p>

<p>the good is the hash key is recalculated by two “xor”</p>

<h2 id="monte-carlo-methods">7,Monte Carlo methods</h2>

<p>This method can be used to estimate the board status(which side is at better thant the other side)</p>

<p>Monte Carlo methods vary, but tend to follow a particular pattern:</p>

<p>a). Define a domain of possible inputs.<br />
  b). Generate inputs randomly from a probability distribution over the domain.<br />
  c). Perform a deterministic computation on the inputs.<br />
  d). Aggregate the results.  </p>

<p>However, in maxqi, it’s not used.<br />
The other way the piece’s weight sum is used to estimate.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Something about Chess series with AI]]></title>
    <link href="http://arekyao.github.io/blog/2013/06/23/something-about-chess-series-with-ai/"/>
    <updated>2013-06-23T20:48:00+08:00</updated>
    <id>http://arekyao.github.io/blog/2013/06/23/something-about-chess-series-with-ai</id>
    <content type="html"><![CDATA[<h2 id="preface">Preface</h2>
<p>One day, I want to learn some knowledge about the Game AI topic.
Chess series is supposed to a big collection in Game.
Xiangqi is my fav chess game, and I am familiar with it.
It’s a good choice.</p>

<p>Besides, six years ago, I have developed xiangqi program both in java &amp; C++.
I can use it to learn AI engine ,and the program developed before , can be seen as a GUI.
Techinically, it will be OK then.
Reality is cruel, the Java version is lost at home, and the C++ version have to run on Window, not my Mac OSX.</p>

<h2 id="chess--ai">Chess &amp; AI</h2>

<!-- more -->

<p><a href="http://www.chessvariants.org/d.chess/chess.html">Chess</a> is a two-player strategy board game played on a chessboard, a checkered gameboard with 64 squares arranged in an eight-by-eight grid. <br />
It is one of the world’s most popular games, played by millions of people worldwide at home, in clubs, online, by correspondence, and in tournaments.</p>

<p>So if chess has AI, then we can compete with Computer.  </p>

<p>More interestingly, we can let two Computer with AI fight with each other.</p>

<p>There are all kinds of chess game, which seems alike.</p>

<p>They have these Feature:
* board with X * Y
* pieces with some rule</p>

<p>Chess(International)
http://www.chessvariants.org/d.chess/chess.html</p>

<p>Xiangqi(Chinese Chess)
http://www.chessvariants.org/xiangqi.html</p>

<h2 id="xboard--fairymax">Xboard &amp; FairyMax</h2>
<p>Xboard is a chess program, FairyMax is a chess engine(AI)</p>

<p><a href="http://www.gnu.org/software/xboard/">Xboard</a> is a graphical user interface for chess in all its major forms, <br />
including international chess, xiangqi (Chinese chess), shogi (Japanese chess) and Makruk, <br />
in addition to many minor variants such as Losers Chess, Crazyhouse, Chess960 and Capablanca Chess.  </p>

<p><a href="http://home.hccnet.nl/h.g.muller/CVfairy.html">FairyMax</a>
FairyMax is developed by H.G.Muller, who is super fan of chess.
Maxqi is the xiangqi engine.</p>

<h2 id="learing">Learing</h2>

<h5 id="first--install-xboard--fairymax">First , install xboard &amp; Fairymax</h5>

<p>Here is a way:</p>

<p><a href="">https://github.com/Homebrew/homebrew-games</a></p>

<h5 id="second-problem-is-how-to-run-xboard">Second Problem is how to run xboard….</h5>

<p>Don’t underestimate it.
It takes me lots of time to test it.</p>

<p>Help information? xboard help?     It does not work <br />
The output is full of useless infomation</p>

<p>Xboard web help? User guide ? It does not work.<br />
http://www.gnu.org/software/xboard/user_guide/UserGuide.html</p>

<p>at last, I have to learn how to run, From an appication on Window..</p>

<p>OMG….</p>

<p>1, copy the xboard.ini to be used as xboard.rc</p>

<p>2, then I got the knowledge, the viariant arg…supposed to be the xiangqi</p>

<p>3, use fcp can call the maxqi. from user guide</p>

<p>now, it almost works but have a problem
xiangqi can compatible with maxqi engine</p>

<p>4, firstProtocolVersion is need.</p>

<p>ok,then you can run xboard</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class=""><span class="line">xboard -variant xiangqi -firstProtocolVersion 1 -fcp maxqi</span></code></pre></td></tr></table></div></figure></notextile></div>

<h5 id="review-the-maxqi-code">review the maxqi code</h5>
<p>Now the biggest problem,which I will face, is coming….</p>

<p>Why?</p>

<p>Becaure somebody want to program the engine with 1200 characters.</p>

<p>Here is the code, are you crazy? especially, the Function D()…..</p>

<p>I got the code little by little, and hesitate when D() function come to me…</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>Function D</span><a href="http://fairymax.sourcearchive.com/documentation/4.8q-2/maxqi_8c_source.html">Source Article</a></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
<span class="line-number">23</span>
<span class="line-number">24</span>
<span class="line-number">25</span>
<span class="line-number">26</span>
<span class="line-number">27</span>
<span class="line-number">28</span>
<span class="line-number">29</span>
<span class="line-number">30</span>
<span class="line-number">31</span>
<span class="line-number">32</span>
<span class="line-number">33</span>
<span class="line-number">34</span>
<span class="line-number">35</span>
<span class="line-number">36</span>
<span class="line-number">37</span>
<span class="line-number">38</span>
<span class="line-number">39</span>
<span class="line-number">40</span>
<span class="line-number">41</span>
<span class="line-number">42</span>
<span class="line-number">43</span>
<span class="line-number">44</span>
<span class="line-number">45</span>
<span class="line-number">46</span>
<span class="line-number">47</span>
<span class="line-number">48</span>
<span class="line-number">49</span>
<span class="line-number">50</span>
<span class="line-number">51</span>
<span class="line-number">52</span>
<span class="line-number">53</span>
<span class="line-number">54</span>
<span class="line-number">55</span>
<span class="line-number">56</span>
<span class="line-number">57</span>
<span class="line-number">58</span>
<span class="line-number">59</span>
<span class="line-number">60</span>
<span class="line-number">61</span>
<span class="line-number">62</span>
<span class="line-number">63</span>
<span class="line-number">64</span>
<span class="line-number">65</span>
<span class="line-number">66</span>
<span class="line-number">67</span>
<span class="line-number">68</span>
<span class="line-number">69</span>
<span class="line-number">70</span>
<span class="line-number">71</span>
<span class="line-number">72</span>
<span class="line-number">73</span>
<span class="line-number">74</span>
<span class="line-number">75</span>
<span class="line-number">76</span>
<span class="line-number">77</span>
<span class="line-number">78</span>
<span class="line-number">79</span>
<span class="line-number">80</span>
<span class="line-number">81</span>
<span class="line-number">82</span>
<span class="line-number">83</span>
<span class="line-number">84</span>
<span class="line-number">85</span>
<span class="line-number">86</span>
<span class="line-number">87</span>
<span class="line-number">88</span>
<span class="line-number">89</span>
<span class="line-number">90</span>
<span class="line-number">91</span>
<span class="line-number">92</span>
<span class="line-number">93</span>
<span class="line-number">94</span>
<span class="line-number">95</span>
<span class="line-number">96</span>
</pre></td><td class="code"><pre><code class="c"><span class="line"><span class="n">D</span><span class="p">(</span><span class="n">k</span><span class="p">,</span><span class="n">q</span><span class="p">,</span><span class="n">l</span><span class="p">,</span><span class="n">e</span><span class="p">,</span><span class="n">z</span><span class="p">,</span><span class="n">n</span><span class="p">)</span>          <span class="cm">/* recursive minimax search, k=moving side, n=depth*/</span>
</span><span class="line">    <span class="kt">int</span> <span class="n">k</span><span class="p">,</span><span class="n">q</span><span class="p">,</span><span class="n">l</span><span class="p">,</span><span class="n">e</span><span class="p">,</span><span class="n">z</span><span class="p">,</span><span class="n">n</span><span class="p">;</span>        <span class="cm">/* (q,l)=window, e=current eval. score, E=e.p. sqr.*/</span>
</span><span class="line"><span class="p">{</span>                       <span class="cm">/* e=score, z=prev.dest; J,Z=hashkeys; return score*/</span>
</span><span class="line">    <span class="kt">int</span> <span class="n">j</span><span class="p">,</span><span class="n">r</span><span class="p">,</span><span class="n">m</span><span class="p">,</span><span class="n">v</span><span class="p">,</span><span class="n">d</span><span class="p">,</span><span class="n">h</span><span class="p">,</span><span class="n">i</span><span class="p">,</span><span class="n">P</span><span class="p">,</span><span class="n">V</span><span class="p">,</span><span class="n">f</span><span class="o">=</span><span class="n">J</span><span class="p">,</span><span class="n">g</span><span class="o">=</span><span class="n">Z</span><span class="p">,</span><span class="n">C</span><span class="p">,</span><span class="n">s</span><span class="p">,</span><span class="n">flag</span><span class="p">,</span><span class="n">F</span><span class="p">;</span>
</span><span class="line">    <span class="kt">unsigned</span> <span class="kt">char</span> <span class="n">t</span><span class="p">,</span><span class="n">p</span><span class="p">,</span><span class="n">u</span><span class="p">,</span><span class="n">x</span><span class="p">,</span><span class="n">y</span><span class="p">,</span><span class="n">X</span><span class="p">,</span><span class="n">Y</span><span class="p">,</span><span class="n">B</span><span class="p">,</span><span class="n">lu</span><span class="p">;</span>
</span><span class="line">    <span class="k">struct</span> <span class="n">_</span><span class="o">*</span><span class="n">a</span><span class="o">=</span><span class="n">A</span><span class="o">+</span><span class="p">(</span><span class="n">J</span><span class="o">+</span><span class="n">k</span><span class="o">&amp;</span><span class="n">U</span><span class="o">-</span><span class="mi">1</span><span class="p">);</span>                       <span class="cm">/* lookup pos. in hash table*/</span>
</span><span class="line">    <span class="n">q</span><span class="o">-=</span><span class="n">q</span><span class="o">&lt;</span><span class="n">e</span><span class="p">;</span><span class="n">l</span><span class="o">-=</span><span class="n">l</span><span class="o">&lt;=</span><span class="n">e</span><span class="p">;</span>                               <span class="cm">/* adj. window: delay bonus */</span>
</span><span class="line">    <span class="n">d</span><span class="o">=</span><span class="n">a</span><span class="o">-&gt;</span><span class="n">D</span><span class="p">;</span><span class="n">m</span><span class="o">=</span><span class="n">a</span><span class="o">-&gt;</span><span class="n">V</span><span class="p">;</span><span class="n">F</span><span class="o">=</span><span class="n">a</span><span class="o">-&gt;</span><span class="n">F</span><span class="p">;</span>                         <span class="cm">/* resume at stored depth   */</span>
</span><span class="line">    <span class="n">X</span><span class="o">=</span><span class="n">a</span><span class="o">-&gt;</span><span class="n">X</span><span class="p">;</span><span class="n">Y</span><span class="o">=</span><span class="n">a</span><span class="o">-&gt;</span><span class="n">Y</span><span class="p">;</span>                                <span class="cm">/* start at best-move hint  */</span>
</span><span class="line">    <span class="k">if</span><span class="p">(</span><span class="n">z</span><span class="o">&amp;</span><span class="n">S</span><span class="o">&amp;&amp;</span><span class="n">a</span><span class="o">-&gt;</span><span class="n">K</span><span class="o">==</span><span class="n">Z</span><span class="p">)</span><span class="n">printf</span><span class="p">(</span><span class="s">&quot;# root hit %d %d %x</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span><span class="n">a</span><span class="o">-&gt;</span><span class="n">D</span><span class="p">,</span><span class="n">a</span><span class="o">-&gt;</span><span class="n">V</span><span class="p">,</span><span class="n">a</span><span class="o">-&gt;</span><span class="n">F</span><span class="p">);</span>
</span><span class="line">    <span class="k">if</span><span class="p">(</span><span class="n">a</span><span class="o">-&gt;</span><span class="n">K</span><span class="o">-</span><span class="n">Z</span><span class="o">|</span><span class="n">z</span><span class="o">&amp;</span><span class="n">S</span>  <span class="o">|</span>                              <span class="cm">/* miss: other pos. or empty*/</span>
</span><span class="line">            <span class="o">!</span><span class="p">(</span><span class="n">m</span><span class="o">&lt;=</span><span class="n">q</span><span class="o">|</span><span class="n">F</span><span class="o">&amp;</span><span class="mi">8</span><span class="o">&amp;&amp;</span><span class="n">m</span><span class="o">&gt;=</span><span class="n">l</span><span class="o">|</span><span class="n">F</span><span class="o">&amp;</span><span class="n">S</span><span class="p">))</span>                       <span class="cm">/*   or window incompatible */</span>
</span><span class="line">        <span class="n">d</span><span class="o">=</span><span class="n">X</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="n">Y</span><span class="o">=-</span><span class="mi">1</span><span class="p">;</span>                                  <span class="cm">/* start iter. from scratch */</span>
</span><span class="line">    <span class="n">W</span><span class="p">(</span><span class="n">d</span><span class="o">++&lt;</span><span class="n">n</span><span class="o">||</span><span class="n">d</span><span class="o">&lt;</span><span class="mi">3</span><span class="o">||</span>              <span class="cm">/*** min depth = 2   iterative deepening loop */</span>
</span><span class="line">            <span class="n">z</span><span class="o">&amp;</span><span class="n">S</span><span class="o">&amp;&amp;</span><span class="n">K</span><span class="o">==</span><span class="n">I</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="n">GetTickCount</span><span class="p">()</span><span class="o">-</span><span class="n">Ticks</span><span class="o">&lt;</span><span class="n">tlim</span><span class="o">&amp;</span><span class="n">d</span><span class="o">&lt;=</span><span class="n">MaxDepth</span><span class="o">||</span> <span class="cm">/* root: deepen upto time   */</span>
</span><span class="line">                <span class="p">(</span><span class="n">K</span><span class="o">=</span><span class="n">X</span><span class="p">,</span><span class="n">L</span><span class="o">=</span><span class="n">Y</span><span class="p">,</span><span class="n">d</span><span class="o">=</span><span class="mi">3</span><span class="p">)))</span>                             <span class="cm">/* time&#39;s up: go do best    */</span>
</span><span class="line">    <span class="p">{</span><span class="n">x</span><span class="o">=</span><span class="n">B</span><span class="o">=</span><span class="n">X</span><span class="p">;</span><span class="n">lu</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span>                                  <span class="cm">/* start scan at prev. best */</span>
</span><span class="line">        <span class="n">h</span><span class="o">=</span><span class="n">Y</span><span class="o">-</span><span class="mi">255</span><span class="p">;</span>                                       <span class="cm">/* if move, request 1st try */</span>
</span><span class="line">        <span class="n">P</span><span class="o">=</span><span class="n">d</span><span class="o">&gt;</span><span class="mi">2</span><span class="o">&amp;&amp;</span><span class="n">l</span><span class="o">+</span><span class="n">I</span><span class="o">?</span><span class="n">D</span><span class="p">(</span><span class="mi">16</span><span class="o">-</span><span class="n">k</span><span class="p">,</span><span class="o">-</span><span class="n">l</span><span class="p">,</span><span class="mi">1</span><span class="o">-</span><span class="n">l</span><span class="p">,</span><span class="o">-</span><span class="n">e</span><span class="p">,</span><span class="mi">2</span><span class="o">*</span><span class="n">S</span><span class="p">,</span><span class="n">d</span><span class="o">-</span><span class="mi">3</span><span class="p">)</span><span class="o">:</span><span class="n">I</span><span class="p">;</span>      <span class="cm">/* search null move         */</span>
</span><span class="line">        <span class="n">m</span><span class="o">=-</span><span class="n">P</span><span class="o">&lt;</span><span class="n">l</span><span class="o">|</span><span class="n">R</span><span class="o">&lt;</span><span class="mi">5</span><span class="o">?</span><span class="n">d</span><span class="o">-</span><span class="mi">2</span><span class="o">?-</span><span class="n">I</span><span class="o">:</span><span class="n">e</span><span class="o">:-</span><span class="n">P</span><span class="p">;</span>   <span class="cm">/*** prune if &gt; beta  unconsidered:static eval */</span>
</span><span class="line">        <span class="n">N</span><span class="o">++</span><span class="p">;</span>                                         <span class="cm">/* node count (for timing)  */</span>
</span><span class="line">        <span class="k">do</span><span class="p">{</span><span class="n">u</span><span class="o">=</span><span class="n">b</span><span class="p">[</span><span class="n">x</span><span class="p">];</span>                                   <span class="cm">/* scan board looking for   */</span>
</span><span class="line">            <span class="k">if</span><span class="p">(</span><span class="n">u</span><span class="p">)</span><span class="n">m</span><span class="o">=</span><span class="n">lu</span><span class="o">|</span><span class="n">u</span><span class="o">&amp;</span><span class="mi">15</span><span class="o">^</span><span class="mi">3</span><span class="o">?</span><span class="n">m</span><span class="o">:</span><span class="p">(</span><span class="n">d</span><span class="o">=</span><span class="mi">98</span><span class="p">,</span><span class="n">I</span><span class="p">),</span><span class="n">lu</span><span class="o">=</span><span class="n">u</span><span class="o">&amp;</span><span class="mi">15</span><span class="o">^</span><span class="mi">3</span><span class="p">;</span>        <span class="cm">/* Kings facing each other  */</span>
</span><span class="line">            <span class="k">if</span><span class="p">(</span><span class="n">u</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="n">u</span><span class="o">&amp;</span><span class="mi">16</span><span class="p">)</span><span class="o">==</span><span class="n">k</span><span class="p">)</span>                            <span class="cm">/*  own piece (inefficient!)*/</span>
</span><span class="line">            <span class="p">{</span><span class="n">r</span><span class="o">=</span><span class="n">p</span><span class="o">=</span><span class="n">u</span><span class="o">&amp;</span><span class="mi">15</span><span class="p">;</span>                                  <span class="cm">/* p = piece type (set r&gt;0) */</span>
</span><span class="line">                <span class="n">j</span><span class="o">=</span><span class="n">od</span><span class="p">[</span><span class="n">p</span><span class="p">];</span>                                   <span class="cm">/* first step vector f.piece*/</span>
</span><span class="line">                <span class="n">W</span><span class="p">(</span><span class="n">r</span><span class="o">=</span><span class="n">o</span><span class="p">[</span><span class="o">++</span><span class="n">j</span><span class="p">])</span>                                <span class="cm">/* loop over directions o[] */</span>
</span><span class="line">                <span class="p">{</span><span class="n">A</span><span class="o">:</span>                                        <span class="cm">/* resume normal after best */</span>
</span><span class="line">                    <span class="n">flag</span><span class="o">=</span><span class="n">h</span><span class="o">?</span><span class="mi">3</span><span class="o">:</span><span class="n">of</span><span class="p">[</span><span class="n">j</span><span class="p">];</span>                           <span class="cm">/* move modes (for fairies) */</span>
</span><span class="line">                    <span class="n">y</span><span class="o">=</span><span class="n">x</span><span class="p">;</span>                                      <span class="cm">/* (x,y)=move               */</span>
</span><span class="line">                    <span class="k">do</span><span class="p">{</span>                                       <span class="cm">/* y traverses ray, or:     */</span>
</span><span class="line">                        <span class="n">y</span><span class="o">=</span><span class="n">h</span><span class="o">?</span><span class="n">Y</span><span class="o">:</span><span class="n">y</span><span class="o">+</span><span class="n">r</span><span class="p">;</span>                               <span class="cm">/* sneak in prev. best move */</span>
</span><span class="line">                        <span class="k">if</span><span class="p">(</span><span class="n">y</span><span class="o">&gt;=</span><span class="mi">16</span><span class="o">*</span><span class="n">BH</span><span class="o">|</span><span class="p">(</span><span class="n">y</span><span class="o">&amp;</span><span class="mi">15</span><span class="p">)</span><span class="o">&gt;=</span><span class="n">BW</span><span class="p">)</span><span class="k">break</span><span class="p">;</span>            <span class="cm">/* board edge hit           */</span>
</span><span class="line">                        <span class="n">t</span><span class="o">=</span><span class="n">b</span><span class="p">[</span><span class="n">y</span><span class="p">];</span>                                  <span class="cm">/* captured piece           */</span>
</span><span class="line">                        <span class="k">if</span><span class="p">(</span><span class="n">flag</span><span class="o">&amp;</span><span class="mi">1</span><span class="o">+!</span><span class="n">t</span><span class="p">)</span>                            <span class="cm">/* mode (capt/nonc) allowed?*/</span>
</span><span class="line">                        <span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="n">t</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="n">t</span><span class="o">&amp;</span><span class="mi">16</span><span class="p">)</span><span class="o">==</span><span class="n">k</span><span class="o">||</span><span class="n">flag</span><span class="o">&gt;&gt;</span><span class="mi">10</span><span class="o">&amp;</span><span class="n">zn</span><span class="p">[</span><span class="n">y</span><span class="p">])</span><span class="k">break</span><span class="p">;</span>  <span class="cm">/* capture own or bad zone  */</span>
</span><span class="line">                            <span class="n">i</span><span class="o">=</span><span class="n">w</span><span class="p">[</span><span class="n">t</span><span class="o">&amp;</span><span class="mi">15</span><span class="p">];</span>                              <span class="cm">/* value of capt. piece t   */</span>
</span><span class="line">                            <span class="k">if</span><span class="p">(</span><span class="n">i</span><span class="o">&lt;</span><span class="mi">0</span><span class="p">)</span><span class="n">m</span><span class="o">=</span><span class="n">I</span><span class="p">,</span><span class="n">d</span><span class="o">=</span><span class="mi">98</span><span class="p">;</span>                        <span class="cm">/* K capture                */</span>
</span><span class="line">                            <span class="k">if</span><span class="p">(</span><span class="n">m</span><span class="o">&gt;=</span><span class="n">l</span><span class="o">&amp;</span><span class="n">d</span><span class="o">&gt;</span><span class="mi">1</span><span class="p">)</span><span class="k">goto</span> <span class="n">C</span><span class="p">;</span>                     <span class="cm">/* abort on fail high       */</span>
</span><span class="line">                            <span class="n">v</span><span class="o">=</span><span class="n">d</span><span class="o">-</span><span class="mi">1</span><span class="o">?</span><span class="n">e</span><span class="o">:</span><span class="n">i</span><span class="o">-</span><span class="n">p</span><span class="p">;</span>                            <span class="cm">/*** MVV/LVA scoring if d=1**/</span>
</span><span class="line">                            <span class="k">if</span><span class="p">(</span><span class="n">d</span><span class="o">-!</span><span class="n">t</span><span class="o">&gt;</span><span class="mi">1</span><span class="p">)</span>                              <span class="cm">/*** all captures if d=2  ***/</span>
</span><span class="line">                            <span class="p">{</span><span class="n">v</span><span class="o">=</span><span class="n">centr</span><span class="p">[</span><span class="n">p</span><span class="p">]</span><span class="o">?</span><span class="n">b</span><span class="p">[</span><span class="n">x</span><span class="o">+</span><span class="mi">257</span><span class="p">]</span><span class="o">-</span><span class="n">b</span><span class="p">[</span><span class="n">y</span><span class="o">+</span><span class="mi">257</span><span class="p">]</span><span class="o">:</span><span class="mi">0</span><span class="p">;</span>        <span class="cm">/* center positional pts.   */</span>
</span><span class="line">                                <span class="n">b</span><span class="p">[</span><span class="n">x</span><span class="p">]</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="n">b</span><span class="p">[</span><span class="n">y</span><span class="p">]</span><span class="o">=</span><span class="n">u</span><span class="p">;</span>                         <span class="cm">/* do move                  */</span>
</span><span class="line">                                <span class="n">v</span><span class="o">-=</span><span class="n">w</span><span class="p">[</span><span class="n">p</span><span class="p">]</span><span class="o">&gt;</span><span class="mi">0</span><span class="o">|</span><span class="n">R</span><span class="o">&lt;</span><span class="mi">10</span><span class="o">?</span><span class="mi">0</span><span class="o">:</span><span class="mi">20</span><span class="p">;</span>                   <span class="cm">/*** freeze K in mid-game ***/</span>
</span><span class="line">                                <span class="k">if</span><span class="p">(</span><span class="n">p</span><span class="o">&lt;</span><span class="mi">3</span><span class="p">)</span>                                <span class="cm">/* pawns:                   */</span>
</span><span class="line">                                <span class="p">{</span><span class="n">v</span><span class="o">+=</span><span class="mi">2</span><span class="p">;</span>                                 <span class="cm">/* end-game Pawn-push bonus */</span>
</span><span class="line">                                    <span class="k">if</span><span class="p">(</span><span class="n">zn</span><span class="p">[</span><span class="n">x</span><span class="p">]</span><span class="o">-</span><span class="n">zn</span><span class="p">[</span><span class="n">y</span><span class="p">])</span><span class="n">b</span><span class="p">[</span><span class="n">y</span><span class="p">]</span><span class="o">+=</span><span class="mi">5</span><span class="p">,</span>               <span class="cm">/* upgrade Pawn and         */</span>
</span><span class="line">                                        <span class="n">i</span><span class="o">+=</span><span class="n">w</span><span class="p">[</span><span class="n">p</span><span class="o">+</span><span class="mi">5</span><span class="p">]</span><span class="o">-</span><span class="n">w</span><span class="p">[</span><span class="n">p</span><span class="p">];</span>                      <span class="cm">/*          promotion bonus */</span>
</span><span class="line">                                <span class="p">}</span>
</span><span class="line">                                <span class="k">if</span><span class="p">(</span><span class="n">z</span><span class="o">&amp;</span><span class="n">S</span> <span class="o">&amp;&amp;</span> <span class="n">GamePtr</span><span class="o">&lt;</span><span class="mi">6</span><span class="p">)</span> <span class="n">v</span><span class="o">+=</span><span class="p">(</span><span class="n">rand</span><span class="p">()</span><span class="o">&gt;&gt;</span><span class="mi">10</span><span class="o">&amp;</span><span class="mi">31</span><span class="p">)</span><span class="o">-</span><span class="mi">16</span><span class="p">;</span> <span class="c1">// randomize in root</span>
</span><span class="line">                                <span class="n">J</span><span class="o">+=</span><span class="n">J</span><span class="p">(</span><span class="mi">0</span><span class="p">);</span><span class="n">Z</span><span class="o">+=</span><span class="n">J</span><span class="p">(</span><span class="mi">4</span><span class="p">);</span>
</span><span class="line">                                <span class="n">v</span><span class="o">+=</span><span class="n">e</span><span class="o">+</span><span class="n">i</span><span class="p">;</span><span class="n">V</span><span class="o">=</span><span class="n">m</span><span class="o">&gt;</span><span class="n">q</span><span class="o">?</span><span class="n">m</span><span class="o">:</span><span class="n">q</span><span class="p">;</span>                      <span class="cm">/*** new eval &amp; alpha    ****/</span>
</span><span class="line">                                <span class="n">C</span><span class="o">=</span><span class="n">d</span><span class="o">-</span><span class="mi">1</span><span class="o">-</span><span class="p">(</span><span class="n">d</span><span class="o">&gt;</span><span class="mi">5</span><span class="o">&amp;</span><span class="n">p</span><span class="o">&gt;</span><span class="mi">2</span><span class="o">&amp;!</span><span class="n">t</span><span class="o">&amp;!</span><span class="n">h</span><span class="p">);</span>                 <span class="cm">/* nw depth, reduce non-cpt.*/</span>
</span><span class="line">                                <span class="n">C</span><span class="o">=</span><span class="n">R</span><span class="o">&lt;</span><span class="mi">10</span><span class="o">|</span><span class="n">P</span><span class="o">-</span><span class="n">I</span><span class="o">|</span><span class="n">d</span><span class="o">&lt;</span><span class="mi">3</span><span class="o">||</span><span class="n">t</span><span class="o">&amp;&amp;</span><span class="n">p</span><span class="o">-</span><span class="mi">3</span><span class="o">?</span><span class="n">C</span><span class="o">:</span><span class="n">d</span><span class="p">;</span>            <span class="cm">/* extend 1 ply if in-check */</span>
</span><span class="line">                                <span class="k">do</span>
</span><span class="line">                                    <span class="n">s</span><span class="o">=</span><span class="n">C</span><span class="o">&gt;</span><span class="mi">2</span><span class="o">|</span><span class="n">v</span><span class="o">&gt;</span><span class="n">V</span><span class="o">?-</span><span class="n">D</span><span class="p">(</span><span class="mi">16</span><span class="o">-</span><span class="n">k</span><span class="p">,</span><span class="o">-</span><span class="n">l</span><span class="p">,</span><span class="o">-</span><span class="n">V</span><span class="p">,</span><span class="o">-</span><span class="n">v</span><span class="p">,</span><span class="cm">/*** futility, recursive eval. of reply */</span>
</span><span class="line">                                            <span class="mi">0</span><span class="p">,</span><span class="n">C</span><span class="p">)</span><span class="o">:</span><span class="n">v</span><span class="p">;</span>
</span><span class="line">                                <span class="n">W</span><span class="p">(</span><span class="n">s</span><span class="o">&gt;</span><span class="n">q</span><span class="o">&amp;++</span><span class="n">C</span><span class="o">&lt;</span><span class="n">d</span><span class="p">);</span> <span class="n">v</span><span class="o">=</span><span class="n">s</span><span class="p">;</span>                     <span class="cm">/* no fail:re-srch unreduced*/</span>
</span><span class="line">                                <span class="k">if</span><span class="p">(</span><span class="n">z</span><span class="o">&amp;</span><span class="n">S</span><span class="o">&amp;&amp;</span><span class="n">K</span><span class="o">-</span><span class="n">I</span><span class="p">)</span>                           <span class="cm">/* move pending: check legal*/</span>
</span><span class="line">                                <span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="n">v</span><span class="o">+</span><span class="n">I</span><span class="o">&amp;&amp;</span><span class="n">x</span><span class="o">==</span><span class="n">K</span><span class="o">&amp;</span><span class="n">y</span><span class="o">==</span><span class="n">L</span><span class="p">)</span>                    <span class="cm">/*   if move found          */</span>
</span><span class="line">                                    <span class="p">{</span><span class="n">Q</span><span class="o">=-</span><span class="n">e</span><span class="o">-</span><span class="n">i</span><span class="p">;</span>
</span><span class="line">                                        <span class="n">a</span><span class="o">-&gt;</span><span class="n">D</span><span class="o">=</span><span class="mi">99</span><span class="p">;</span><span class="n">a</span><span class="o">-&gt;</span><span class="n">V</span><span class="o">=</span><span class="mi">500</span><span class="p">;</span>                    <span class="cm">/* lock game in hash as loss*/</span>
</span><span class="line">                                        <span class="n">R</span><span class="o">-=</span><span class="n">i</span><span class="o">/</span><span class="n">FAC</span><span class="p">;</span>                            <span class="cm">/*** total captd material ***/</span>
</span><span class="line">                                        <span class="n">Fifty</span> <span class="o">=</span> <span class="n">t</span><span class="o">|</span><span class="n">p</span><span class="o">&lt;</span><span class="mi">3</span><span class="o">?</span><span class="mi">0</span><span class="o">:</span><span class="n">Fifty</span><span class="o">+</span><span class="mi">1</span><span class="p">;</span>
</span><span class="line">                                        <span class="k">return</span> <span class="n">l</span><span class="p">;}</span>                <span class="cm">/*   &amp; not in check, signal */</span>
</span><span class="line">                                        <span class="n">v</span><span class="o">=</span><span class="n">m</span><span class="p">;</span>                                  <span class="cm">/* (prevent fail-lows on    */</span>
</span><span class="line">                                <span class="p">}</span>                                      <span class="cm">/*   K-capt. replies)       */</span>
</span><span class="line">                                <span class="n">J</span><span class="o">=</span><span class="n">f</span><span class="p">;</span><span class="n">Z</span><span class="o">=</span><span class="n">g</span><span class="p">;</span>
</span><span class="line">                                <span class="n">b</span><span class="p">[</span><span class="n">y</span><span class="p">]</span><span class="o">=</span><span class="n">t</span><span class="p">;</span><span class="n">b</span><span class="p">[</span><span class="n">x</span><span class="p">]</span><span class="o">=</span><span class="n">u</span><span class="p">;</span>                         <span class="cm">/* undo move                */</span>
</span><span class="line">                            <span class="p">}</span>                                       <span class="cm">/*          if non-castling */</span>
</span><span class="line">                            <span class="k">if</span><span class="p">(</span><span class="n">v</span><span class="o">&gt;</span><span class="n">m</span><span class="p">)</span>                                 <span class="cm">/* new best, update max,best*/</span>
</span><span class="line">                                <span class="n">m</span><span class="o">=</span><span class="n">v</span><span class="p">,</span><span class="n">X</span><span class="o">=</span><span class="n">x</span><span class="p">,</span><span class="n">Y</span><span class="o">=</span><span class="n">y</span><span class="p">;</span>                           <span class="cm">/* no marking!              */</span>
</span><span class="line">                            <span class="k">if</span><span class="p">(</span><span class="n">h</span><span class="p">){</span><span class="n">h</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">goto</span> <span class="n">A</span><span class="p">;}</span>                      <span class="cm">/* redo after doing old best*/</span>
</span><span class="line">                        <span class="p">}</span>
</span><span class="line">                        <span class="n">s</span><span class="o">=</span><span class="n">t</span><span class="p">;</span>
</span><span class="line">                        <span class="n">t</span><span class="o">+=</span><span class="n">flag</span><span class="o">&amp;</span><span class="mi">4</span><span class="p">;</span>                               <span class="cm">/* fake capt. for nonsliding*/</span>
</span><span class="line">                        <span class="k">if</span><span class="p">(</span><span class="n">s</span><span class="o">&amp;&amp;</span><span class="n">flag</span><span class="o">&amp;</span><span class="mi">8</span><span class="p">)</span><span class="n">t</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="n">flag</span><span class="o">^=</span><span class="n">flag</span><span class="o">&gt;&gt;</span><span class="mi">4</span><span class="o">&amp;</span><span class="mi">15</span><span class="p">;</span>       <span class="cm">/* hoppers go to next phase */</span>
</span><span class="line">                        <span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="p">(</span><span class="n">flag</span><span class="o">&amp;</span><span class="n">S</span><span class="p">))</span>                            <span class="cm">/* zig-zag piece?           */</span>
</span><span class="line">                            <span class="n">r</span><span class="o">^=</span><span class="n">flag</span><span class="o">&gt;&gt;</span><span class="mi">12</span><span class="p">,</span><span class="n">flag</span><span class="o">^=</span><span class="n">flag</span><span class="o">&gt;&gt;</span><span class="mi">4</span><span class="o">&amp;</span><span class="mi">15</span><span class="p">;</span>           <span class="cm">/* alternate vector &amp; mode  */</span>
</span><span class="line">                    <span class="p">}</span><span class="n">W</span><span class="p">(</span><span class="o">!</span><span class="n">t</span><span class="p">);</span>                                   <span class="cm">/* if not capt. continue ray*/</span>
</span><span class="line">                <span class="p">}}</span>
</span><span class="line">                <span class="k">if</span><span class="p">((</span><span class="o">++</span><span class="n">x</span><span class="o">&amp;</span><span class="mi">15</span><span class="p">)</span><span class="o">&gt;=</span><span class="n">BW</span><span class="p">)</span><span class="n">x</span><span class="o">=</span><span class="n">x</span><span class="o">+</span><span class="mi">16</span><span class="o">&amp;</span><span class="mi">240</span><span class="p">,</span><span class="n">lu</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span>            <span class="cm">/* next sqr. of board, wrap */</span>
</span><span class="line">                <span class="k">if</span><span class="p">(</span><span class="n">x</span><span class="o">&gt;=</span><span class="mi">16</span><span class="o">*</span><span class="n">BH</span><span class="p">)</span><span class="n">x</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span>
</span><span class="line">        <span class="p">}</span><span class="n">W</span><span class="p">(</span><span class="n">x</span><span class="o">-</span><span class="n">B</span><span class="p">);</span>
</span><span class="line"><span class="nl">C:</span><span class="k">if</span><span class="p">(</span><span class="n">a</span><span class="o">-&gt;</span><span class="n">D</span><span class="o">&lt;</span><span class="mi">99</span><span class="p">)</span>                                  <span class="cm">/* protect game history     */</span>
</span><span class="line">      <span class="n">a</span><span class="o">-&gt;</span><span class="n">K</span><span class="o">=</span><span class="n">Z</span><span class="p">,</span><span class="n">a</span><span class="o">-&gt;</span><span class="n">V</span><span class="o">=</span><span class="n">m</span><span class="p">,</span><span class="n">a</span><span class="o">-&gt;</span><span class="n">D</span><span class="o">=</span><span class="n">d</span><span class="p">,</span><span class="n">a</span><span class="o">-&gt;</span><span class="n">X</span><span class="o">=</span><span class="n">X</span><span class="p">,</span>                <span class="cm">/* always store in hash tab */</span>
</span><span class="line">          <span class="n">a</span><span class="o">-&gt;</span><span class="n">F</span><span class="o">=</span><span class="mi">8</span><span class="o">*</span><span class="p">(</span><span class="n">m</span><span class="o">&gt;</span><span class="n">q</span><span class="p">)</span><span class="o">|</span><span class="n">S</span><span class="o">*</span><span class="p">(</span><span class="n">m</span><span class="o">&lt;</span><span class="n">l</span><span class="p">),</span><span class="n">a</span><span class="o">-&gt;</span><span class="n">Y</span><span class="o">=</span><span class="n">Y</span><span class="p">;</span>                <span class="cm">/* move, type (bound/exact),*/</span>
</span><span class="line">  <span class="k">if</span><span class="p">(</span><span class="n">z</span><span class="o">&amp;</span><span class="n">S</span><span class="o">&amp;&amp;</span><span class="n">Post</span><span class="p">){</span>
</span><span class="line">      <span class="n">printf</span><span class="p">(</span><span class="s">&quot;%2d &quot;</span><span class="p">,</span><span class="n">d</span><span class="o">-</span><span class="mi">2</span><span class="p">);</span>
</span><span class="line">      <span class="n">printf</span><span class="p">(</span><span class="s">&quot;%6d &quot;</span><span class="p">,</span><span class="n">m</span><span class="p">);</span>
</span><span class="line">      <span class="n">printf</span><span class="p">(</span><span class="s">&quot;%8d %10d %c%c%c%c</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,(</span><span class="n">GetTickCount</span><span class="p">()</span><span class="o">-</span><span class="n">Ticks</span><span class="p">)</span><span class="o">/</span><span class="mi">10</span><span class="p">,</span><span class="n">N</span><span class="p">,</span>
</span><span class="line">              <span class="sc">&#39;i&#39;</span><span class="o">-</span><span class="p">(</span><span class="n">X</span><span class="o">&gt;&gt;</span><span class="mi">4</span><span class="o">&amp;</span><span class="mi">15</span><span class="p">),</span><span class="sc">&#39;9&#39;</span><span class="o">-</span><span class="p">(</span><span class="n">X</span><span class="o">&amp;</span><span class="mi">15</span><span class="p">),</span><span class="sc">&#39;i&#39;</span><span class="o">-</span><span class="p">(</span><span class="n">Y</span><span class="o">&gt;&gt;</span><span class="mi">4</span><span class="o">&amp;</span><span class="mi">15</span><span class="p">),</span><span class="sc">&#39;9&#39;</span><span class="o">-</span><span class="p">(</span><span class="n">Y</span><span class="o">&amp;</span><span class="mi">15</span><span class="p">)),</span><span class="n">fflush</span><span class="p">(</span><span class="n">stdout</span><span class="p">);}</span>
</span><span class="line">    <span class="p">}</span>                                             <span class="cm">/*    encoded in X S,8 bits */</span>
</span><span class="line">    <span class="k">if</span><span class="p">(</span><span class="n">z</span><span class="o">&amp;</span><span class="mi">4</span><span class="o">*</span><span class="n">S</span><span class="p">)</span><span class="n">K</span><span class="o">=</span><span class="n">X</span><span class="p">,</span><span class="n">L</span><span class="o">=</span><span class="n">Y</span><span class="o">&amp;~</span><span class="n">S</span><span class="p">;</span>
</span><span class="line">    <span class="k">return</span> <span class="n">m</span><span class="o">+=</span><span class="n">m</span><span class="o">&lt;</span><span class="n">e</span><span class="p">;</span>                                <span class="cm">/* delayed-loss bonus       */</span>
</span><span class="line"><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>Then I think for a while….</p>

<p>maxqi engine is so pop, why nobody discuss this??</p>

<p>why no notes? Google maxqi,no good results.</p>

<p>Then I Google fairymax, still no good results…</p>

<p>At last, I saw that the fairymax derived from Micro-Max…</p>

<p>then ,i got everything….</p>

<h5 id="micro-maxhttphomehccnetnlhgmullermax-src2html"><a href="http://home.hccnet.nl/h.g.muller/max-src2.html">micro-max</a></h5>

<h6 id="basic-data-representations"># Basic Data Representations</h6>

<ul>
  <li>Piece Encoding</li>
  <li>Board Representation</li>
  <li>Move Generation</li>
</ul>

<h6 id="basic-moves"># Basic Moves</h6>

<ul>
  <li>En Passant Capture</li>
  <li>Castling</li>
  <li>Pawn Promotions</li>
</ul>

<h6 id="search-algorithm"># Search Algorithm</h6>

<ul>
  <li>Alpha-Beta Minimax</li>
  <li>Quiescence Search</li>
  <li>Do and Undo Move</li>
  <li>Iterative Deepening</li>
  <li>Move Sorting</li>
</ul>

<h6 id="transposition-table"># Transposition Table</h6>

<ul>
  <li>Hashing</li>
  <li>Replacement</li>
</ul>

<h6 id="evaluation">#Evaluation</h6>
<ul>
  <li>Material</li>
  <li>Piece-Square Table</li>
  <li>Checkmate and Stalemate</li>
  <li>Delay Penalty</li>
</ul>

<h6 id="the-interface"># The Interface</h6>
<p>Move Legality Checking</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Database Overview]]></title>
    <link href="http://arekyao.github.io/blog/2013/04/23/database-overview/"/>
    <updated>2013-04-23T22:46:00+08:00</updated>
    <id>http://arekyao.github.io/blog/2013/04/23/database-overview</id>
    <content type="html"><![CDATA[<h2 id="preface">Preface</h2>

<p>What’s the most important?
Infomation!</p>

<p>How to get and save infomation?
Database.</p>

<p>Here is some story about database.</p>

<p>Generally, database can be divided into two arm, SQL and NoSQL.</p>

<h2 id="sqlhttpenwikipediaorgwikistructuredquerylanguage"><a href="http://en.wikipedia.org/wiki/Structured_Query_Language">SQL</a></h2>

<!-- more -->

<p>SQL (Structured Query Language) is very common.<br />
mysql ,sybase and oracle are well-known as database, which is used a lot</p>

<table class="mytable">
  <thead>
    <tr>
      <th>Source</th>
      <th style="text-align: left">Common name</th>
      <th style="text-align: center">Full name</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>Microsoft / Sybase</td>
      <td style="text-align: left">T-SQL</td>
      <td style="text-align: center">Transact-SQL</td>
    </tr>
    <tr>
      <td>MySQL</td>
      <td style="text-align: left">SQL/PSM</td>
      <td style="text-align: center">SQL/Persistent Stored Module (implements SQL/PSM)</td>
    </tr>
    <tr>
      <td>Oracle</td>
      <td style="text-align: left">PL/SQL</td>
      <td style="text-align: center">Procedural Language/SQL (based on Ada)</td>
    </tr>
    <tr>
      <td>Sybase</td>
      <td style="text-align: left">Watcom-SQL	SQL Anywhere</td>
      <td style="text-align: center">Watcom-SQL Dialect</td>
    </tr>
  </tbody>
</table>

<h2 id="nosqlhttpenwikipediaorgwikinosql"><a href="http://en.wikipedia.org/wiki/Nosql">NoSQL</a></h2>

<p>Feature:
It provides mechanism for storage and retrieval of data that use looser consistency models than traditional relational databases  </p>

<p>Achieve horizontal scaling and higher availability</p>

<ul>
  <li>
    <h5 id="document-store">Document Store</h5>
  </li>
</ul>

<p>Document is encoded to some 
In general, they all assume that documents <strong>encapsulate</strong> and <strong>encode</strong> data (or information) in some standard formats or encodings.
Such as, XML, Jason, YAML etc.</p>

<table class="mytable">
  <thead>
    <tr>
      <th>Name</th>
      <th style="text-align: left">Language</th>
      <th style="text-align: center">Notes</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>BaseX</td>
      <td style="text-align: left">Java, XQuery</td>
      <td style="text-align: center">XML database</td>
    </tr>
    <tr>
      <td>Couchbase Server</td>
      <td style="text-align: left">Erlang, C++</td>
      <td style="text-align: center">Support for JSON and binary documents</td>
    </tr>
    <tr>
      <td>Apache CouchDB</td>
      <td style="text-align: left">Erlang</td>
      <td style="text-align: center">JSON store</td>
    </tr>
    <tr>
      <td>MongoDB</td>
      <td style="text-align: left">C++, C#</td>
      <td style="text-align: center">BSON store (binary format JSON)</td>
    </tr>
    <tr>
      <td>SimpleDB</td>
      <td style="text-align: left">Erlang</td>
      <td style="text-align: center"> </td>
    </tr>
    <tr>
      <td>Oracle NoSQL Database</td>
      <td style="text-align: left">Java</td>
      <td style="text-align: center"> </td>
    </tr>
  </tbody>
</table>

<ul>
  <li>
    <h5 id="graph">Graph</h5>
  </li>
</ul>

<p>The kind of data could be social relations, public transport links, road maps or network topologies, for example.</p>

<ul>
  <li>
    <h5 id="key-value-store">Key Value Store</h5>
    <p>kv cache in RAM  </p>
  </li>
</ul>

<p>Radis </p>

<p>Memcached</p>

<p>Keyvalue stores on solid state or rotating disk</p>

<p>MemcacheDB</p>

<p>MongoDB</p>

<ul>
  <li>
    <h5 id="multivalue-database">Multivalue database</h5>
  </li>
</ul>

<p>InfinityDB</p>

<ul>
  <li>
    <h5 id="object-databasehttpenwikipediaorgwikiobjectdatabase"><a href="http://en.wikipedia.org/wiki/Object_database">Object database</a></h5>
  </li>
  <li>
    <h5 id="tabular">Tabular</h5>
  </li>
</ul>

<p>Apache Accumulo</p>

<p>BigTable</p>

<p>Apache Hbase</p>

<p>Hypertable</p>

<p>Reference</p>

<ol>
  <li><a href="">http://nosql-database.org/</a></li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Something Interesting about AI]]></title>
    <link href="http://arekyao.github.io/blog/2013/04/21/something-interesting-about-ai/"/>
    <updated>2013-04-21T19:53:00+08:00</updated>
    <id>http://arekyao.github.io/blog/2013/04/21/something-interesting-about-ai</id>
    <content type="html"><![CDATA[<ul>
  <li>
    <h2 id="generate-music-algorithmicallyhttpwwwdatabozocom20130412generatingmusicalgorithmicallyhtml"><a href="http://www.databozo.com/2013/04/12/Generating_music_algorithmically.html">Generate Music Algorithmically</a></h2>
  </li>
</ul>

<h3 id="music-feature">Music Feature</h3>

<p>Music is compose by lots of note.<br />
The feature of note is frequece and length.</p>

<h3 id="markov-chain">Markov Chain</h3>

<p>The idea tech of Markov Chain is that, the next state (to us,it’s music note) is decided by the previous N states, only.
<!-- more -->
That means:<br />
the next note’s freq is decided by the previous’s.
the next note’s length is decided by the previous’s.</p>

<h3 id="machine-learning">Machine Learning</h3>

<p>First, learn the trans probability throught lots of music sample.</p>

<p>Then, we got the probability from Freq A to Freq B, From length 1/2 to 1/4</p>

<p>Last, generate note by probability, random. Create music file according to the note data.</p>

<h3 id="code">Code</h3>

<p>The lib “pysynth.py” for gen music through two arg (freq and length)</p>

<p>The key program “MarkovBuilder.py” for TransArray&amp;GenerateNote</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
<span class="line-number">23</span>
<span class="line-number">24</span>
<span class="line-number">25</span>
<span class="line-number">26</span>
<span class="line-number">27</span>
<span class="line-number">28</span>
<span class="line-number">29</span>
<span class="line-number">30</span>
<span class="line-number">31</span>
<span class="line-number">32</span>
<span class="line-number">33</span>
<span class="line-number">34</span>
<span class="line-number">35</span>
<span class="line-number">36</span>
<span class="line-number">37</span>
<span class="line-number">38</span>
<span class="line-number">39</span>
<span class="line-number">40</span>
<span class="line-number">41</span>
<span class="line-number">42</span>
<span class="line-number">43</span>
</pre></td><td class="code"><pre><code class="py"><span class="line"><span class="sd">&#39;&#39;&#39;</span>
</span><span class="line"><span class="sd">Created on May 14, 2009</span>
</span><span class="line">
</span><span class="line"><span class="sd">@author: darkxanthos</span>
</span><span class="line"><span class="sd">&#39;&#39;&#39;</span>
</span><span class="line"><span class="kn">import</span> <span class="nn">random</span>
</span><span class="line">
</span><span class="line"><span class="k">class</span> <span class="nc">MarkovBuilder</span><span class="p">:</span>
</span><span class="line">    <span class="k">def</span> <span class="nf">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">value_list</span><span class="p">):</span>
</span><span class="line">        <span class="bp">self</span><span class="o">.</span><span class="n">_values_added</span> <span class="o">=</span> <span class="mi">0</span>
</span><span class="line">        <span class="bp">self</span><span class="o">.</span><span class="n">_reverse_value_lookup</span> <span class="o">=</span> <span class="n">value_list</span>
</span><span class="line">        <span class="bp">self</span><span class="o">.</span><span class="n">_value_lookup</span> <span class="o">=</span> <span class="p">{}</span>
</span><span class="line">        <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="nb">len</span><span class="p">(</span><span class="n">value_list</span><span class="p">)):</span>
</span><span class="line">            <span class="bp">self</span><span class="o">.</span><span class="n">_value_lookup</span><span class="p">[</span><span class="n">value_list</span><span class="p">[</span><span class="n">i</span><span class="p">]]</span> <span class="o">=</span> <span class="n">i</span>
</span><span class="line">        <span class="c">#Initialize our adjacency matrix with the initial</span>
</span><span class="line">        <span class="c">#probabilities for note transitions.</span>
</span><span class="line">        <span class="bp">self</span><span class="o">.</span><span class="n">_matrix</span><span class="o">=</span><span class="p">[[</span><span class="mi">0</span> <span class="k">for</span> <span class="n">x</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="nb">len</span><span class="p">(</span><span class="n">value_list</span><span class="p">))]</span> <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="nb">len</span><span class="p">(</span><span class="n">value_list</span><span class="p">))]</span>
</span><span class="line">
</span><span class="line">    <span class="k">def</span> <span class="nf">add</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">from_value</span><span class="p">,</span> <span class="n">to_value</span><span class="p">):</span>
</span><span class="line">        <span class="sd">&quot;&quot;&quot;Add a path from a note to another note. Re-adding a path between notes will increase the associated weight.&quot;&quot;&quot;</span>
</span><span class="line">        <span class="n">value</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">_value_lookup</span>
</span><span class="line">        <span class="bp">self</span><span class="o">.</span><span class="n">_matrix</span><span class="p">[</span><span class="n">value</span><span class="p">[</span><span class="n">from_value</span><span class="p">]][</span><span class="n">value</span><span class="p">[</span><span class="n">to_value</span><span class="p">]]</span> <span class="o">+=</span> <span class="mi">1</span>
</span><span class="line">        <span class="bp">self</span><span class="o">.</span><span class="n">_values_added</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">_values_added</span> <span class="o">+</span> <span class="mi">1</span>
</span><span class="line">
</span><span class="line">    <span class="k">def</span> <span class="nf">next_value</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">from_value</span><span class="p">):</span>
</span><span class="line">        <span class="n">value</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">_value_lookup</span><span class="p">[</span><span class="n">from_value</span><span class="p">]</span>
</span><span class="line">        <span class="n">value_counts</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">_matrix</span><span class="p">[</span><span class="n">value</span><span class="p">]</span>
</span><span class="line">        <span class="n">value_index</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">randomly_choose</span><span class="p">(</span><span class="n">value_counts</span><span class="p">)</span>
</span><span class="line">        <span class="k">if</span><span class="p">(</span><span class="n">value_index</span> <span class="o">&lt;</span> <span class="mi">0</span><span class="p">):</span>
</span><span class="line">            <span class="k">raise</span> <span class="ne">RuntimeError</span><span class="p">,</span> <span class="s">&quot;Non-existent value selected.&quot;</span>
</span><span class="line">        <span class="k">else</span><span class="p">:</span>
</span><span class="line">            <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">_reverse_value_lookup</span><span class="p">[</span><span class="n">value_index</span><span class="p">]</span>
</span><span class="line">
</span><span class="line">    <span class="k">def</span> <span class="nf">randomly_choose</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">choice_counts</span><span class="p">):</span>
</span><span class="line">        <span class="sd">&quot;&quot;&quot;Given an array of counts, returns the index that was randomly chosen&quot;&quot;&quot;</span>
</span><span class="line">        <span class="n">counted_sum</span> <span class="o">=</span> <span class="mi">0</span>
</span><span class="line">        <span class="n">count_sum</span> <span class="o">=</span> <span class="nb">sum</span><span class="p">(</span><span class="n">choice_counts</span><span class="p">)</span>
</span><span class="line">        <span class="n">selected_count</span> <span class="o">=</span> <span class="n">random</span><span class="o">.</span><span class="n">randrange</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="n">count_sum</span> <span class="o">+</span> <span class="mi">1</span><span class="p">)</span>
</span><span class="line">        <span class="k">for</span> <span class="n">index</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="nb">len</span><span class="p">(</span><span class="n">choice_counts</span><span class="p">)):</span>
</span><span class="line">            <span class="n">counted_sum</span> <span class="o">+=</span> <span class="n">choice_counts</span><span class="p">[</span><span class="n">index</span><span class="p">]</span>
</span><span class="line">            <span class="k">if</span><span class="p">(</span><span class="n">counted_sum</span> <span class="o">&gt;=</span> <span class="n">selected_count</span><span class="p">):</span>
</span><span class="line">                <span class="k">return</span> <span class="n">index</span>
</span><span class="line">        <span class="k">raise</span> <span class="ne">RuntimeError</span><span class="p">,</span> <span class="s">&quot;Impossible value selection made. BAD!&quot;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>Main Program “MarkovMusic.py”</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
<span class="line-number">23</span>
<span class="line-number">24</span>
<span class="line-number">25</span>
<span class="line-number">26</span>
<span class="line-number">27</span>
<span class="line-number">28</span>
<span class="line-number">29</span>
<span class="line-number">30</span>
<span class="line-number">31</span>
<span class="line-number">32</span>
<span class="line-number">33</span>
<span class="line-number">34</span>
<span class="line-number">35</span>
<span class="line-number">36</span>
<span class="line-number">37</span>
<span class="line-number">38</span>
<span class="line-number">39</span>
<span class="line-number">40</span>
<span class="line-number">41</span>
<span class="line-number">42</span>
<span class="line-number">43</span>
<span class="line-number">44</span>
<span class="line-number">45</span>
<span class="line-number">46</span>
<span class="line-number">47</span>
<span class="line-number">48</span>
<span class="line-number">49</span>
<span class="line-number">50</span>
<span class="line-number">51</span>
<span class="line-number">52</span>
<span class="line-number">53</span>
<span class="line-number">54</span>
<span class="line-number">55</span>
<span class="line-number">56</span>
<span class="line-number">57</span>
<span class="line-number">58</span>
<span class="line-number">59</span>
<span class="line-number">60</span>
<span class="line-number">61</span>
<span class="line-number">62</span>
<span class="line-number">63</span>
<span class="line-number">64</span>
<span class="line-number">65</span>
<span class="line-number">66</span>
<span class="line-number">67</span>
<span class="line-number">68</span>
<span class="line-number">69</span>
<span class="line-number">70</span>
<span class="line-number">71</span>
<span class="line-number">72</span>
<span class="line-number">73</span>
<span class="line-number">74</span>
<span class="line-number">75</span>
<span class="line-number">76</span>
<span class="line-number">77</span>
</pre></td><td class="code"><pre><code class="py"><span class="line"><span class="sd">&#39;&#39;&#39;</span>
</span><span class="line"><span class="sd">Created on May 12, 2009</span>
</span><span class="line">
</span><span class="line"><span class="sd">@author: Justin Bozonier</span>
</span><span class="line"><span class="sd">&#39;&#39;&#39;</span>
</span><span class="line"><span class="kn">import</span> <span class="nn">pysynth</span>
</span><span class="line"><span class="kn">from</span> <span class="nn">MarkovBuilder</span> <span class="kn">import</span> <span class="n">MarkovBuilder</span>
</span><span class="line">
</span><span class="line"><span class="k">class</span> <span class="nc">MusicMatrix</span><span class="p">:</span>
</span><span class="line">    <span class="k">def</span> <span class="nf">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
</span><span class="line">        <span class="bp">self</span><span class="o">.</span><span class="n">_previous_note</span> <span class="o">=</span> <span class="bp">None</span>
</span><span class="line">        <span class="bp">self</span><span class="o">.</span><span class="n">_markov</span> <span class="o">=</span> <span class="n">MarkovBuilder</span><span class="p">([</span><span class="s">&quot;a&quot;</span><span class="p">,</span> <span class="s">&quot;a#&quot;</span><span class="p">,</span> <span class="s">&quot;b&quot;</span><span class="p">,</span> <span class="s">&quot;c&quot;</span><span class="p">,</span> <span class="s">&quot;c#&quot;</span><span class="p">,</span> <span class="s">&quot;d&quot;</span><span class="p">,</span> <span class="s">&quot;d#&quot;</span><span class="p">,</span> <span class="s">&quot;e&quot;</span><span class="p">,</span> <span class="s">&quot;f&quot;</span><span class="p">,</span> <span class="s">&quot;f#&quot;</span><span class="p">,</span> <span class="s">&quot;g&quot;</span><span class="p">,</span> <span class="s">&quot;g#&quot;</span><span class="p">])</span>
</span><span class="line">        <span class="bp">self</span><span class="o">.</span><span class="n">_timings</span> <span class="o">=</span> <span class="n">MarkovBuilder</span><span class="p">([</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">8</span><span class="p">,</span> <span class="mi">16</span><span class="p">])</span>
</span><span class="line">
</span><span class="line">    <span class="k">def</span> <span class="nf">add</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">to_note</span><span class="p">):</span>
</span><span class="line">        <span class="sd">&quot;&quot;&quot;Add a path from a note to another note. Re-adding a path between notes will increase the associated weight.&quot;&quot;&quot;</span>
</span><span class="line">        <span class="k">if</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">_previous_note</span> <span class="ow">is</span> <span class="bp">None</span><span class="p">):</span>
</span><span class="line">            <span class="bp">self</span><span class="o">.</span><span class="n">_previous_note</span> <span class="o">=</span> <span class="n">to_note</span>
</span><span class="line">            <span class="k">return</span>
</span><span class="line">        <span class="n">from_note</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">_previous_note</span>
</span><span class="line">        <span class="bp">self</span><span class="o">.</span><span class="n">_markov</span><span class="o">.</span><span class="n">add</span><span class="p">(</span><span class="n">from_note</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span> <span class="n">to_note</span><span class="p">[</span><span class="mi">0</span><span class="p">])</span>
</span><span class="line">        <span class="bp">self</span><span class="o">.</span><span class="n">_timings</span><span class="o">.</span><span class="n">add</span><span class="p">(</span><span class="n">from_note</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span> <span class="n">to_note</span><span class="p">[</span><span class="mi">1</span><span class="p">])</span>
</span><span class="line">        <span class="bp">self</span><span class="o">.</span><span class="n">_previous_note</span> <span class="o">=</span> <span class="n">to_note</span>
</span><span class="line">
</span><span class="line">    <span class="k">def</span> <span class="nf">next_note</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">from_note</span><span class="p">):</span>
</span><span class="line">        <span class="k">return</span> <span class="p">[</span><span class="bp">self</span><span class="o">.</span><span class="n">_markov</span><span class="o">.</span><span class="n">next_value</span><span class="p">(</span><span class="n">from_note</span><span class="p">[</span><span class="mi">0</span><span class="p">]),</span> <span class="bp">self</span><span class="o">.</span><span class="n">_timings</span><span class="o">.</span><span class="n">next_value</span><span class="p">(</span><span class="n">from_note</span><span class="p">[</span><span class="mi">1</span><span class="p">])]</span>
</span><span class="line">
</span><span class="line"><span class="c"># Playing it comes next :)</span>
</span><span class="line"><span class="c">#test = [[&#39;c&#39;,4], [&#39;e&#39;,4], [&#39;g&#39;,4], [&#39;c5&#39;,1]]</span>
</span><span class="line"><span class="c">#pysynth.make_wav(test, fn = &quot;test.wav&quot;)</span>
</span><span class="line">
</span><span class="line"><span class="n">musicLearner</span> <span class="o">=</span> <span class="n">MusicMatrix</span><span class="p">()</span>
</span><span class="line">
</span><span class="line"><span class="c"># Input the melody of Row, Row, Row Your Boat</span>
</span><span class="line"><span class="c"># The MusicMatrix will automatically use this to </span>
</span><span class="line"><span class="c"># model our own song after it.</span>
</span><span class="line"><span class="n">musicLearner</span><span class="o">.</span><span class="n">add</span><span class="p">([</span><span class="s">&quot;c&quot;</span><span class="p">,</span> <span class="mi">4</span><span class="p">])</span>
</span><span class="line"><span class="n">musicLearner</span><span class="o">.</span><span class="n">add</span><span class="p">([</span><span class="s">&quot;c&quot;</span><span class="p">,</span> <span class="mi">4</span><span class="p">])</span>
</span><span class="line"><span class="n">musicLearner</span><span class="o">.</span><span class="n">add</span><span class="p">([</span><span class="s">&quot;c&quot;</span><span class="p">,</span> <span class="mi">4</span><span class="p">])</span>
</span><span class="line"><span class="n">musicLearner</span><span class="o">.</span><span class="n">add</span><span class="p">([</span><span class="s">&quot;d&quot;</span><span class="p">,</span> <span class="mi">8</span><span class="p">])</span>
</span><span class="line"><span class="n">musicLearner</span><span class="o">.</span><span class="n">add</span><span class="p">([</span><span class="s">&quot;e&quot;</span><span class="p">,</span> <span class="mi">4</span><span class="p">])</span>
</span><span class="line"><span class="n">musicLearner</span><span class="o">.</span><span class="n">add</span><span class="p">([</span><span class="s">&quot;e&quot;</span><span class="p">,</span> <span class="mi">4</span><span class="p">])</span>
</span><span class="line"><span class="n">musicLearner</span><span class="o">.</span><span class="n">add</span><span class="p">([</span><span class="s">&quot;d&quot;</span><span class="p">,</span> <span class="mi">8</span><span class="p">])</span>
</span><span class="line"><span class="n">musicLearner</span><span class="o">.</span><span class="n">add</span><span class="p">([</span><span class="s">&quot;e&quot;</span><span class="p">,</span> <span class="mi">4</span><span class="p">])</span>
</span><span class="line"><span class="n">musicLearner</span><span class="o">.</span><span class="n">add</span><span class="p">([</span><span class="s">&quot;f&quot;</span><span class="p">,</span> <span class="mi">8</span><span class="p">])</span>
</span><span class="line"><span class="n">musicLearner</span><span class="o">.</span><span class="n">add</span><span class="p">([</span><span class="s">&quot;g&quot;</span><span class="p">,</span> <span class="mi">2</span><span class="p">])</span>
</span><span class="line">
</span><span class="line"><span class="n">musicLearner</span><span class="o">.</span><span class="n">add</span><span class="p">([</span><span class="s">&quot;c&quot;</span><span class="p">,</span> <span class="mi">8</span><span class="p">])</span>
</span><span class="line"><span class="n">musicLearner</span><span class="o">.</span><span class="n">add</span><span class="p">([</span><span class="s">&quot;c&quot;</span><span class="p">,</span> <span class="mi">8</span><span class="p">])</span>
</span><span class="line"><span class="n">musicLearner</span><span class="o">.</span><span class="n">add</span><span class="p">([</span><span class="s">&quot;c&quot;</span><span class="p">,</span> <span class="mi">8</span><span class="p">])</span>
</span><span class="line">
</span><span class="line"><span class="n">musicLearner</span><span class="o">.</span><span class="n">add</span><span class="p">([</span><span class="s">&quot;g&quot;</span><span class="p">,</span> <span class="mi">8</span><span class="p">])</span>
</span><span class="line"><span class="n">musicLearner</span><span class="o">.</span><span class="n">add</span><span class="p">([</span><span class="s">&quot;g&quot;</span><span class="p">,</span> <span class="mi">8</span><span class="p">])</span>
</span><span class="line"><span class="n">musicLearner</span><span class="o">.</span><span class="n">add</span><span class="p">([</span><span class="s">&quot;g&quot;</span><span class="p">,</span> <span class="mi">8</span><span class="p">])</span>
</span><span class="line">
</span><span class="line"><span class="n">musicLearner</span><span class="o">.</span><span class="n">add</span><span class="p">([</span><span class="s">&quot;e&quot;</span><span class="p">,</span> <span class="mi">8</span><span class="p">])</span>
</span><span class="line"><span class="n">musicLearner</span><span class="o">.</span><span class="n">add</span><span class="p">([</span><span class="s">&quot;e&quot;</span><span class="p">,</span> <span class="mi">8</span><span class="p">])</span>
</span><span class="line"><span class="n">musicLearner</span><span class="o">.</span><span class="n">add</span><span class="p">([</span><span class="s">&quot;e&quot;</span><span class="p">,</span> <span class="mi">8</span><span class="p">])</span>
</span><span class="line">
</span><span class="line"><span class="n">musicLearner</span><span class="o">.</span><span class="n">add</span><span class="p">([</span><span class="s">&quot;c&quot;</span><span class="p">,</span> <span class="mi">8</span><span class="p">])</span>
</span><span class="line"><span class="n">musicLearner</span><span class="o">.</span><span class="n">add</span><span class="p">([</span><span class="s">&quot;c&quot;</span><span class="p">,</span> <span class="mi">8</span><span class="p">])</span>
</span><span class="line"><span class="n">musicLearner</span><span class="o">.</span><span class="n">add</span><span class="p">([</span><span class="s">&quot;c&quot;</span><span class="p">,</span> <span class="mi">8</span><span class="p">])</span>
</span><span class="line">
</span><span class="line"><span class="n">musicLearner</span><span class="o">.</span><span class="n">add</span><span class="p">([</span><span class="s">&quot;g&quot;</span><span class="p">,</span> <span class="mi">4</span><span class="p">])</span>
</span><span class="line"><span class="n">musicLearner</span><span class="o">.</span><span class="n">add</span><span class="p">([</span><span class="s">&quot;f&quot;</span><span class="p">,</span> <span class="mi">8</span><span class="p">])</span>
</span><span class="line"><span class="n">musicLearner</span><span class="o">.</span><span class="n">add</span><span class="p">([</span><span class="s">&quot;e&quot;</span><span class="p">,</span> <span class="mi">4</span><span class="p">])</span>
</span><span class="line"><span class="n">musicLearner</span><span class="o">.</span><span class="n">add</span><span class="p">([</span><span class="s">&quot;d&quot;</span><span class="p">,</span> <span class="mi">8</span><span class="p">])</span>
</span><span class="line"><span class="n">musicLearner</span><span class="o">.</span><span class="n">add</span><span class="p">([</span><span class="s">&quot;c&quot;</span><span class="p">,</span> <span class="mi">2</span><span class="p">])</span>
</span><span class="line">
</span><span class="line"><span class="n">random_score</span> <span class="o">=</span> <span class="p">[]</span>
</span><span class="line"><span class="n">current_note</span> <span class="o">=</span> <span class="p">[</span><span class="s">&quot;c&quot;</span><span class="p">,</span> <span class="mi">4</span><span class="p">]</span>
</span><span class="line"><span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">100</span><span class="p">):</span>
</span><span class="line">    <span class="k">print</span> <span class="n">current_note</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">+</span> <span class="s">&quot;, &quot;</span> <span class="o">+</span> <span class="nb">str</span><span class="p">(</span><span class="n">current_note</span><span class="p">[</span><span class="mi">1</span><span class="p">])</span>
</span><span class="line">    <span class="n">current_note</span> <span class="o">=</span> <span class="n">musicLearner</span><span class="o">.</span><span class="n">next_note</span><span class="p">(</span><span class="n">current_note</span><span class="p">)</span>
</span><span class="line">    <span class="n">random_score</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">current_note</span><span class="p">)</span>
</span><span class="line">
</span><span class="line"><span class="n">pysynth</span><span class="o">.</span><span class="n">make_wav</span><span class="p">(</span><span class="n">random_score</span><span class="p">,</span> <span class="n">fn</span> <span class="o">=</span> <span class="s">&quot;first_score.wav&quot;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>code src: <br />
<a href="http://github.com/jcbozonier/MarkovMusic/tree/master">http://github.com/jcbozonier/MarkovMusic/tree/master</a></p>

<ul>
  <li>
    <h2 id="ai-snakehttphawsteincompostssnake-aihtml"><a href="http://hawstein.com/posts/snake-ai.html">AI Snake</a></h2>
  </li>
</ul>

<h4 id="strategy-1">Strategy 1</h4>

<p>If Target is the food, choose the shortest path</p>

<h4 id="strategy-2">Strategy 2</h4>

<p>If Target is the tail, choose the longest path</p>

<p>code src:<br />
<a href="">https://github.com/Hawstein/snake-ai</a></p>

<ul>
  <li>
    <h2 id="ai-solves-super-mario-bros-and-other-classic-nes-gameshttpwwwwiredcouknewsarchive2013-0412super-mario-solved"><a href="http://www.wired.co.uk/news/archive/2013-04/12/super-mario-solved">AI ‘solves’ Super Mario Bros. and other classic NES games</a></h2>
  </li>
</ul>

<embed src="http://player.youku.com/player.php/sid/XNTQzMTM1NDky/v.swf" allowfullscreen="true" quality="high" width="480" height="400" align="middle" allowscriptaccess="always" type="application/x-shockwave-flash" />

<p><a href="">http://v.youku.com/v_show/id_XNTQzMTM1NDky.html</a></p>

<p><a href="">http://www.cs.cmu.edu/~tom7/mario/mario.pdf</a></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Android Dev on OSX]]></title>
    <link href="http://arekyao.github.io/blog/2013/04/20/android-dev-on-osx/"/>
    <updated>2013-04-20T00:00:00+08:00</updated>
    <id>http://arekyao.github.io/blog/2013/04/20/android-dev-on-osx</id>
    <content type="html"><![CDATA[<h2 id="some-gossip">Some gossip</h2>

<p>Today it prove the conclusion that Google is much better than baidu, esp in Tech Problem.</p>

<p>here is one:</p>

<p>Android Emulation Key HOME is not found on OSX.  </p>

<p>There is not HOME key on OSX.</p>

<p>After lots of try, i got ESC, but it’s BACK key.</p>

<p>By Bidu, try lots of query, it does not work.</p>

<p>By google, it works immediately</p>

<h2 id="android-emulator-key-mapping-on-osx">Android Emulator Key Mapping On OSX</h2>

<!-- more -->

<p>from <a href="">http://developer.android.com/tools/help/emulator.html</a></p>

<p>Home = HOME (FN + left_arrow on Macbooks)<br />
Menu (left softkey) = F2 or Page-up button<br />
Star (right softkey) = Shift-F2 or Page Down<br />
Back = ESC<br />
Call/dial button = F3<br />
Hangup/end call button = F4<br />
Search = F5<br />
Power button = F7<br />
Audio volume up button = KEYPAD_PLUS, Ctrl-F5<br />
Audio volume down button = KEYPAD_MINUS, Ctrl-F6<br />
Camera button = Ctrl-KEYPAD<em>5, Ctrl-F3<br />
Switch to previous layout orientation (for example, portrait, landscape) = KEYPAD</em>7, Ctrl-F11<br />
Switch to next layout orientation (for example, portrait, landscape) = KEYPAD<em>9, Ctrl-F12<br />
Toggle cell networking on/off = F8<br />
Toggle code profiling = F9 (only with -trace startup option)<br />
Toggle fullscreen mode = Alt-Enter<br />
Toggle trackball mode = F6
Enter trackball mode temporarily (while key is pressed) = Delete
DPad left/up/right/down = KEYPAD</em>4/8/6/2
DPad center click = KEYPAD_5
Onion alpha increase/decrease = KEYPAD_MULTIPLY(*) / KEYPAD_DIVIDE(/)</p>

<p><a href="">http://stackoverflow.com/questions/7628606/how-to-emulate-pressing-home-button-in-android-emulator</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[TV series the Practice]]></title>
    <link href="http://arekyao.github.io/blog/2013/04/10/tv-series-the-practice/"/>
    <updated>2013-04-10T22:22:00+08:00</updated>
    <id>http://arekyao.github.io/blog/2013/04/10/tv-series-the-practice</id>
    <content type="html"><![CDATA[<h2 id="whats-the-practice">What’s the practice</h2>

<p>The Practice is an American TV series, legal drama. </p>

<p>This show won the Emmy in 1998 and 1999 for Best Drama Series.<br />
The Practice focused on the law firm of Robert Donnell and Associates (later becoming Donnell, Young, Dole, &amp; Frutt, and ultimately Young, Frutt, &amp; Berluti).   </p>

<p>Every story per ep, is made up one or two cases, including both criminal and civil cases, which often mirror current events.Conflict between legal ethics and personal morality was a recurring theme.   </p>

<!-- more -->

<p>Robert Donnell is the boss, which is tall, handsome, rich, whose gf, linsay Dole and Helen Gamble.<br />
Eugene Young is my favourite lawyer actor, black, strong in debating. <br />
Rebecca Washington, assist of the law firm.<br />
Jimmy Berluti, some poooor guy, fired by last firm for doing something awful and cheating to help bobby donnell.<br />
Ellenor Frutt, fat woman, with a sharp teeth.  </p>

<p>Bobby is an idealist, a lawyer and wanna help the innocent men out.  However, he soon learns that drug dealers and other undeniably guilty clients tend to be the ones who provide the business that keep the firm running.
After realize that, Bobby change his idea that defending for the innocent to defending for the system.</p>

<p>(the jury system, defend lawyer and district attorney PK, the judge is just a monitor, the jury make the decision)</p>

<p>Helen is a DA, wanna to put the bad men into jail, limited to the jury system, which is her tool too.</p>

<p>The Practice is the greatest legal drama, no other series in the same level with it.</p>

<h2 id="my-practice">My Practice</h2>
<p>The practice has eight season.
Seaon 8 is my first.</p>

<p>I got shocked and attracted as soon as the s8ep1. even though, at first the reason is alan shore (some guy from Boston Legal)</p>

<p>Maybe two or three years later, the season 1 ,2, 3 come out ,thanks for Douban KW Group.</p>

<p>Here is the problem.
After KW group has tranlated S1,S2,S3, they decided to stop their work.
The stop reason is heard that Season 4,5,6,7 is not as good as S1-3
However, I still wanna see them, so far</p>

<p>It’s difficult for me to see them totally without any subtitle.
So I got some english subtitle from shooter.cn
Generally, it is OK for me, but still a litter confusing when debating in the law room.
It’s too fast to follow it.</p>

<p>So I decide to do a chn &amp; eng mixed subtitle.</p>

<h2 id="mixed-subtitle">Mixed Subtitle</h2>
<p>1, Got the English subtitle</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
</pre></td><td class="code"><pre><code class=""><span class="line">
</span><span class="line">1
</span><span class="line">00:00:00,312 --&gt; 00:00:01,833
</span><span class="line">Previously on The Practice
</span><span class="line">
</span><span class="line">2
</span><span class="line">00:00:01,959 --&gt; 00:00:03,488
</span><span class="line">Something wrong, Ellenor? 
</span><span class="line">
</span><span class="line">3
</span><span class="line">00:00:03,584 --&gt; 00:00:04,848
</span><span class="line">You came to kill me? 
</span><span class="line">
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>2, translate it to Chinese </p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
</pre></td><td class="code"><pre><code class=""><span class="line">
</span><span class="line">1 
</span><span class="line">00:00:00,312 - &gt; 00:00:01,833 
</span><span class="line">以前的做法 
</span><span class="line">
</span><span class="line">2 
</span><span class="line">00:00:01,959 - &gt; 00:00:03,488 
</span><span class="line">有什么问题，Ellenor？ 
</span><span class="line">
</span><span class="line">3 
</span><span class="line">00:00:03,584 - &gt; 00:00:04,848 
</span><span class="line">你来杀我吗？ 
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>3, Merge it </p>

<p>the code is like this:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
<span class="line-number">23</span>
<span class="line-number">24</span>
<span class="line-number">25</span>
<span class="line-number">26</span>
<span class="line-number">27</span>
<span class="line-number">28</span>
<span class="line-number">29</span>
<span class="line-number">30</span>
<span class="line-number">31</span>
<span class="line-number">32</span>
<span class="line-number">33</span>
<span class="line-number">34</span>
<span class="line-number">35</span>
<span class="line-number">36</span>
<span class="line-number">37</span>
<span class="line-number">38</span>
<span class="line-number">39</span>
<span class="line-number">40</span>
<span class="line-number">41</span>
<span class="line-number">42</span>
<span class="line-number">43</span>
<span class="line-number">44</span>
<span class="line-number">45</span>
<span class="line-number">46</span>
<span class="line-number">47</span>
<span class="line-number">48</span>
<span class="line-number">49</span>
<span class="line-number">50</span>
<span class="line-number">51</span>
<span class="line-number">52</span>
<span class="line-number">53</span>
<span class="line-number">54</span>
<span class="line-number">55</span>
<span class="line-number">56</span>
<span class="line-number">57</span>
<span class="line-number">58</span>
<span class="line-number">59</span>
<span class="line-number">60</span>
<span class="line-number">61</span>
<span class="line-number">62</span>
<span class="line-number">63</span>
<span class="line-number">64</span>
<span class="line-number">65</span>
<span class="line-number">66</span>
<span class="line-number">67</span>
</pre></td><td class="code"><pre><code class="py"><span class="line"><span class="c">#! /usr/bin/env python</span>
</span><span class="line">
</span><span class="line"><span class="kn">import</span> <span class="nn">time</span>
</span><span class="line"><span class="kn">import</span> <span class="nn">sys</span>
</span><span class="line"><span class="kn">import</span> <span class="nn">exceptions</span>
</span><span class="line"><span class="kn">import</span> <span class="nn">string</span>
</span><span class="line">
</span><span class="line">
</span><span class="line"><span class="k">def</span> <span class="nf">main</span><span class="p">(</span><span class="n">argv</span><span class="o">=</span><span class="n">sys</span><span class="o">.</span><span class="n">argv</span><span class="p">):</span>
</span><span class="line">	<span class="n">englist_title_file</span> <span class="o">=</span> <span class="nb">open</span><span class="p">(</span><span class="n">argv</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="s">&quot;r&quot;</span><span class="p">)</span>
</span><span class="line">	<span class="n">chinese_title_file</span> <span class="o">=</span> <span class="nb">open</span><span class="p">(</span><span class="n">argv</span><span class="p">[</span><span class="mi">2</span><span class="p">],</span><span class="s">&quot;r&quot;</span><span class="p">)</span>
</span><span class="line">	<span class="n">mixed_title_file</span> <span class="o">=</span> <span class="nb">open</span><span class="p">(</span><span class="n">argv</span><span class="p">[</span><span class="mi">3</span><span class="p">],</span><span class="s">&quot;w&quot;</span><span class="p">)</span>
</span><span class="line">	<span class="n">sub_index</span> <span class="o">=</span> <span class="mi">1</span>
</span><span class="line">	<span class="n">sub_content</span> <span class="o">=</span> <span class="p">{}</span>
</span><span class="line">	<span class="k">while</span> <span class="mi">1</span> <span class="p">:</span>
</span><span class="line">		<span class="c">### index line</span>
</span><span class="line">		<span class="n">line</span> <span class="o">=</span> <span class="n">englist_title_file</span><span class="o">.</span><span class="n">readline</span><span class="p">()</span>
</span><span class="line">
</span><span class="line">		<span class="k">if</span> <span class="ow">not</span> <span class="n">line</span> <span class="ow">or</span> <span class="n">line</span><span class="o">==</span><span class="s">&quot;&quot;</span> <span class="ow">or</span> <span class="n">line</span><span class="o">==</span><span class="s">&quot;</span><span class="se">\r</span><span class="s">&quot;</span> <span class="ow">or</span> <span class="n">line</span><span class="o">==</span><span class="s">&quot;</span><span class="se">\r\n</span><span class="s">&quot;</span><span class="p">:</span>
</span><span class="line">			<span class="k">break</span>
</span><span class="line">
</span><span class="line">		<span class="k">if</span> <span class="n">sub_index</span> <span class="o">==</span> <span class="n">string</span><span class="o">.</span><span class="n">atoi</span><span class="p">(</span><span class="n">line</span><span class="p">):</span>
</span><span class="line">			<span class="c">### sub time line</span>
</span><span class="line">			<span class="n">englist_title_file</span><span class="o">.</span><span class="n">readline</span><span class="p">()</span>
</span><span class="line">			<span class="c">### english subtitle line</span>
</span><span class="line">			<span class="n">sub_content</span><span class="p">[</span><span class="n">sub_index</span><span class="p">]</span> <span class="o">=</span> <span class="n">englist_title_file</span><span class="o">.</span><span class="n">readline</span><span class="p">()</span>
</span><span class="line">			<span class="c">### blank line</span>
</span><span class="line">			<span class="n">englist_title_file</span><span class="o">.</span><span class="n">readline</span><span class="p">()</span>
</span><span class="line">
</span><span class="line">			<span class="n">sub_index</span> <span class="o">+=</span> <span class="mi">1</span>	
</span><span class="line">	<span class="n">sub_index_max</span> <span class="o">=</span> <span class="n">sub_index</span>		
</span><span class="line">	<span class="n">sub_index</span> <span class="o">=</span> <span class="mi">1</span>	
</span><span class="line">	<span class="k">while</span> <span class="mi">1</span> <span class="p">:</span>
</span><span class="line">		<span class="c">### index line</span>
</span><span class="line">		<span class="n">line</span> <span class="o">=</span> <span class="n">chinese_title_file</span><span class="o">.</span><span class="n">readline</span><span class="p">()</span>
</span><span class="line">		<span class="n">mixed_title_file</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="n">line</span><span class="p">)</span>
</span><span class="line">
</span><span class="line">		<span class="k">print</span> <span class="s">&quot;xxxxx=    &quot;</span><span class="o">+</span><span class="n">line</span>
</span><span class="line">		<span class="k">if</span> <span class="ow">not</span> <span class="n">line</span> <span class="ow">or</span> <span class="n">line</span><span class="o">==</span><span class="s">&quot;&quot;</span> <span class="ow">or</span> <span class="n">line</span><span class="o">==</span><span class="s">&quot;</span><span class="se">\r</span><span class="s">&quot;</span> <span class="ow">or</span> <span class="n">line</span><span class="o">==</span><span class="s">&quot;</span><span class="se">\r\n</span><span class="s">&quot;</span><span class="p">:</span>
</span><span class="line">			<span class="k">break</span>
</span><span class="line">
</span><span class="line">		<span class="k">if</span> <span class="n">sub_index</span> <span class="o">==</span> <span class="n">string</span><span class="o">.</span><span class="n">atoi</span><span class="p">(</span><span class="n">line</span><span class="p">):</span>
</span><span class="line">			<span class="c">### sub time line</span>
</span><span class="line">			<span class="n">line</span> <span class="o">=</span> <span class="n">chinese_title_file</span><span class="o">.</span><span class="n">readline</span><span class="p">()</span>
</span><span class="line">			<span class="n">mixed_title_file</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="n">line</span><span class="p">)</span>
</span><span class="line">			<span class="c">### chinese subtitle line</span>
</span><span class="line">			<span class="n">line</span> <span class="o">=</span> <span class="n">chinese_title_file</span><span class="o">.</span><span class="n">readline</span><span class="p">()</span>
</span><span class="line">			<span class="n">mixed_title_file</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="n">line</span><span class="p">)</span>
</span><span class="line">			<span class="c">### english subtitle line</span>
</span><span class="line">			<span class="n">line</span> <span class="o">=</span> <span class="n">sub_content</span><span class="p">[</span><span class="n">sub_index</span><span class="p">]</span>
</span><span class="line">			<span class="n">mixed_title_file</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="n">line</span><span class="p">)</span>
</span><span class="line">			<span class="c">### blank line</span>
</span><span class="line">			<span class="n">line</span> <span class="o">=</span> <span class="n">chinese_title_file</span><span class="o">.</span><span class="n">readline</span><span class="p">()</span>
</span><span class="line">			<span class="n">mixed_title_file</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="n">line</span><span class="p">)</span>
</span><span class="line">
</span><span class="line">			<span class="n">sub_index</span> <span class="o">+=</span> <span class="mi">1</span>
</span><span class="line">		<span class="k">if</span> <span class="n">sub_index</span> <span class="o">&gt;=</span> <span class="n">sub_index_max</span> <span class="p">:</span>
</span><span class="line">			<span class="k">break</span>
</span><span class="line">
</span><span class="line">	<span class="n">englist_title_file</span><span class="o">.</span><span class="n">close</span><span class="p">()</span>
</span><span class="line">	<span class="n">chinese_title_file</span><span class="o">.</span><span class="n">close</span><span class="p">()</span>
</span><span class="line">	<span class="n">mixed_title_file</span><span class="o">.</span><span class="n">close</span><span class="p">()</span>
</span><span class="line">
</span><span class="line">
</span><span class="line">
</span><span class="line"><span class="k">if</span> <span class="n">__name__</span> <span class="o">==</span> <span class="s">&quot;__main__&quot;</span><span class="p">:</span>
</span><span class="line">	<span class="n">sys</span><span class="o">.</span><span class="n">exit</span><span class="p">(</span><span class="n">main</span><span class="p">())</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>4, The mixed subtitle is done</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
</pre></td><td class="code"><pre><code class="py"><span class="line"><span class="mi">1</span>
</span><span class="line"><span class="mo">00</span><span class="p">:</span><span class="mo">00</span><span class="p">:</span><span class="mo">00</span><span class="p">,</span><span class="mi">312</span> <span class="o">-</span> <span class="o">&gt;</span> <span class="mo">00</span><span class="p">:</span><span class="mo">00</span><span class="p">:</span><span class="mo">01</span><span class="p">,</span><span class="mi">833</span>
</span><span class="line"><span class="err">以前的做法</span>
</span><span class="line"><span class="n">Previously</span> <span class="n">on</span> <span class="n">The</span> <span class="n">Practice</span>
</span><span class="line">
</span><span class="line"><span class="mi">2</span>
</span><span class="line"><span class="mo">00</span><span class="p">:</span><span class="mo">00</span><span class="p">:</span><span class="mo">01</span><span class="p">,</span><span class="mi">959</span> <span class="o">-</span> <span class="o">&gt;</span> <span class="mo">00</span><span class="p">:</span><span class="mo">00</span><span class="p">:</span><span class="mo">03</span><span class="p">,</span><span class="mi">488</span>
</span><span class="line"><span class="err">有什么问题，</span><span class="n">Ellenor</span><span class="err">？</span>
</span><span class="line"><span class="n">Something</span> <span class="n">wrong</span><span class="p">,</span> <span class="n">Ellenor</span><span class="err">?</span>
</span><span class="line">
</span><span class="line"><span class="mi">3</span>
</span><span class="line"><span class="mo">00</span><span class="p">:</span><span class="mo">00</span><span class="p">:</span><span class="mo">03</span><span class="p">,</span><span class="mi">584</span> <span class="o">-</span> <span class="o">&gt;</span> <span class="mo">00</span><span class="p">:</span><span class="mo">00</span><span class="p">:</span><span class="mo">04</span><span class="p">,</span><span class="mi">848</span>
</span><span class="line"><span class="err">你来杀我吗？</span>
</span><span class="line"><span class="n">You</span> <span class="n">came</span> <span class="n">to</span> <span class="n">kill</span> <span class="n">me</span><span class="err">?</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>Is that COOOOOOL?!
Tech Changes World</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Life in China]]></title>
    <link href="http://arekyao.github.io/blog/2013/03/24/life-in-china/"/>
    <updated>2013-03-24T15:54:00+08:00</updated>
    <id>http://arekyao.github.io/blog/2013/03/24/life-in-china</id>
    <content type="html"><![CDATA[<h3 id="life-is-a-stuggle">Life is a stuggle</h3>

<p>Human being is a magical kind of animal.</p>

<p>And as part of animal family, it has one same feature, facing death, every second and every day.</p>

<p>As you know, Everyone has its limited life.</p>

<p>In the limited life, the experience may be colorful and wonderful. 
Or maybe the opposite with bad luck.</p>

<p>So there is a proverb said, life is struggle.
espcially, in China.</p>

<h3 id="when-boy">When boy</h3>

<!-- more -->

<p>When I am a little boy, I always had lots of complain about my parents.
The topics, which makes me unhappy, are lifestyle and the dealing skill…</p>

<p>Every time conplain happened, Dad told me,</p>

<blockquote class="information">
  <p>When you are old enough, having your children, then you can understand us more.</p>
</blockquote>

<p>At the moment, I did not understand it really.</p>

<h3 id="now">Now</h3>

<p>After ten years, more or less, a child come to my life.</p>

<p>More than half a year passed, suddenly, I got it.</p>

<p>What parents spend on their child, is priceless.</p>

<p>Time and Money, is too much, which is uncountable.</p>

<h3 id="what-we-faced-are-facing-and-will">What we faced, are facing and will</h3>

<p>When we are bobies, we are dangerous because of bad milk.</p>

<p>When we are children and young, we have to study hard to learn something. It’s hard.</p>

<p>When we are grown, work is necessary, which is hard, too.</p>

<p>When we are old, we have to do sth for our children,( like our parents, now )</p>

<p>When we are older, death is welcoming us…</p>

<h3 id="why">Why</h3>

<p>We are dying every day.</p>

<p>The resource in the world is limited…</p>

<p>It’s impossble for humans to share that equally</p>

<p>So we have to struggle for that…and So ….</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Air cleaner and English study]]></title>
    <link href="http://arekyao.github.io/blog/2013/03/10/air-cleaner-and-english-study/"/>
    <updated>2013-03-10T00:28:00+08:00</updated>
    <id>http://arekyao.github.io/blog/2013/03/10/air-cleaner-and-english-study</id>
    <content type="html"><![CDATA[<p>Here are two interesting stories.</p>

<p>As you know, Peking is a great city, well-known,as big building, huge population, especially the PM2.5 .
So we decided to buy an air-cleaner.
After considering the brand, the work model of air-cleaning, our choice is the SHARP.
Amazon is my fav E-Commerce platform, we bought gift cards on taobao, then ordered the type.</p>

<p>When the machine is sent home by the Express delivery man, we decided to use it immediately.
Everything is fine, until a month goes away.</p>

<!-- more -->

<p>Yep, you know, the air cleaner should be cleaned every month.
(Some part can not cleaned and it’s disposible)
When I open the machine, I am shocked.</p>

<p>The three layer of the air-filter is wrapped by the plastics.
All of them!!!
Unbelievable!!!</p>

<p>That means we just open it for one month, just the status is open. 
It does not work effectively.
Maybe that’s the reason that the water goes very slowly.
(the air-cleaner have a function: air-humidifying)</p>

<p>The another story is about English study.</p>

<p>Every night, when my baby don’t wanna go to sleep, I will turn on the radio, choose the CNN channel.
Then both She and I will have a good night very soon.</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Machine learning ep2]]></title>
    <link href="http://arekyao.github.io/blog/2013/03/09/machine-learning-ep2/"/>
    <updated>2013-03-09T22:56:00+08:00</updated>
    <id>http://arekyao.github.io/blog/2013/03/09/machine-learning-ep2</id>
    <content type="html"><![CDATA[<ul>
  <li>
    <h4 id="discriminative-learning-algorithm">Discriminative learning algorithm</h4>
  </li>
</ul>

<p>learn 
$$
P(y|x)
$$
or</p>

<script type="math/tex; mode=display"> 
h_{\theta}(x) \in \left \{ 0,1 \right \}
</script>

<p>directly</p>

<!-- more -->

<ul>
  <li>
    <h4 id="generative-learning-algorithm">Generative learning algorithm</h4>
  </li>
</ul>

<p>learn
P(x|y)</p>

<p>then
P(y)</p>

<p>such as Native Bayes</p>

<ul>
  <li>
    <h4 id="laplace-smoothing">Laplace smoothing</h4>
  </li>
</ul>

<p>A/B</p>

<p>==&gt;</p>

<p>(A+1)/(B+1)</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Going to Python World Step by Step]]></title>
    <link href="http://arekyao.github.io/blog/2013/02/17/going-to-python-world-step-by-step/"/>
    <updated>2013-02-17T12:46:00+08:00</updated>
    <id>http://arekyao.github.io/blog/2013/02/17/going-to-python-world-step-by-step</id>
    <content type="html"><![CDATA[<p>First, let me introduce something about develop environment, such as Brew, easy_install,RVM, … etc. </p>

<h1 id="mac-develop-environment">Mac Develop Environment</h1>

<h2 id="homebrew-the-missing-package-manager-for-os-xhttpmxclgithubcomhomebrew"><a href="http://mxcl.github.com/homebrew/">Homebrew: The missing package manager for OS X</a></h2>

<!-- more -->

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class=""><span class="line">$ruby -e "$(curl -fsSL https://raw.github.com/mxcl/homebrew/go)"</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>with brew, you can install anything in command. eg:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class=""><span class="line">$brew install lighttpd</span></code></pre></td></tr></table></div></figure></notextile></div>

<h2 id="easyinstallhttppypipythonorgpypisetuptools"><a href="http://pypi.python.org/pypi/setuptools/">Easy_install</a></h2>
<blockquote>
  <p>Download the appropriate egg for your version of Python (e.g. setuptools-0.6c9-py2.4.egg). Do NOT rename it.
Run it as if it were a shell script, e.g. sh setuptools-0.6c9-py2.4.egg. 
Setuptools will install itself using the matching version of Python (e.g. python2.4), and will place the easy_install executable in the default location for installing Python scripts (as determined by the standard distutils configuration files, or by the Python installation).</p>

</blockquote>

<p>with this, you can install anything abou python package in command. eg:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class=""><span class="line">easy_install xxx</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>BTW: 
You can check package info in “/Library/Python/2.7/site-packages”</p>

<h2 id="rvm-ruby-version-managerhttpsrvmio"><a href="https://rvm.io/">RVM: Ruby Version Manager</a></h2>
<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class=""><span class="line">$ \curl -L https://get.rvm.io | bash -s stable --ruby</span></code></pre></td></tr></table></div></figure></notextile></div>

<hr />

<h1 id="common-python-library">Common Python Library</h1>

<h2 id="nlp">1, NLP:</h2>
<p>nltk:  <a href="http://nltk.org/">http://nltk.org/</a></p>

<p>chinese word segment <a href="https://github.com/fxsjy/jieba">https://github.com/fxsjy/jieba</a></p>

<h2 id="machine-learning">2, Machine Learning</h2>
<p>scikit_learn: <a href="https://pypi.python.org/pypi/scikit-learn/">https://pypi.python.org/pypi/scikit-learn/</a></p>

<p>However,ML’s scikit-learn lib have to depend on lots of other package(scipy….)
Here is a good scipt for mac 10.8 user
<a href="http://fonnesbeck.github.com/ScipySuperpack/">http://fonnesbeck.github.com/ScipySuperpack/</a></p>

<p><a href="https://raw.github.com/fonnesbeck/ScipySuperpack/master/install_superpack.sh">the scipt code</a> :</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
<span class="line-number">23</span>
<span class="line-number">24</span>
<span class="line-number">25</span>
<span class="line-number">26</span>
<span class="line-number">27</span>
<span class="line-number">28</span>
<span class="line-number">29</span>
<span class="line-number">30</span>
<span class="line-number">31</span>
<span class="line-number">32</span>
<span class="line-number">33</span>
<span class="line-number">34</span>
<span class="line-number">35</span>
<span class="line-number">36</span>
<span class="line-number">37</span>
<span class="line-number">38</span>
<span class="line-number">39</span>
<span class="line-number">40</span>
<span class="line-number">41</span>
<span class="line-number">42</span>
<span class="line-number">43</span>
<span class="line-number">44</span>
<span class="line-number">45</span>
<span class="line-number">46</span>
<span class="line-number">47</span>
<span class="line-number">48</span>
<span class="line-number">49</span>
<span class="line-number">50</span>
<span class="line-number">51</span>
<span class="line-number">52</span>
<span class="line-number">53</span>
<span class="line-number">54</span>
<span class="line-number">55</span>
<span class="line-number">56</span>
<span class="line-number">57</span>
<span class="line-number">58</span>
<span class="line-number">59</span>
<span class="line-number">60</span>
<span class="line-number">61</span>
<span class="line-number">62</span>
<span class="line-number">63</span>
<span class="line-number">64</span>
<span class="line-number">65</span>
<span class="line-number">66</span>
<span class="line-number">67</span>
<span class="line-number">68</span>
<span class="line-number">69</span>
<span class="line-number">70</span>
<span class="line-number">71</span>
<span class="line-number">72</span>
<span class="line-number">73</span>
<span class="line-number">74</span>
<span class="line-number">75</span>
<span class="line-number">76</span>
<span class="line-number">77</span>
<span class="line-number">78</span>
<span class="line-number">79</span>
<span class="line-number">80</span>
<span class="line-number">81</span>
<span class="line-number">82</span>
<span class="line-number">83</span>
<span class="line-number">84</span>
<span class="line-number">85</span>
<span class="line-number">86</span>
<span class="line-number">87</span>
<span class="line-number">88</span>
<span class="line-number">89</span>
</pre></td><td class="code"><pre><code class="sh"><span class="line"><span class="c">#!/bin/sh</span>
</span><span class="line"><span class="nv">PYTHON</span><span class="o">=</span><span class="s1">&#39;/usr/bin/python&#39;</span>
</span><span class="line"><span class="nv">GIT_FILENAME</span><span class="o">=</span><span class="s1">&#39;git-1.7.7.3-intel-universal-snow-leopard&#39;</span>
</span><span class="line"><span class="nv">GIT_VOLUME</span><span class="o">=</span><span class="s1">&#39;/Volumes/Git 1.7.7.3 Snow Leopard Intel Universal/&#39;</span>
</span><span class="line"><span class="nv">GFORTRAN</span><span class="o">=</span><span class="s1">&#39;gcc-42-5666.3-darwin11.pkg&#39;</span>
</span><span class="line"><span class="nv">SUDO</span><span class="o">=</span><span class="s1">&#39;sudo&#39;</span>
</span><span class="line">
</span><span class="line"><span class="k">if</span> <span class="o">[</span> -z <span class="s2">&quot;$VIRTUAL_ENV&quot;</span> <span class="o">]</span>; <span class="k">then</span>
</span><span class="line">    <span class="c"># Standard Python env</span>
</span><span class="line">    <span class="nv">PYTHON</span><span class="o">=</span>/usr/bin/python
</span><span class="line">    <span class="nv">SUDO</span><span class="o">=</span><span class="k">${</span><span class="nv">SUDO</span><span class="k">}</span>
</span><span class="line"><span class="k">else</span>
</span><span class="line">    <span class="c"># Virtualenv</span>
</span><span class="line">    <span class="nv">PYTHON</span><span class="o">=</span>python
</span><span class="line">    <span class="nv">SUDO</span><span class="o">=</span><span class="s2">&quot;&quot;</span> <span class="c">#${SUDO} is not required in a virtualenv</span>
</span><span class="line"><span class="k">fi</span>
</span><span class="line">
</span><span class="line"><span class="k">if</span>  <span class="o">[</span> -d <span class="s2">&quot;.git&quot;</span> <span class="o">]</span>; <span class="k">then</span>
</span><span class="line"><span class="k">    </span>
</span><span class="line"><span class="k">    </span><span class="nv">SUPERPACK_PATH</span><span class="o">=</span><span class="s1">&#39;.&#39;</span>
</span><span class="line">
</span><span class="line"><span class="k">else</span>
</span><span class="line"><span class="k">    </span>
</span><span class="line"><span class="k">    </span><span class="nv">SUPERPACK_PATH</span><span class="o">=</span><span class="s1">&#39;ScipySuperpack&#39;</span>
</span><span class="line">
</span><span class="line">    <span class="nb">hash </span>git &amp;&gt; /dev/null
</span><span class="line">    <span class="k">if</span> <span class="o">[</span> <span class="nv">$?</span> -eq 1 <span class="o">]</span>; <span class="k">then</span>
</span><span class="line"><span class="k">        </span><span class="nb">echo</span> <span class="s1">&#39;Downloading Git for OS X ...&#39;</span>
</span><span class="line">        curl -o <span class="k">${</span><span class="nv">GIT_FILENAME</span><span class="k">}</span>.dmg http://git-osx-installer.googlecode.com/files/<span class="k">${</span><span class="nv">GIT_FILENAME</span><span class="k">}</span>.dmg
</span><span class="line">        <span class="nb">echo</span> <span class="s1">&#39;Installing Git ...&#39;</span>
</span><span class="line">        hdiutil mount <span class="k">${</span><span class="nv">GIT_FILENAME</span><span class="k">}</span>.dmg
</span><span class="line">        <span class="k">${</span><span class="nv">SUDO</span><span class="k">}</span> installer -pkg <span class="s2">&quot;${GIT_VOLUME}${GIT_FILENAME}.pkg&quot;</span> -target <span class="s1">&#39;/&#39;</span>
</span><span class="line">        hdiutil unmount <span class="s2">&quot;${GIT_VOLUME}&quot;</span>
</span><span class="line">        <span class="nb">echo</span> <span class="s1">&#39;Cleaning up&#39;</span>
</span><span class="line">        rm <span class="k">${</span><span class="nv">GIT_FILENAME</span><span class="k">}</span>.dmg
</span><span class="line">        <span class="nb">echo</span> <span class="s1">&#39;Cloning Scipy Superpack&#39;</span>
</span><span class="line">        /usr/local/git/bin/git clone --depth<span class="o">=</span>1 git://github.com/fonnesbeck/ScipySuperpack.git
</span><span class="line">    <span class="k">else</span>
</span><span class="line"><span class="k">        </span><span class="nb">echo</span> <span class="s1">&#39;Cloning Scipy Superpack&#39;</span>
</span><span class="line">        git clone --depth<span class="o">=</span>1 git://github.com/fonnesbeck/ScipySuperpack.git
</span><span class="line">    <span class="k">fi</span>
</span><span class="line"><span class="k">fi</span>
</span><span class="line">
</span><span class="line"><span class="c"># hash gfortran &amp;&gt; /dev/null</span>
</span><span class="line"><span class="c"># if [ $? -eq 1 ]; then</span>
</span><span class="line"><span class="nb">echo</span> <span class="s1">&#39;Downloading gFortran ...&#39;</span>
</span><span class="line">curl -o <span class="k">${</span><span class="nv">GFORTRAN</span><span class="k">}</span> http://r.research.att.com/tools/<span class="k">${</span><span class="nv">GFORTRAN</span><span class="k">}</span>
</span><span class="line"><span class="nb">echo</span> <span class="s1">&#39;Installing gFortran ...&#39;</span>
</span><span class="line"><span class="k">${</span><span class="nv">SUDO</span><span class="k">}</span> installer -pkg <span class="k">${</span><span class="nv">GFORTRAN</span><span class="k">}</span> -target <span class="s1">&#39;/&#39;</span>
</span><span class="line"><span class="c"># fi</span>
</span><span class="line">
</span><span class="line"><span class="nb">hash </span>easy_install &amp;&gt; /dev/null
</span><span class="line"><span class="k">if</span> <span class="o">[</span> <span class="nv">$?</span> -eq 1 <span class="o">]</span>; <span class="k">then</span>
</span><span class="line"><span class="k">    </span><span class="nb">echo</span> <span class="s1">&#39;Downloading ez_setup ...&#39;</span>
</span><span class="line">    curl -o ez_setup.py http://peak.telecommunity.com/dist/ez_setup.py
</span><span class="line">    <span class="nb">echo</span> <span class="s1">&#39;Installing ez_setup ...&#39;</span>
</span><span class="line">    <span class="k">${</span><span class="nv">SUDO</span><span class="k">}</span> <span class="s2">&quot;${PYTHON}&quot;</span> ez_setup.py
</span><span class="line">    rm ez_setup.py
</span><span class="line"><span class="k">fi</span>
</span><span class="line">
</span><span class="line"><span class="nb">echo</span> <span class="s1">&#39;Installing Scipy Superpack ...&#39;</span>
</span><span class="line"><span class="k">${</span><span class="nv">SUDO</span><span class="k">}</span> <span class="s2">&quot;${PYTHON}&quot;</span> -m easy_install -N -Z <span class="k">${</span><span class="nv">SUPERPACK_PATH</span><span class="k">}</span>/*.egg
</span><span class="line">
</span><span class="line"><span class="nb">echo</span> <span class="s1">&#39;Installing readline ...&#39;</span>
</span><span class="line"><span class="k">${</span><span class="nv">SUDO</span><span class="k">}</span> <span class="s2">&quot;${PYTHON}&quot;</span> -m easy_install -N -Z readline
</span><span class="line"><span class="nb">echo</span> <span class="s1">&#39;Installing nose ...&#39;</span>
</span><span class="line"><span class="k">${</span><span class="nv">SUDO</span><span class="k">}</span> <span class="s2">&quot;${PYTHON}&quot;</span> -m easy_install -N -Z nose
</span><span class="line"><span class="nb">echo</span> <span class="s1">&#39;Installing six&#39;</span>
</span><span class="line"><span class="k">${</span><span class="nv">SUDO</span><span class="k">}</span> <span class="s2">&quot;${PYTHON}&quot;</span> -m easy_install -N -Z six
</span><span class="line"><span class="nb">echo</span> <span class="s1">&#39;Installing python-dateutil&#39;</span>
</span><span class="line"><span class="k">${</span><span class="nv">SUDO</span><span class="k">}</span> <span class="s2">&quot;${PYTHON}&quot;</span> -m easy_install -N -Z python-dateutil
</span><span class="line"><span class="nb">echo</span> <span class="s1">&#39;Installing pytz&#39;</span>
</span><span class="line"><span class="k">${</span><span class="nv">SUDO</span><span class="k">}</span> <span class="s2">&quot;${PYTHON}&quot;</span> -m easy_install -N -Z pytz
</span><span class="line"><span class="nb">echo</span> <span class="s1">&#39;Installing Tornado&#39;</span>
</span><span class="line"><span class="k">${</span><span class="nv">SUDO</span><span class="k">}</span> <span class="s2">&quot;${PYTHON}&quot;</span> -m easy_install -N -Z tornado
</span><span class="line"><span class="nb">echo</span> <span class="s1">&#39;Installing pyzmq&#39;</span>
</span><span class="line"><span class="k">${</span><span class="nv">SUDO</span><span class="k">}</span> <span class="s2">&quot;${PYTHON}&quot;</span> -m easy_install -N -Z pyzmq
</span><span class="line"><span class="nb">echo</span> <span class="s1">&#39;Installing pika&#39;</span>
</span><span class="line"><span class="k">${</span><span class="nv">SUDO</span><span class="k">}</span> <span class="s2">&quot;${PYTHON}&quot;</span> -m easy_install -N -Z pika
</span><span class="line"><span class="nb">echo</span> <span class="s1">&#39;Installing jinja2&#39;</span>
</span><span class="line"><span class="k">${</span><span class="nv">SUDO</span><span class="k">}</span> <span class="s2">&quot;${PYTHON}&quot;</span> -m easy_install -N -Z jinja2
</span><span class="line"><span class="nb">echo</span> <span class="s1">&#39;Installing patsy&#39;</span>
</span><span class="line"><span class="k">${</span><span class="nv">SUDO</span><span class="k">}</span> <span class="s2">&quot;${PYTHON}&quot;</span> -m easy_install -N -Z patsy
</span><span class="line"><span class="k">if</span>  <span class="o">[</span> ! -d <span class="s2">&quot;.git&quot;</span> <span class="o">]</span>; <span class="k">then</span>
</span><span class="line"><span class="k">    </span><span class="nb">echo</span> <span class="s1">&#39;Cleaning up&#39;</span>
</span><span class="line">    rm -rf <span class="k">${</span><span class="nv">SUPERPACK_PATH</span><span class="k">}</span>
</span><span class="line"><span class="k">fi</span>
</span><span class="line">
</span><span class="line"><span class="nb">echo</span> <span class="s1">&#39;Done&#39;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h2 id="scrapyhttpscrapyorgdownload">3, <a href="http://scrapy.org/download/">Scrapy</a></h2>

<p>A Spider Structure based on Python</p>

<h2 id="ipythonhttpipythonorginstallhtml">4, <a href="http://ipython.org/install.html">IPython</a></h2>
<p>a good Python IDE</p>

<h2 id="web-frameworkhttpwikipythonorgmoinwebframeworks">5, <a href="http://wiki.python.org/moin/WebFrameworks">Web Framework</a></h2>

<p><a href="http://www.douban.com/group/web.py/">Web.py</a></p>

<p><a href="http://www.douban.com/group/django/">Django</a></p>

<p>http://www.douban.com/group/django/</p>

<h2 id="python-study">6, Python study</h2>

<p><a href="">http://gnosis.cx/TPiP/</a></p>

<p><a href="">http://docs.python-guide.org/en/latest/</a></p>

<h2 id="morehttpwwwpythonorgaboutapps"><a href="http://www.python.org/about/apps/">More…</a></h2>

<h2 id="reference">Reference</h2>

<p><a href="http://www.cnblogs.com/vamei/archive/2013/02/06/2892628.html">http://www.cnblogs.com/vamei/archive/2013/02/06/2892628.html</a><br />
<a href="http://www.python.org/about/apps/">http://www.python.org/about/apps/</a><br />
<a href="">http://docs.python-guide.org/en/latest/</a>  </p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Machine Learning ep1]]></title>
    <link href="http://arekyao.github.io/blog/2013/02/16/machine-learning-ep1/"/>
    <updated>2013-02-16T22:35:00+08:00</updated>
    <id>http://arekyao.github.io/blog/2013/02/16/machine-learning-ep1</id>
    <content type="html"><![CDATA[<ul>
  <li>
    <h2 id="the-general-steps-of-machine-learning">The general steps of Machine Learning</h2>
  </li>
</ul>

<h4 id="traning-data--test-data">1, Traning Data &amp; Test Data</h4>

<p>This step is the most important part in machine learning. 
Very easy to ignore and underestimate.</p>

<p>Data is wrong, all the steps afterward are wrong.</p>

<p>More than that, it’s very difficult to understand where is wrong, how to impove that.</p>

<p>Maybe the data can be produced by online logs by user.</p>

<p>Maybe the data can not be gotten from machine, only by humans.</p>

<h4 id="feature-selectionhttpenwikipediaorgwikifeatureselection">2, <a href="http://en.wikipedia.org/wiki/Feature_selection">Feature Selection</a></h4>

<p>The less feature, the faster the model is calculated and updated</p>

<p>The more feature’s meaning is ,the less prabability overfit happens </p>

<p>L1-norm</p>

<p>http://www.cnblogs.com/heaad/archive/2011/01/02/1924088.html</p>

<h4 id="model-choosing">3, Model Choosing</h4>

<p>Different model has its personality</p>

<h4 id="evaluation">4, Evaluation</h4>

<p>RSE</p>

<p>FRTP…</p>

<hr />

<ul>
  <li>
    <h2 id="linear-regressionhttpenwikipediaorgwikilinearregression"><a href="http://en.wikipedia.org/wiki/Linear_regression">Linear Regression</a></h2>
  </li>
</ul>

<p>It’s a simple model,and very useful</p>

<ul>
  <li>
    <h2 id="locally-weighted-linear-regression">Locally Weighted Linear Regression</h2>
  </li>
</ul>

<p>the training data only contain the data near X  (is not it cool?)</p>

<hr />

<ul>
  <li>
    <h2 id="batch-gradient-descent-vs-stochastic-gradient-descent">Batch Gradient Descent vs stochastic gradient descent（随机梯度下降）</h2>
  </li>
</ul>

<h5 id="batch-gradient-descent">Batch Gradient Descent:</h5>

<blockquote>
  <p>You need to run over every training example before doing an update, which means that if you have a large dataset, you might spend much time on getting something that works.</p>
</blockquote>

<h5 id="stochastic-gradient-descent">Stochastic gradient descent:</h5>
<blockquote>
  <p>on the other hand, does updates every time it finds a training example, however, since it only uses one update, it may never converge, although you can still be pretty close to the minimum.</p>
</blockquote>

<p>In conclusion, if your data is large, you might want to use Stochastic Gradient Descent.</p>

<h4 id="newton-method">Newton Method:</h4>
<p>Advantage: fast iteration to get result
Disadvantage: have to invert the N*N’s (N is the number of feature) every step</p>

<ul>
  <li>
    <h2 id="when-to-stop-the-iteration-of-gradient-descent">When to stop the iteration of Gradient Descent</h2>
    <p>It has two ways.</p>
  </li>
</ul>

<p><code>Condition 1: the two iteration's result is so close to ignore</code></p>

<p><code>Condition 2: the loss is very small, which can be ignored</code></p>

<ul>
  <li>parametric learning algorithm &amp; non-parametric learning algorithm</li>
</ul>

<blockquote>
  <p>non-parametric learning: the number of arguments will go with size of training data</p>
</blockquote>

<ul>
  <li>
    <h2 id="exponential-distribution-family">Exponential distribution family</h2>
    <p>eg: Normal Distribution, Poisson Distribution, Bernouli Distribution </p>
  </li>
  <li>
    <h2 id="logistic-regression--softmax-regression">Logistic Regression &amp; Softmax Regression</h2>
    <p>Logistic Regression only 2 kinds
Softmax Regession can solve multi</p>
  </li>
</ul>

<hr />

<h2 id="reference">Reference:</h2>

<p><a href="">http://zhfuzh.blog.163.com/blog/static/14553938720127309539465/</a></p>

<p><a href="">http://blog.csdn.net/pennyliang/article/details/6998517</a></p>

<p><a href="">http://deeplearning.stanford.edu/wiki/index.php/UFLDL%E6%95%99%E7%A8%8B</a></p>

<p>It’s not finished…</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[The Overview of Machine Learning]]></title>
    <link href="http://arekyao.github.io/blog/2013/02/15/the-overview-of-machine-learning/"/>
    <updated>2013-02-15T21:19:00+08:00</updated>
    <id>http://arekyao.github.io/blog/2013/02/15/the-overview-of-machine-learning</id>
    <content type="html"><![CDATA[<blockquote>
  <p>First of all, I have to say, the Machine learning series have a very deep water,:)
I dont have enough time to afford a full explaination, in detail, about the machine learning.
It’s just my study map, or so-called logs..</p>
</blockquote>

<p>Here is the stories of it.</p>

<h2 id="machine-learning">Machine Learning</h2>

<!-- more -->

<p><a href="http://en.wikipedia.org/wiki/Machine_learning">Machine learning</a>, a branch of artificial intelligence, is about the construction and study of systems that can learn from data</p>

<p>Refer to the difference between Machine Learning and Data Mining, the DM is the target, the ML is the way.</p>

<blockquote>
  <p>Machine learning focuses on prediction, based on known properties learned from the training data.
Data mining (which is the analysis step of Knowledge Discovery in Databases) focuses on the discovery of (previously) unknown properties on the data.</p>
</blockquote>

<p>Algorithms Type OF ML</p>

<ul>
  <li>
    <h2 id="supervised-learning">1,Supervised learning</h2>
  </li>
</ul>

<blockquote>
  <p>generates a function that maps inputs to desired outputs (also called labels, because they are often provided by human experts labeling the training examples). For example, in a <code>classification</code> problem, the learner approximates a function mapping a vector into classes by looking at input-output examples of the function.</p>
</blockquote>

<h3 id="decision-tree">+ Decision Tree</h3>

<h3 id="association-rule-learning">+ Association rule learning</h3>

<h3 id="svm">+ SVM</h3>

<h3 id="random-forrest">+ Random Forrest</h3>

<h3 id="naive-bayes-classifier">+ Naive bayes classifier</h3>

<h3 id="linearregression">+ Linear_regression</h3>

<h3 id="section">…</h3>

<ul>
  <li>
    <h2 id="unsupervised-learning">2,Unsupervised learning</h2>
    <blockquote>
      <p>models a set of inputs, like <code>clustering</code>. See also data mining and knowledge discovery. Here, labels are not known during training.</p>
    </blockquote>
  </li>
  <li>
    <h2 id="semi-supervised-learning">3,Semi-supervised learning</h2>
  </li>
</ul>

<blockquote>
  <p>combines both labeled and unlabeled examples to generate an appropriate function or classifier. Transduction, or transductive inference, tries to predict new outputs on specific and fixed (test) cases from observed, specific (training) cases.</p>
</blockquote>

<ul>
  <li>
    <h2 id="reinforcement-learning">4,Reinforcement learning</h2>
    <blockquote>
      <p>learns how to act given an observation of the world. Every action has some impact in the environment, and the environment provides feedback in the form of rewards that guides the learning algorithm.</p>
    </blockquote>
  </li>
  <li>
    <h2 id="learning-to-learn">5,Learning to learn</h2>
    <p>learns its own inductive bias based on previous experience.</p>
  </li>
</ul>

<h2 id="reference">Reference:</h2>
<p>1, <a href="http://v.163.com/special/opencourse/machinelearning.html">网易公开课</a> </p>

<p>2, <a href="http://zhfuzh.blog.163.com/blog/static/14553938720127309539465">行走的馒头</a> </p>

<p>3, <a href="http://cs229.stanford.edu/materials.html">Stanford’s lesson</a></p>

<p>4, <a href="http://www.datasciencecentral.com/profiles/blogs/berkeley-course-on-data-science">Berkeley course on Data Science,北美+德国18名校的数据挖掘、数据分析、人工智能及机器学习课程资源汇总</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Break GFW with Goagent in Android MX2]]></title>
    <link href="http://arekyao.github.io/blog/2013/02/12/break-gfw-with-goagent-in-android-mx2/"/>
    <updated>2013-02-12T15:36:00+08:00</updated>
    <id>http://arekyao.github.io/blog/2013/02/12/break-gfw-with-goagent-in-android-mx2</id>
    <content type="html"><![CDATA[<p>A new phone <a href="http://www.meizu.com/products/mx2fun.html">MX2</a> goes into my life.</p>

<p>with a problem like before.</p>

<p>Facebook, twitter, Youtube are blocked by fucking GFW.</p>

<p>Here is a solution to kick that out of your way.</p>

<h2 id="root-your-phone">1, Root your phone</h2>

<p>MX2 have a pretty function, which give you easy way to root.</p>

<!-- more -->

<p>Just go into Account Menu, and click “you wanna root”, then reboot your phone.</p>

<p>After the phone restart, it’s rooted.</p>

<p>However, it has a bug that will give your alert “will you give the App root Authority” again and again,</p>

<p>unless you are dead or your phone.</p>

<h2 id="install-superuser">2, Install SuperUser</h2>

<p>It is used to get the right of root Authority Publishing from MX2 Flyme system, to solve the problem we referred above.</p>

<p>Better to download the App from Google Play, ( NOT From MX shop, Wandoujia ).</p>

<p>After installing, update the SuperUser in infomation Tab,</p>

<p>it will Make some configuration automatically.</p>

<h2 id="install-goagent">3, Install GoAgent</h2>
<p><a href="https://code.google.com/p/goagent/">Goagent</a>, a open source sofeware, using Google App id’s function to give a tunnel to break GFW.  </p>

<p>Every day ,it can offer 1G per app id, and every Email account can have 10 appids.</p>

<p>Goagent’s design is very good, Language used is python, so you can ignore the system, whatever your PC is based on Windows, Linux, Mac, etc..</p>

<pre><code>apply an account on google appid
download the goagent
make some configuration and upload the server part
make some configuration and start the proxy.py.
then
it works in PC, but not in phone.
</code></pre>

<h2 id="install-gae-proxy">4, Install GAE-proxy</h2>

<p>Again better to download the App from Google Play, ( NOT From MX shop, Wandoujia ).</p>

<p>MX shop and other offical shop can give you the App, which https function have some bugs……</p>

<p>Facebook:</p>

<pre><code>Facebook will identify your ID and phone, by give some Friends' Photo and let you mark it.

Maybe it's suspicious by Facebook's spam checking program, because so many facebook id from same ip gived by Google. 
</code></pre>

<p>Facebook and Twitter can work on Spec App GAE mode, Youtube only works on ALL App GAE mode.</p>

<h2 id="everything-goes-fine">5, Everything goes fine</h2>

<p>That’s all.</p>

<p>Any Problem, you can Solve it by Google.</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[The Days We fight against Eczema]]></title>
    <link href="http://arekyao.github.io/blog/2013/02/10/the-days-we-fight-against-eczema/"/>
    <updated>2013-02-10T12:14:00+08:00</updated>
    <id>http://arekyao.github.io/blog/2013/02/10/the-days-we-fight-against-eczema</id>
    <content type="html"><![CDATA[<p>2012, special year, a cute girl comes into our life, named QianShu.</p>

<h2 id="new-life">New Life</h2>

<p>In her 1st month :</p>

<p>Weight, good.</p>

<p>Height, good.</p>

<p>Breast milk, good.</p>

<p>Everything goes well.</p>

<h2 id="nd-month">2nd Month</h2>

<!-- more -->

<p>However, something changed in 2nd month, that is <a href="http://en.wikipedia.org/wiki/Eczema">ECZEMA</a></p>

<p>In the beginning, we did not pay too much attention to it, 
because almost every new born baby would have this reaction and situation.
(ps: difficult to call it illness).</p>

<p>The eczema is not serious, at that time.
Only a few in face, none in body. Looks bearable for me.</p>

<p>We bought YuMeiJing, which is tranditional, old brand in Beijing.
It’s used by lots of workmates, when they were babies.</p>

<p>It works, when in 1 or 2 weeks. 
After that, it turn worse.</p>

<h2 id="rd-month">3rd Month</h2>

<p>The red spots spread from face to the whole body, including legs, back and butt…
From then on, we got that ,we should take it serious.</p>

<p>We got a lot of infomation on Internet.</p>

<blockquote class="information">
  <p>Symptoms:
      redness, skin edema, itching and dryness, crusting, flaking, blistering, cracking, oozing, or bleeding.</p>

  <pre><code>  Scratching open a healing lesion may result in scarring and may enlarge the rash.
</code></pre>

  <p>Cause:
       The cause of eczema is unknown but is presumed to be a combination of genetic and environmental factors.</p>
</blockquote>

<p>At last, We get used to this kind of view;</p>

<pre><code>The Eczema is a reaction, from the body can not get used to Environment.
</code></pre>

<p>Baby is a new life, from Mom’s body.</p>

<p>Everything is new for it.</p>

<pre><code>It needs to get with Environment, like food, air, water...etc.
</code></pre>

<p>So we take some actions to avoid its allergy.</p>

<pre><code>The most dangerous FOOD (which contain much protein):
milk, eggs, fish, peanut, etc.
</code></pre>

<p>After we forbid those food, it did not look better, at first.</p>

<p>Think…for half a day, we found a suspious food, “Mixed Food Oil”.
The mixed oil contain peanut oil…..:(</p>

<p>After that acts, it goes right way.
Baby’s eczema is beaten and lost its battle field.
Though a few wrong things happened, but the general situation is better than before.</p>

<h2 id="th-month">4th Month</h2>
<p>Air Cleaner&amp; Wet machine is bought before Lunar New Year.
So far, hard to say whether it is useful ,
It need time to prove.</p>

<h2 id="now">Now</h2>
<p>Only its face is still red and hot, and there are lots of red spots on face.
Sometimes good, Sometime bad…</p>

<p>The battle is still on….
Maybe it will never ends…</p>

<p>We will fight against it …. </p>

<h2 id="reference">Reference:</h2>

<p>1, <a href="http://blog.sina.com.cn/doctorcui">Doctor CuiYutao</a></p>

<p>2, <a href="http://en.wikipedia.org/wiki/Eczema">Eczema</a></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How to export video from IP4s]]></title>
    <link href="http://arekyao.github.io/blog/2013/01/20/how-to-export-video-from-ip4s/"/>
    <updated>2013-01-20T18:39:00+08:00</updated>
    <id>http://arekyao.github.io/blog/2013/01/20/how-to-export-video-from-ip4s</id>
    <content type="html"><![CDATA[<p>Recently, a Mac Book Air comes to my life.
As the same as before, a problem comes with it.</p>

<p>First, pls let me introduce some backgrounds.</p>

<h1 id="the-mission">The Mission:</h1>

<p>There are so many Videos, taken by IP4s, which cost too much space on phone.
So I decide to copy them from my phone.</p>

<p>That needs these steps:</p>

<h2 id="copy-them-from-phone">1, Copy them from phone</h2>

<!-- more -->

<p>Option:</p>

<pre><code>ifuncbox, interface good,but it lost the info including "modify time,create time,etc."
phoneview, works good, but it need money, $30 , too much for me. 
itools,  can not work.
...

at last the simple application, iphoto, works!
</code></pre>

<h2 id="rename-them">2, Rename them</h2>

<p>The PM give a MRD, that asks for the name should contain video’s taken time.
Here is the script:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
</pre></td><td class="code"><pre><code class="sh"><span class="line"><span class="c">#!/bin/bash</span>
</span><span class="line">
</span><span class="line"><span class="k">for </span>i in <span class="sb">`</span>ls *.MOV<span class="sb">`</span>;
</span><span class="line"><span class="k">do</span>
</span><span class="line"><span class="k">    </span><span class="nb">echo</span> <span class="nv">$i</span>;
</span><span class="line">    stat <span class="nv">$i</span>;
</span><span class="line">    <span class="nv">sec</span><span class="o">=</span><span class="sb">`</span>stat -t <span class="s2">&quot;%s&quot;</span> <span class="nv">$i</span> | awk  <span class="s1">&#39;{print $12}&#39;</span> | sed <span class="s1">&#39;s/&quot;//g&#39;</span><span class="sb">`</span>
</span><span class="line">    <span class="nv">name_2</span><span class="o">=</span><span class="sb">`</span>date -r <span class="s2">&quot;$sec&quot;</span> <span class="s2">&quot;+%Y%m%d_%H%M%S&quot;</span><span class="sb">`</span>
</span><span class="line">    <span class="nv">name_1</span><span class="o">=</span><span class="sb">`</span><span class="nb">echo</span> <span class="nv">$i</span> | sed <span class="s1">&#39;s/.MOV//&#39;</span><span class="sb">`</span>
</span><span class="line">    <span class="nv">newname</span><span class="o">=</span><span class="sb">`</span><span class="nb">echo</span> <span class="nv">$name_1</span><span class="s2">&quot;_&quot;</span><span class="nv">$name_2</span><span class="s2">&quot;.MOV&quot;</span><span class="sb">`</span>
</span><span class="line">    cp <span class="nv">$i</span> output/<span class="nv">$newname</span>
</span><span class="line"><span class="k">done</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h2 id="convert-and-compress">3, Convert and Compress</h2>

<p>Option</p>

<pre><code>Xilisoft Video Converter Ultimate.

Change some args, like Bitrate,Frame Rate,Video codec, etc.
</code></pre>

<h2 id="thats-all-everything-works-good">That’s all, Everything works good!</h2>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Hello World!]]></title>
    <link href="http://arekyao.github.io/blog/2013/01/10/hello-world/"/>
    <updated>2013-01-10T20:59:00+08:00</updated>
    <id>http://arekyao.github.io/blog/2013/01/10/hello-world</id>
    <content type="html"><![CDATA[<p>It’s my first blog on github.</p>

<p>At the moment,I decide to write my blog,TRY MY BEST,in English.</p>

<p>Maybe it’s hard at first.
I believe it will give me a lot beyond my imagination after that.</p>

<!-- more -->

<h1 id="how-to-build-a-blog-on-hithub">How to build a blog on hithub</h1>

<h2 id="apply-a-account--some-repo">1,  apply a account &amp; some repo</h2>

<pre><code>apply a id on github and a new repo named "yourid.github.com"
</code></pre>

<h2 id="install-rubyjekyllmarkdownetc">2,install ruby,<a href="https://github.com/mreid/jekyll/" title="Jekyll">jekyll</a>,<a href="http://markdown.tw/">markdown</a>,etc</h2>

<pre><code>install rvm to manager ruby version,ruby 1.9 needed 
gem install rdoc
gem install jekyll
gem install rdiscount or kramdown
easy_install Pygments
</code></pre>

<p>this is typical structure in <a href="https://github.com/mreid/jekyll/" title="Jekyll">jekyll</a> frame</p>

<pre><code>|-- _config.yml
|-- _includes
|-- _layouts
|   |-- default.html
|   `-- post.html
|-- _posts
|   |-- 2007-10-29-why-every-programmer-should-play-nethack.textile
|   `-- 2009-04-26-barcamp-boston-4-roundup.textile
|-- _site
`-- index.html
</code></pre>

<h2 id="install-octopress">3,install <a href="https://github.com/imathis/octopress">Octopress</a></h2>

<pre><code>$ rake new_post["title"]
$ rake generate     
$ rake watch       
$ rake preview    
</code></pre>

<h2 id="about-math-block">4, About Math Block</h2>

<p><a href="http://www.ctex.org/LaTeX">LaTeX</a> + <a href="http://www.mathjax.org/">MathJax</a></p>

<pre><code>LaTex is a document markup language and document preparation system for the TeX typesetting program
</code></pre>

<p>LaTex is just a format language, or just a standard. (not a lib or tool, just a language which doesn’t need installed)    </p>

<pre><code>MathJax is a cross-browser JavaScript library that displays mathematical equations in web browser
</code></pre>

<p>MathJax is a library, even though, it does not need installed either. </p>

<pre><code>The easiest way to use MathJax is to link directly to the MathJax distributed network service (see Using the MathJax CDN)
http://docs.mathjax.org/en/latest/installation.html
</code></pre>

<p>LaTex Tools:
  <a href="http://www.codecogs.com/latex/eqneditor.php">Online LaTeX Equation Editor</a></p>

<p>ps : I am so stupid, try my best to download a lib, MathJax…. totally useless.. </p>

<h2 id="about-git">5, About Git</h2>

<p><a href="">http://rogerdudler.github.io/git-guide/index.zh.html</a></p>

<p><a href="">http://marklodato.github.io/visual-git-guide/index-en.html</a></p>

<h3 id="reference">Reference:</h3>

<ul>
  <li><a href="http://www.cnblogs.com/TheGrandDesign/articles/2573282.html">像黑客一样写博客——Jekyll入门</a></li>
  <li><a href="http://fancyoung.com/blog/octopress-study/">技术博客利器——Octopress</a></li>
  <li><a href="http://liuhongjiang.github.com/tech/blog/2012/11/21/math/">公式编辑</a></li>
</ul>

<blockquote class="information">
  <ul>
    <li>Ruby  <br />
      <ul>
        <li><a href="https://github.com/mreid/jekyll/" title="Jekyll">Jekyll</a></li>
        <li><a href="http://tinytree.info/">Bonsai</a> 一个非常简单（但实用）的小脚本</li>
        <li><a href="http://webgen.rubyforge.org/">Webgen</a> 一个较复杂的生成器</li>
      </ul>
    </li>
    <li>Python
      <ul>
        <li><a href="http://ringce.com/hyde">Hyde</a> Jekyll的Python语言实现版本</li>
        <li><a href="http://pypi.python.org/pypi/cyrax">Cyrax</a> 使用Jinja2模板引擎的生成器</li>
      </ul>
    </li>
    <li>PHP
      <ul>
        <li><a href="http://www.phrozn.info/">Phrozn</a> PHP语言实现的静态网站生成器</li>
      </ul>
    </li>
  </ul>
</blockquote>

<h3 id="my-test-table">My Test Table</h3>

<table class="mytable">
  <thead>
    <tr>
      <th>Default aligned</th>
      <th style="text-align: left">Left aligned</th>
      <th style="text-align: center">Center aligned</th>
      <th style="text-align: right">Right aligned</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>First body part</td>
      <td style="text-align: left">Second cell</td>
      <td style="text-align: center">Third cell</td>
      <td style="text-align: right">fourth cell</td>
    </tr>
    <tr>
      <td>Second line</td>
      <td style="text-align: left">foo</td>
      <td style="text-align: center"><strong>strong</strong></td>
      <td style="text-align: right">baz</td>
    </tr>
    <tr>
      <td>Third line</td>
      <td style="text-align: left">quux</td>
      <td style="text-align: center">baz</td>
      <td style="text-align: right">bar</td>
    </tr>
  </tbody>
</table>

<h3 id="my-math-test">My Math Test</h3>

<script type="math/tex; mode=display">% &lt;![CDATA[

\begin{align*}
  & \phi(x,y) = \phi \left(\sum_{i=1}^n x_ie_i, \sum_{j=1}^n y_je_j \right)
  = \sum_{i=1}^n \sum_{j=1}^n x_i y_j \phi(e_i, e_j) = \\
  & (x_1, \ldots, x_n) \left( \begin{array}{ccc}
      \phi(e_1, e_1) & \cdots & \phi(e_1, e_n) \\
      \vdots & \ddots & \vdots \\
      \phi(e_n, e_1) & \cdots & \phi(e_n, e_n)
    \end{array} \right)
  \left( \begin{array}{c}
      y_1 \\
      \vdots \\
      y_n
    \end{array} \right)
\end{align*}
 %]]&gt;</script>

]]></content>
  </entry>
  
</feed>
