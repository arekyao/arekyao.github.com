<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[YY Every Day]]></title>
  <link href="http://arekyao.github.io/atom.xml" rel="self"/>
  <link href="http://arekyao.github.io/"/>
  <updated>2014-02-06T12:15:39+08:00</updated>
  <id>http://arekyao.github.io/</id>
  <author>
    <name><![CDATA[Arek.Yao]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Scraping JavaScript webpages with webkit]]></title>
    <link href="http://arekyao.github.io/blog/2014/02/05/scraping-javascript-webpages-with-webkit/"/>
    <updated>2014-02-05T07:51:00+08:00</updated>
    <id>http://arekyao.github.io/blog/2014/02/05/scraping-javascript-webpages-with-webkit</id>
    <content type="html"><![CDATA[<h2 id="preface">1.Preface</h2>

<p>Nowerdays, there are more and more webpages rendered through javascript, tranditional spider such wget, curl is useless.</p>

<p>An alternative solution is webkit, the open source browser engine used most famously in Apple’s Safari browser. Webkit has now been ported to the Qt framework and can be used through its Python bindings.</p>

<!-- more -->

<p>This solution has those advantages:</p>

<ul>
  <li>browser, lots of pic,js etc, automaticlly done</li>
  <li>Python, my fav language</li>
</ul>

<h2 id="environment">2.Environment</h2>

<h4 id="a-webkit-qtwebkit">a. webkit (QtWebkit)</h4>
<p>It’s ported to Qt, called <a href="http://qt-project.org/doc/qt-4.8/modules.html">QtWebkit</a>. Here is <a href="http://qt-project.org/doc/qt-4.8/install-x11.html">Qt install</a></p>

<ul>
  <li>
    <p>Download the achieve</p>
  </li>
  <li>
    <p><a href="http://qt-project.org/doc/qt-4.8/requirements-x11.html">Dependencies</a></p>
  </li>
</ul>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="bash"><span class="line">sudo apt-get install bison flex libqt4-dev libqt4-opengl-dev libphonon-dev libicu-dev libsqlite3-dev libxext-dev libxrender-dev gperf libfontconfig1-dev libphonon-dev g++
</span></code></pre></td></tr></table></div></figure></notextile></div>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="bash"><span class="line">sudo apt-get build-dep qt4-qmake libqt4-webkit
</span></code></pre></td></tr></table></div></figure></notextile></div>

<ul>
  <li>Compiling</li>
</ul>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
</pre></td><td class="code"><pre><code class="bash"><span class="line">./configure
</span><span class="line">make
</span><span class="line">make install
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>Pay attention to configure’s log, webkit module should be “yes”</p>

<p>WebKit module ………. yes</p>

<h4 id="b-pyqt">b. PyQt</h4>

<p><a href="http://www.riverbankcomputing.co.uk/software/pyqt/intro">PyQt</a> is a set of Python v2 and v3 bindings for Digia’s Qt application framework and runs on all platforms supported by Qt including Windows, MacOS/X and Linux. PyQt5 supports Qt v5. PyQt4 supports Qt v4 and will build against Qt v5. The bindings are implemented as a set of Python modules and contain over 620 classes.</p>

<p>ps: another option is <a href="http://qt-project.org/wiki/PySide">PySide</a></p>

<ul>
  <li>Sip install</li>
</ul>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
</pre></td><td class="code"><pre><code class="bash"><span class="line">sudo apt-get install python-dev
</span><span class="line">
</span><span class="line">sudo apt-get install libqt4-dev
</span><span class="line">
</span><span class="line">sudo apt-get install python-qt4
</span><span class="line">
</span><span class="line">python configure.py
</span><span class="line">
</span><span class="line">make
</span><span class="line">
</span><span class="line">make install
</span></code></pre></td></tr></table></div></figure></notextile></div>

<ul>
  <li>PyQt4 install</li>
</ul>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
</pre></td><td class="code"><pre><code class="bash"><span class="line">python configure.py
</span><span class="line">
</span><span class="line">make
</span><span class="line">
</span><span class="line">make install
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>ps1: you can see this in “/your/python/env/share/sip/PyQt4”, if your sip works. </p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class="bash"><span class="line">phonon  QtCore  QtDeclarative  QtGui   QtMultimedia  QtOpenGL  QtScriptTools  QtSvg   QtWebKit  QtXmlPatterns
</span><span class="line">Qt      QtDBus  QtDesigner     QtHelp  QtNetwork     QtScript  QtSql          QtTest  QtXml
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>ps2: you can sess this in “env/lib/python2.7/site-packages/PyQt4”,if your python package works.  </p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
</pre></td><td class="code"><pre><code class="bash"><span class="line">__init__.py   pyqtconfig.py  QtDeclarative.so  QtHelp.so        QtOpenGL.so       Qt.so     QtTest.so         QtXml.so
</span><span class="line">__init__.pyc  QtCore.so      QtDesigner.so     QtMultimedia.so  QtScript.so       QtSql.so  QtWebKit.so       uic
</span><span class="line">phonon.so     QtDBus.so      QtGui.so          QtNetwork.so     QtScriptTools.so  QtSvg.so  QtXmlPatterns.so
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h4 id="c-xvfb">c. Xvfb</h4>

<p>If you access your sever by ssh, without Graphic Interface, xvfb is one of your choice.</p>

<p>The error log is:</p>

<p>“xxxxxx cannot connect to X server”</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
</pre></td><td class="code"><pre><code class="bash"><span class="line">sudo apt-get xvfb
</span><span class="line">
</span><span class="line">xvfb-run --server-args<span class="o">=</span><span class="s2">&quot;-screen 0, 640x480x24&quot;</span> python xxxxx.py
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h4 id="d-ttp-and-chinese">d. TTP and Chinese</h4>

<p>Last, qtwebkit works, but maybe you have a new problem is that, chinese word in webkit is [][][][].</p>

<p>TrueType,ttp is the root of the problem, here is the way:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
</pre></td><td class="code"><pre><code class="bash"><span class="line">sudo apt-get update
</span><span class="line">sudo apt-get install ttf-arphic-ukai ttf-arphic-uming
</span><span class="line">sudo apt-get install ttf-wqy-zenhei
</span><span class="line">sudo <span class="nb">fc</span>-cache -v
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h2 id="one-example">3.One Example</h2>

<p>Here is a simple class that renders a webpage (including executing any JavaScript) and then saves the final HTML to a file:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
</pre></td><td class="code"><pre><code class="python"><span class="line"><span class="kn">import</span> <span class="nn">sys</span>
</span><span class="line"><span class="kn">from</span> <span class="nn">PyQt4.QtGui</span> <span class="kn">import</span> <span class="o">*</span>
</span><span class="line"><span class="kn">from</span> <span class="nn">PyQt4.QtCore</span> <span class="kn">import</span> <span class="o">*</span>
</span><span class="line"><span class="kn">from</span> <span class="nn">PyQt4.QtWebKit</span> <span class="kn">import</span> <span class="o">*</span>
</span><span class="line">
</span><span class="line"><span class="k">class</span> <span class="nc">Render</span><span class="p">(</span><span class="n">QWebPage</span><span class="p">):</span>
</span><span class="line">  <span class="k">def</span> <span class="nf">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">url</span><span class="p">):</span>
</span><span class="line">    <span class="bp">self</span><span class="o">.</span><span class="n">app</span> <span class="o">=</span> <span class="n">QApplication</span><span class="p">(</span><span class="n">sys</span><span class="o">.</span><span class="n">argv</span><span class="p">)</span>
</span><span class="line">    <span class="n">QWebPage</span><span class="o">.</span><span class="n">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">)</span>
</span><span class="line">    <span class="bp">self</span><span class="o">.</span><span class="n">loadFinished</span><span class="o">.</span><span class="n">connect</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">_loadFinished</span><span class="p">)</span>
</span><span class="line">    <span class="bp">self</span><span class="o">.</span><span class="n">mainFrame</span><span class="p">()</span><span class="o">.</span><span class="n">load</span><span class="p">(</span><span class="n">QUrl</span><span class="p">(</span><span class="n">url</span><span class="p">))</span>
</span><span class="line">    <span class="bp">self</span><span class="o">.</span><span class="n">app</span><span class="o">.</span><span class="n">exec_</span><span class="p">()</span>
</span><span class="line">
</span><span class="line">  <span class="k">def</span> <span class="nf">_loadFinished</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">result</span><span class="p">):</span>
</span><span class="line">    <span class="bp">self</span><span class="o">.</span><span class="n">frame</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">mainFrame</span><span class="p">()</span>
</span><span class="line">    <span class="bp">self</span><span class="o">.</span><span class="n">app</span><span class="o">.</span><span class="n">quit</span><span class="p">()</span>
</span><span class="line">
</span><span class="line"><span class="n">url</span> <span class="o">=</span> <span class="s">&#39;http://webscraping.com&#39;</span>
</span><span class="line"><span class="n">r</span> <span class="o">=</span> <span class="n">Render</span><span class="p">(</span><span class="n">url</span><span class="p">)</span>
</span><span class="line"><span class="n">html</span> <span class="o">=</span> <span class="n">r</span><span class="o">.</span><span class="n">frame</span><span class="o">.</span><span class="n">toHtml</span><span class="p">()</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Magnet Searcher Engine, DHT Crawler, P2P Resource Saver]]></title>
    <link href="http://arekyao.github.io/blog/2013/11/17/dht-crawler-p2p-resource-saver/"/>
    <updated>2013-11-17T00:07:00+08:00</updated>
    <id>http://arekyao.github.io/blog/2013/11/17/dht-crawler-p2p-resource-saver</id>
    <content type="html"><![CDATA[<h2 id="preface">1.Preface</h2>

<p>In China, Pirate Party, as hot as The Communist Party, can get some resources like movies, books, tv series, easily and free, without danger because of some reason.</p>

<!-- more -->

<p>And there are too many ways to get them, such as http, ftp, bt, ed2k and too many tools to work in protocol as refer.  However, one of the worst things is how to find the links.  </p>

<p>BT and EMule is the most popular, because it works by p2p tech (peer to peer, a computing or networking distributed application architecture that partitions tasks or workloads among peers)  </p>

<p><a href="http://en.wikipedia.org/wiki/Distributed_hash_table">DHT</a> is more advantaged architecture, very interesting, which has two key feature:</p>

<p>a, distributed, peer to peer<br />
b, decentralized  </p>

<p>decentralized (no boss, democracy) and distributed (every small person involved in the jobs, but the team, the big team is great, beyond your imagination)</p>

<p>Some product list is like this:</p>

<p><a href="http://bt.shousibaocai.com/">磁力搜索</a></p>

<p><a href="http://www.wotorrent.com/">磁力搜索引擎</a></p>

<p><a href="http://cili.so/">磁力搜</a></p>

<h2 id="magnet-searcher-engine">2.Magnet Searcher Engine</h2>

<p>A search engine should have three parts:</p>

<h4 id="a-data">a, data</h4>

<p>The key module, you have to own the magnet links.<br />
Searcher engine, like google, baidu? yep ,one way.  </p>

<p>The greater way is get them by dht crawler which i will give the desciption later.</p>

<h4 id="b-index--weight">b, index &amp; weight</h4>

<p>Making the index, for latter search more quickly.<br />
Give every link some weight, and it will be used in rank</p>

<h4 id="c-search--rank">c, search &amp; rank</h4>

<p>the service for keyword search
rank it 
some post process, like making unique, making some special format better rank, etc</p>

<h2 id="data-module---dht-crawler">3, Data Module - DHT Crawler</h2>

<p>It works in THREE steps: getting id, detail and file</p>

<h4 id="a-get-the-source-id">a, get the source id</h4>

<p>According to DHT procotol, you can pretend a p2p client, get all info by peers’s “get_peers” package</p>

<p>The more code: <a href="https://github.com/arekyao/dht-crawler">https://github.com/arekyao/dht-crawler</a></p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
<span class="line-number">23</span>
<span class="line-number">24</span>
<span class="line-number">25</span>
<span class="line-number">26</span>
<span class="line-number">27</span>
<span class="line-number">28</span>
<span class="line-number">29</span>
<span class="line-number">30</span>
<span class="line-number">31</span>
<span class="line-number">32</span>
<span class="line-number">33</span>
<span class="line-number">34</span>
<span class="line-number">35</span>
<span class="line-number">36</span>
<span class="line-number">37</span>
<span class="line-number">38</span>
<span class="line-number">39</span>
<span class="line-number">40</span>
<span class="line-number">41</span>
<span class="line-number">42</span>
</pre></td><td class="code"><pre><code class="python"><span class="line"><span class="k">def</span> <span class="nf">handle_query</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">message</span><span class="p">):</span>
</span><span class="line">        <span class="n">trans_id</span> <span class="o">=</span> <span class="n">message</span><span class="p">[</span><span class="s">&quot;t&quot;</span><span class="p">]</span>
</span><span class="line">        <span class="n">query_type</span> <span class="o">=</span> <span class="n">message</span><span class="p">[</span><span class="s">&quot;q&quot;</span><span class="p">]</span>
</span><span class="line">        <span class="n">args</span> <span class="o">=</span> <span class="n">message</span><span class="p">[</span><span class="s">&quot;a&quot;</span><span class="p">]</span>
</span><span class="line">        <span class="n">node_id</span> <span class="o">=</span> <span class="n">args</span><span class="p">[</span><span class="s">&quot;id&quot;</span><span class="p">]</span>
</span><span class="line">
</span><span class="line">        <span class="n">client_host</span><span class="p">,</span> <span class="n">client_port</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">client_address</span>
</span><span class="line">        <span class="n">logger</span><span class="o">.</span><span class="n">debug</span><span class="p">(</span><span class="s">&quot;Query message </span><span class="si">%s</span><span class="s"> from </span><span class="si">%s</span><span class="s">:</span><span class="si">%d</span><span class="s">, id:</span><span class="si">%r</span><span class="s">&quot;</span> <span class="o">%</span> <span class="p">(</span><span class="n">query_type</span><span class="p">,</span> <span class="n">client_host</span><span class="p">,</span> <span class="n">client_port</span><span class="p">,</span> <span class="n">node_id</span><span class="o">.</span><span class="n">encode</span><span class="p">(</span><span class="s">&quot;hex&quot;</span><span class="p">)))</span>
</span><span class="line">
</span><span class="line">        <span class="c"># Do we know already about this node?</span>
</span><span class="line">        <span class="n">node</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">server</span><span class="o">.</span><span class="n">dht</span><span class="o">.</span><span class="n">rt</span><span class="o">.</span><span class="n">node_by_id</span><span class="p">(</span><span class="n">node_id</span><span class="p">)</span>
</span><span class="line">        <span class="k">if</span> <span class="ow">not</span> <span class="n">node</span><span class="p">:</span>
</span><span class="line">            <span class="n">node</span> <span class="o">=</span> <span class="n">Node</span><span class="p">(</span><span class="n">client_host</span><span class="p">,</span> <span class="n">client_port</span><span class="p">,</span> <span class="n">node_id</span><span class="p">)</span>
</span><span class="line">            <span class="n">logger</span><span class="o">.</span><span class="n">debug</span><span class="p">(</span><span class="s">&quot;We don`t know about </span><span class="si">%r</span><span class="s">, add it as new&quot;</span> <span class="o">%</span> <span class="p">(</span><span class="n">node</span><span class="p">))</span>
</span><span class="line">            <span class="bp">self</span><span class="o">.</span><span class="n">server</span><span class="o">.</span><span class="n">dht</span><span class="o">.</span><span class="n">rt</span><span class="o">.</span><span class="n">update_node</span><span class="p">(</span><span class="n">node_id</span><span class="p">,</span> <span class="n">node</span><span class="p">)</span>
</span><span class="line">        <span class="k">else</span><span class="p">:</span>
</span><span class="line">            <span class="n">logger</span><span class="o">.</span><span class="n">debug</span><span class="p">(</span><span class="s">&quot;We already know about: </span><span class="si">%r</span><span class="s">&quot;</span> <span class="o">%</span> <span class="p">(</span><span class="n">node</span><span class="p">))</span>
</span><span class="line">
</span><span class="line">        <span class="n">node</span><span class="o">.</span><span class="n">update_access</span><span class="p">()</span>
</span><span class="line">
</span><span class="line">        <span class="k">if</span> <span class="n">query_type</span> <span class="o">==</span> <span class="s">&quot;ping&quot;</span><span class="p">:</span>
</span><span class="line">            <span class="n">logger</span><span class="o">.</span><span class="n">debug</span><span class="p">(</span><span class="s">&quot;handle query ping&quot;</span><span class="p">)</span>
</span><span class="line">            <span class="n">node</span><span class="o">.</span><span class="n">pong</span><span class="p">(</span><span class="n">socket</span><span class="o">=</span><span class="bp">self</span><span class="o">.</span><span class="n">server</span><span class="o">.</span><span class="n">socket</span><span class="p">,</span> <span class="n">trans_id</span> <span class="o">=</span> <span class="n">trans_id</span><span class="p">,</span> <span class="n">sender_id</span><span class="o">=</span><span class="bp">self</span><span class="o">.</span><span class="n">server</span><span class="o">.</span><span class="n">dht</span><span class="o">.</span><span class="n">node</span><span class="o">.</span><span class="n">_id</span><span class="p">,</span> <span class="n">lock</span><span class="o">=</span><span class="bp">self</span><span class="o">.</span><span class="n">server</span><span class="o">.</span><span class="n">send_lock</span><span class="p">)</span>
</span><span class="line">        <span class="k">elif</span> <span class="n">query_type</span> <span class="o">==</span> <span class="s">&quot;find_node&quot;</span><span class="p">:</span>
</span><span class="line">            <span class="n">logger</span><span class="o">.</span><span class="n">debug</span><span class="p">(</span><span class="s">&quot;handle query find_node&quot;</span><span class="p">)</span>
</span><span class="line">            <span class="n">target</span> <span class="o">=</span> <span class="n">args</span><span class="p">[</span><span class="s">&quot;target&quot;</span><span class="p">]</span>
</span><span class="line">            <span class="n">found_nodes</span> <span class="o">=</span> <span class="n">encode_nodes</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">server</span><span class="o">.</span><span class="n">dht</span><span class="o">.</span><span class="n">rt</span><span class="o">.</span><span class="n">get_close_nodes</span><span class="p">(</span><span class="n">target</span><span class="p">,</span> <span class="mi">8</span><span class="p">))</span>
</span><span class="line">            <span class="n">node</span><span class="o">.</span><span class="n">found_node</span><span class="p">(</span><span class="n">found_nodes</span><span class="p">,</span> <span class="n">socket</span><span class="o">=</span><span class="bp">self</span><span class="o">.</span><span class="n">server</span><span class="o">.</span><span class="n">socket</span><span class="p">,</span> <span class="n">trans_id</span> <span class="o">=</span> <span class="n">trans_id</span><span class="p">,</span> <span class="n">sender_id</span><span class="o">=</span><span class="bp">self</span><span class="o">.</span><span class="n">server</span><span class="o">.</span><span class="n">dht</span><span class="o">.</span><span class="n">node</span><span class="o">.</span><span class="n">_id</span><span class="p">,</span> <span class="n">lock</span><span class="o">=</span><span class="bp">self</span><span class="o">.</span><span class="n">server</span><span class="o">.</span><span class="n">send_lock</span><span class="p">)</span>
</span><span class="line">        <span class="k">elif</span> <span class="n">query_type</span> <span class="o">==</span> <span class="s">&quot;get_peers&quot;</span><span class="p">:</span>
</span><span class="line">            <span class="n">logger</span><span class="o">.</span><span class="n">debug</span><span class="p">(</span><span class="s">&quot;handle query get_peers&quot;</span><span class="p">)</span>
</span><span class="line">            <span class="n">logger</span><span class="o">.</span><span class="n">error</span><span class="p">(</span><span class="n">args</span><span class="p">)</span>
</span><span class="line">            <span class="n">logger</span><span class="o">.</span><span class="n">error</span><span class="p">(</span><span class="s">&quot;get_peer_info_hash_crawler:&quot;</span> <span class="o">+</span> <span class="n">args</span><span class="p">[</span><span class="s">&#39;info_hash&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">encode</span><span class="p">(</span><span class="s">&quot;hex&quot;</span><span class="p">))</span>
</span><span class="line">            <span class="n">node</span><span class="o">.</span><span class="n">pong</span><span class="p">(</span><span class="n">socket</span><span class="o">=</span><span class="bp">self</span><span class="o">.</span><span class="n">server</span><span class="o">.</span><span class="n">socket</span><span class="p">,</span> <span class="n">trans_id</span> <span class="o">=</span> <span class="n">trans_id</span><span class="p">,</span> <span class="n">sender_id</span><span class="o">=</span><span class="bp">self</span><span class="o">.</span><span class="n">server</span><span class="o">.</span><span class="n">dht</span><span class="o">.</span><span class="n">node</span><span class="o">.</span><span class="n">_id</span><span class="p">,</span> <span class="n">lock</span><span class="o">=</span><span class="bp">self</span><span class="o">.</span><span class="n">server</span><span class="o">.</span><span class="n">send_lock</span><span class="p">)</span>
</span><span class="line">            <span class="k">return</span>
</span><span class="line">        <span class="k">elif</span> <span class="n">query_type</span> <span class="o">==</span> <span class="s">&quot;announce_peer&quot;</span><span class="p">:</span>
</span><span class="line">            <span class="n">logger</span><span class="o">.</span><span class="n">debug</span><span class="p">(</span><span class="s">&quot;handle query announce_peer&quot;</span><span class="p">)</span>
</span><span class="line">            <span class="n">logger</span><span class="o">.</span><span class="n">error</span><span class="p">(</span><span class="n">args</span><span class="p">)</span>
</span><span class="line">            <span class="n">logger</span><span class="o">.</span><span class="n">error</span><span class="p">(</span><span class="s">&quot;announce_peer_info_hash_crawler:&quot;</span> <span class="o">+</span> <span class="n">args</span><span class="p">[</span><span class="s">&#39;info_hash&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">encode</span><span class="p">(</span><span class="s">&quot;hex&quot;</span><span class="p">))</span>
</span><span class="line">            <span class="n">node</span><span class="o">.</span><span class="n">pong</span><span class="p">(</span><span class="n">socket</span><span class="o">=</span><span class="bp">self</span><span class="o">.</span><span class="n">server</span><span class="o">.</span><span class="n">socket</span><span class="p">,</span> <span class="n">trans_id</span> <span class="o">=</span> <span class="n">trans_id</span><span class="p">,</span> <span class="n">sender_id</span><span class="o">=</span><span class="bp">self</span><span class="o">.</span><span class="n">server</span><span class="o">.</span><span class="n">dht</span><span class="o">.</span><span class="n">node</span><span class="o">.</span><span class="n">_id</span><span class="p">,</span> <span class="n">lock</span><span class="o">=</span><span class="bp">self</span><span class="o">.</span><span class="n">server</span><span class="o">.</span><span class="n">send_lock</span><span class="p">)</span>
</span><span class="line">            <span class="k">return</span>
</span><span class="line">        <span class="k">else</span><span class="p">:</span>
</span><span class="line">            <span class="n">logger</span><span class="o">.</span><span class="n">error</span><span class="p">(</span><span class="s">&quot;Unknown query type: </span><span class="si">%s</span><span class="s">&quot;</span> <span class="o">%</span> <span class="p">(</span><span class="n">query_type</span><span class="p">))</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h4 id="b-get-the-detail-info-like-whether-availble">b, get the detail info, like whether availble</h4>

<p>Send “announce_peer” package to peers, to announce that:<br />
You wanna the resouce, bla bla</p>

<h4 id="c-get-the-torrent-file-and-the-desciption">c, get the torrent file, and the desciption</h4>

<p>with the infohash, you can easy to get the file by this:</p>

<blockquote>
  <p>“http://torrage.com/torrent/” ++ MagHash ++ “.torrent”<br />
“https://zoink.it/torrent/” ++ MagHash ++ “.torrent”<br />
http://bt.box.n0808.com  </p>
</blockquote>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
</pre></td><td class="code"><pre><code class="bash"><span class="line">awk <span class="s1">&#39;{</span>
</span><span class="line"><span class="s1">    code=toupper($1);</span>
</span><span class="line"><span class="s1">    head=substr(code,0,2)</span>
</span><span class="line"><span class="s1">    tail=substr(code,39,2)</span>
</span><span class="line"><span class="s1">    print &quot;http://bt.box.n0808.com/&quot;head&quot;/&quot;tail&quot;/&quot;code&quot;.torrent&quot;</span>
</span><span class="line"><span class="s1">}&#39;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>Yep, you already have the torrent files, decode the files, and you can get more info.</p>

<h2 id="index-module--rank-module">4, Index module &amp; Rank module</h2>

<p>It’s typical search engine modules.<br />
Easy to get lots of infomations on Internet.</p>

<h2 id="about-dht-protocolhttpwwwbittorrentorgbepsbep0005html">5, About <a href="http://www.bittorrent.org/beps/bep_0005.html">DHT protocol</a></h2>

<p>Four Query Operation:</p>

<ul>
  <li>
    <p>ping: check a node alive</p>
  </li>
  <li>
    <p>find_node: find some node</p>
  </li>
  <li>
    <p>get_peers: get some resouce and querying by id</p>
  </li>
  <li>
    <p>announce_peer: announce downloading some resouce.</p>
  </li>
</ul>

<h2 id="reference">Reference</h2>

<ul>
  <li>http://blog.csdn.net/liweisnake/article/details/9207919</li>
  <li>http://codemacro.com/2013/07/02/dhtcrawler2/</li>
  <li>http://gobismoon.blog.163.com/blog/static/5244280220100893055533/</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Great Mac Tools List]]></title>
    <link href="http://arekyao.github.io/blog/2013/11/04/great-mac-tools-list/"/>
    <updated>2013-11-04T17:13:00+08:00</updated>
    <id>http://arekyao.github.io/blog/2013/11/04/great-mac-tools-list</id>
    <content type="html"><![CDATA[<ul>
  <li>AliWangwang</li>
  <li>Aperture</li>
  <li>AppCleaner
<!-- more --></li>
  <li>Automator</li>
  <li>BaiduYun</li>
  <li>BetterTouchTool</li>
  <li>BetterZip</li>
  <li>Chrome</li>
  <li>Evernote</li>
  <li>Flip4Mac</li>
  <li>Jumpcut</li>
  <li>KeePassX</li>
  <li>KeyCue</li>
  <li>MPlayerX</li>
  <li>Mail</li>
  <li>OmniFocus</li>
  <li>OmniGraffle</li>
  <li>Orange</li>
  <li>PDFpenPro</li>
  <li>Parallels Destop</li>
  <li>Pixelmator</li>
  <li>Panorama Maker</li>
  <li>QQ</li>
  <li>R</li>
  <li>SecureCRT</li>
  <li>Sublime Text</li>
  <li>Thunder</li>
  <li>TimeSink</li>
  <li>TotalFinder</li>
  <li>UltraEdit</li>
  <li>Weixin</li>
  <li>WinRAR</li>
  <li>Xilisoft Video Converter Ultimate</li>
  <li>fakeThunder</li>
  <li>fetion</li>
  <li>iFunBox</li>
  <li>iStat</li>
  <li>pdfsam</li>
  <li>
    <p>youdaoDic</p>
  </li>
  <li>brew</li>
  <li>easy_install</li>
  <li>virtualenv</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Surfing your Keyboard in Bash with Shortcut]]></title>
    <link href="http://arekyao.github.io/blog/2013/10/23/surfing-your-keyboard-in-bash-with-shortcut/"/>
    <updated>2013-10-23T22:05:00+08:00</updated>
    <id>http://arekyao.github.io/blog/2013/10/23/surfing-your-keyboard-in-bash-with-shortcut</id>
    <content type="html"><![CDATA[<p>Nowadays, the more spending time in Bash shell and typing longer commands, the more precious time is in my mind.<br />
So I spent some time to read about “Command Line Editing” in the bash manual and Google the experience old man left.  </p>

<p>Well, here’s the new shortcuts I learned:</p>

<p>ps: the marked ones as em are my favourite.</p>

<!-- more -->

<h3 id="basic-moves">Basic moves</h3>

<ul>
  <li>Move back one character. Ctrl + b</li>
  <li>Move forward one character. Ctrl + f</li>
  <li>Delete current character. Ctrl + d</li>
  <li>Delete previous character. Backspace</li>
  <li><em>Undo.</em> <code>Ctrl + -</code></li>
</ul>

<h3 id="moving-faster">Moving faster</h3>

<ul>
  <li>Move to the start of line. Ctrl + a</li>
  <li>Move to the end of line. Ctrl + e</li>
  <li><em>Move forward a word.</em> <code>Meta + f</code> <em>(a word contains alphabets and digits, no symbols)</em></li>
  <li><em>Move backward a word.</em> <code>Meta + b</code></li>
  <li>Clear the screen. Ctrl + l</li>
</ul>

<p>What is Meta? Meta is your Alt key, normally. <br />
For Mac OSX user, you need to enable it yourself. <br />
Open Terminal &gt; Preferences &gt; Settings &gt; Keyboard, and enable Use option as meta key. <br />
Meta key, by convention, is used for operations on word.  </p>

<h3 id="cut-and-paste-kill-and-yank-for-old-schoolers">Cut and paste (‘Kill and yank’ for old schoolers)</h3>

<ul>
  <li><em>Cut from cursor to the end of line.</em> <code>Ctrl + k</code></li>
  <li><em>Cut from cursor to the end of word.</em> <code>Meta + d</code></li>
  <li><em>Cut from cursor to the start of word.</em> <code>Meta + Backspace</code></li>
  <li><em>Cut from cursor to previous whitespace.</em> <code>Ctrl + w</code></li>
  <li>Paste the last cut text. Ctrl + y</li>
  <li>Loop through and paste previously cut text. Meta + y (use it after Ctrl + y)</li>
  <li>Loop through and paste the last argument of previous commands. Meta + .</li>
</ul>

<h3 id="search-the-command-history">Search the command history</h3>

<ul>
  <li><em>Search as you type.</em> <code>Ctrl + r</code> and type the search term; Repeat Ctrl + r to loop through results.</li>
  <li>Search the last remembered search term. Ctrl + r twice.</li>
  <li>End the search at current history entry. Ctrl + j</li>
  <li>Cancel the search and restore original line. Ctrl + g</li>
</ul>

<h3 id="not-enough">Not Enough??</h3>

<p>Come on!</p>

<ul>
  <li>A comprehensive bash <a href="http://www.catonmat.net/blog/bash-emacs-editing-mode-cheat-sheet/">editing mode cheatsheet</a> by Peteris Krumin (catonmat.net).  </li>
  <li>Vim users! Do you know you can switch to Vi-style editing mode? Here: <a href="http://www.catonmat.net/blog/bash-vi-editing-mode-cheat-sheet/">vi-style cheatsheet</a>.</li>
  <li>Bash command line editing is actually handled by GNU Readline Library. So just dive into <a href="http://www.gnu.org/software/readline/#Documentation">Readline manual</a> for everything else.</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How to break gfw to git]]></title>
    <link href="http://arekyao.github.io/blog/2013/10/22/how-to-break-gfw-to-git/"/>
    <updated>2013-10-22T14:39:00+08:00</updated>
    <id>http://arekyao.github.io/blog/2013/10/22/how-to-break-gfw-to-git</id>
    <content type="html"><![CDATA[<p>Recently, github is blocked by Somebody.<br />
git clone,git push … no way.<br />
So how to break the wall?</p>

<!-- more -->

<p>Here is a way.</p>

<h2 id="git-protocol">Git Protocol</h2>

<p>Git has three protocol working:</p>

<ul>
  <li>git://  </li>
  <li>ssh://  </li>
  <li>http(s)://  </li>
</ul>

<p>and Proxy has two protocol mainly:</p>

<ul>
  <li>http(s)://  </li>
  <li>sock  </li>
</ul>

<p>I git successfully https:// with http-proxyer (mine is goAgent)</p>

<p>The way is so easy:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class=""><span class="line">export http_proxy="http://127.0.0.1:8087"
</span><span class="line">export https_proxy="http://127.0.0.1:8087" </span></code></pre></td></tr></table></div></figure></notextile></div>

<p>However, i did not succ with ssh:// or git:// with http-proxyer.and still dunno why</p>

<h2 id="vpn">VPN</h2>

<p>The other way is easier, VPN.</p>

<p>There are lots of vpn server, free and not free.</p>

<p>Here is a free vpn,enjoy it </p>

<p><a href="http://www.pptpvpn.org/">http://www.pptpvpn.org/</a></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How to improve the Performance of System]]></title>
    <link href="http://arekyao.github.io/blog/2013/10/18/how-to-improve-the-performance-of-system/"/>
    <updated>2013-10-18T18:04:00+08:00</updated>
    <id>http://arekyao.github.io/blog/2013/10/18/how-to-improve-the-performance-of-system</id>
    <content type="html"><![CDATA[<h2 id="preface">1,Preface</h2>

<p>Happy families are all alike; every unhappy family is unhappy in its own way.<br />
So does System.</p>

<p>Here is just a simple way to find out what’s ‘unhappy’ in your system.</p>

<h2 id="think-as-time-goes">2,Think as time goes</h2>

<p>There are lots of ways to thinking and find something.<br />
Thinking as time goes is an easy one.</p>

<p>However, what we are going to talking, in fact, is thinking as data flows.</p>

<!-- more -->

<p>Refer to your system, the data will be transferred like this:</p>

<p>UserRequest -&gt; HttpServer -&gt; UIServer -&gt; DataServer -&gt; Database<br />
UserReceiver &lt;- HttpServer &lt;- UIServer &lt;- DataServer &lt;- Database</p>

<h2 id="userrequest--userreceiver">3,UserRequest &amp; UserReceiver</h2>

<p>Those belong to User Client.</p>

<p>User’s Client depends on Environment, where user run his program, like Operating System, like web browser if the program is an webapp, etc.</p>

<p>If you are doing a stress testing on your system, your stress test tools is a factor ,too.</p>

<h2 id="server-machine">4,Server Machine</h2>

<p>Others like httpserver,uiserver, database, etc, are running on your server, your machine.
Server Machine can have four kind of bottleneck.</p>

<ul>
  <li>CPU (see top)</li>
  <li>Swap (see free)</li>
  <li>Network (see iftop)</li>
  <li>Disk (see iotop)</li>
</ul>

<blockquote>
  <p>Where is the bottleneck?” is a good question, so I’ll ask it back to you in different words: 
is the CPU maxed out (see top)? 
Are the disks struggling (iotop)? 
Are you hitting swap (free)? 
Are you filling the network pipe (iftop)? 
                          –  Shish Nov 23 ‘11 at 11:21</p>
</blockquote>

<p>The posts, which will give the detail on User &amp; Machine, is on the way.</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Data Mining: R, Python, RapidMiner or Matlab]]></title>
    <link href="http://arekyao.github.io/blog/2013/10/11/data-mining-r-python-rapidminer-or-matlab/"/>
    <updated>2013-10-11T22:04:00+08:00</updated>
    <id>http://arekyao.github.io/blog/2013/10/11/data-mining-r-python-rapidminer-or-matlab</id>
    <content type="html"><![CDATA[<p>In work or study, we have more and more problmes, which can be solved by data mining.</p>

<p>Refer to data mining tools, kinds of stuff some out,such as R, spss, mathematica,etc.
The most popular packages in the industry are SAS and SPSS, but they are quite expensive, so you might wanna have a free one, and better a open source one.</p>

<ul>
  <li>R</li>
  <li>RapidMiner</li>
  <li>python</li>
  <li>Matlab</li>
</ul>

<!-- more -->

<p>Here is a <a href="http://www.kdnuggets.com/2013/06/kdnuggets-annual-software-poll-rapidminer-r-vie-for-first-place.html">poll from KDnuggets</a></p>

<p><img src="http://arekyao.github.io/images/blog/top.KDnuggetsAnnual_Software_Poll.png" alt="KDnuggets Annual Software Poll: Data Mining" /></p>

<h2 id="python">1,Python</h2>

<ul>
  <li>script language and interactive</li>
  <li>open source and lots of lib, such as NLTK, scipy, scikit-learn, etc.</li>
  <li>Good for mathematics.</li>
  <li>Limited list of machine learning algorithms.</li>
  <li>Machine learning is not handled uniformly between the different libraries.</li>
  <li>efficiency in training model is little low, comparing C language</li>
  <li>easier to integrate a work flow with other program, because other work may be done by python</li>
  <li>windows/linux/osx/android,etc</li>
</ul>

<h2 id="r">2,R</h2>

<ul>
  <li>Open source</li>
  <li>interactive</li>
  <li>learning curve. Language is pretty different from current mainstream languages like C, C#, C++, Java, PHP and VB.</li>
  <li>Very extensive statistical library.</li>
  <li>Very concise for solving statistical problems.</li>
  <li>a powerful elegant array language in the tradition of APL, Mathematica and MATLAB, but also LISP/Scheme.</li>
  <li>easy to integrate this into a work flow with your other programs. You just spawn an R program and pass input in and read output from a pipe.</li>
  <li>R was created in 1990.</li>
  <li>Less specialized towards data mining</li>
  <li>windows/linuxs/osx</li>
</ul>

<p>Link: <a href="http://www.youtube.com/watch?v=3t8LiXlBL40">Screencast showing how a trained R user can generate a PMML neural network model in 60 seconds</a>.</p>

<h2 id="rapidminer">3,RapidMiner</h2>
<ul>
  <li>an open source statistical and data mining package</li>
  <li>written in Java, easy to transplant across multi-operating system</li>
  <li>Lot of data mining algorithms.</li>
  <li>Good graphics</li>
  <li>It easily reads and writes Excel files and different databases.</li>
  <li>program by piping components together in a graphic ETL workflows</li>
  <li>If you set up an illegal workflows RapidMiner suggest Quick Fixes to make it legal</li>
  <li>hard to learn, however good video tutorials</li>
  <li>can work with R &amp; SPSS</li>
</ul>

<h2 id="matlab">4,Matlab</h2>
<ul>
  <li>good at matrix &amp; plot</li>
  <li>easy program, language grama is like c</li>
  <li>too huge ,too expensive</li>
</ul>

<h4 id="reference">Reference:</h4>

<p>1,http://blog.samibadawi.com/2010/06/orange-r-rapidminer-statistica-and-weka.html<br />
2,http://blog.samibadawi.com/2010/04/r-rapidminer-statistica-ssas-or-weka.html<br />
3,http://orange.biolab.si/<br />
4,http://rapid-i.com/<br />
5,http://cos.name/<br />
6,http://r-ke.info/<br />
7,http://www.kdnuggets.com/2013/06/kdnuggets-annual-software-poll-rapidminer-r-vie-for-first-place.html  </p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How to Add tag cloud to your Octopress blog]]></title>
    <link href="http://arekyao.github.io/blog/2013/10/09/how-to-add-tag-cloud-to-your-octopress-blog/"/>
    <updated>2013-10-09T12:21:00+08:00</updated>
    <id>http://arekyao.github.io/blog/2013/10/09/how-to-add-tag-cloud-to-your-octopress-blog</id>
    <content type="html"><![CDATA[<p>As same as adding “category list”,there are so many ways leading to Roma.</p>

<p>Here is one of the solutions:</p>

<h3 id="git-clone-two-repos">1,git clone two repos</h3>

<!-- more -->

<p>git clone https://github.com/robbyedwards/octopress-tag-pages<br />
git clone https://github.com/robbyedwards/octopress-tag-cloudclone  </p>

<p>The first one is used to generate the tag page. 
The latter one is for tag clound</p>

<h3 id="octopress-tag-pages">2,octopress-tag-pages</h3>

<p>cp tag_generator.rb to /plugins<br />
cp tag_index.html to /source/_layouts<br />
cp tag_feed.xml to /source/_includes/custom/  </p>

<p>ps:the last one is not included in official document,but it’s really needed</p>

<h3 id="octopress-tag-cloud">3,octopress-tag-cloud</h3>

<p>cp tag_cloud.rb to /plugins</p>

<p>cp those code below to /source/_includes/custom/asides/tags.html。</p>

<p>Actually, the similiar file tags.html is in octopress-tag-cloud</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
</pre></td><td class="code"><pre><code class="xml"><span class="line"><span class="nt">&lt;section&gt;</span>
</span><span class="line">  <span class="nt">&lt;h1&gt;</span>Tags<span class="nt">&lt;/h1&gt;</span>
</span><span class="line">  <span class="nt">&lt;ul</span> <span class="na">class=</span><span class="s">&quot;tag-cloud&quot;</span><span class="nt">&gt;</span>
</span><span class="line">    {\[del this \]% tag_cloud font-size: 90-210%, limit: 10, style: para %}
</span><span class="line">  <span class="nt">&lt;/ul&gt;</span>
</span><span class="line"><span class="nt">&lt;/section&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h3 id="add-the-block-to-somewhere">4,add the block to somewhere</h3>

<p>add some code in _config.xml’s default_asides,such as:</p>

<p>default_asides: [asides/category_list.html, asides/recent_posts.html, custom/asides/tags.html]</p>

<h3 id="one-bug-of-tag-cloud">5,one bug of tag cloud</h3>

<p>after doing before, there may be a problem or bug waiting for you.</p>

<p>when rake, the error is:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="xml"><span class="line">Liquid Exception: comparison of Array with Array failed in page
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>At first, I think there must be something wrong with my setting.</p>

<p>At last, I got some info from this:</p>

<blockquote>
  <p>This would occur when every tag is applied for only ONCE. Not sure if this is a bug. 
Anyway you can simply apply one of the tags on more than one post.</p>
</blockquote>

<p>http://jeffli.me/blog/2013/06/17/add-tags-and-tag-cloud-support-to-octopress/</p>

<p>We get the bug away by a trick:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
</pre></td><td class="code"><pre><code class="xml"><span class="line">add same tag to three post before &#39;rake generate&#39;
</span><span class="line">then rake, will be ok
</span><span class="line">after that, change tag to what supposed to be, little by little
</span></code></pre></td></tr></table></div></figure></notextile></div>
<p>ok, there is a use of TDD, lol</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Workflow Engine in Python]]></title>
    <link href="http://arekyao.github.io/blog/2013/10/02/workflow-engine-in-python/"/>
    <updated>2013-10-02T07:49:00+08:00</updated>
    <id>http://arekyao.github.io/blog/2013/10/02/workflow-engine-in-python</id>
    <content type="html"><![CDATA[<h2 id="whats-workflow">1,What’s workflow</h2>

<p>A <a href="http://en.wikipedia.org/wiki/Workflow">workflow</a> consists of a sequence of connected steps where each step follows without delay or gap and ends just before the subsequent step may begin.</p>

<p>it’s just a complicated finite statemachine</p>

<h2 id="spiff-workflowhttpsgithubcomknipknapspiffworkflow">2,<a href="https://github.com/knipknap/SpiffWorkflow">Spiff workflow</a></h2>

<p>Spiff Workflow is a library implementing a framework for workflows.
It is based on http://www.workflowpatterns.com and implemented in pure Python.</p>

<!-- more -->
<p>In addition, Spiff Workflow provides a parser and workflow emulation
layer that can be used to create executable Spiff Workflow specifications
from Business Process Model and Notation (BPMN) documents.</p>

<p>For documentation please refer to:</p>

<p>https://github.com/knipknap/SpiffWorkflow/wiki</p>

<h2 id="how-to-make-spiff-workflow-work">3,How to make spiff workflow work</h2>

<p>There are many test cases in test directory, you would know how it works, at least know most parts.</p>

<p>Generally, it can work like this:</p>

<ul>
  <li>a, template ,which define the workflow based on <a href="http://www.workflowpatterns.com/">workflow pattern</a>   </li>
  <li>b, tools  which can transform the template to real object in spiff object  </li>
  <li>c, engine, which is used to make spiff workflow object work like flow,lol  </li>
</ul>

<p>However,there is some trap in it.
you can make it work by function,complete_all() or complete_next()
but you can not know how the flow works by getting ready task,
the right way is by callback function</p>

<p>ps: I was stuck by this for two or three days.</p>

<h2 id="one-better-example-using-spiff-workflow">4, one better example using spiff workflow</h2>

<p>the case code:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
<span class="line-number">23</span>
<span class="line-number">24</span>
<span class="line-number">25</span>
<span class="line-number">26</span>
<span class="line-number">27</span>
<span class="line-number">28</span>
<span class="line-number">29</span>
<span class="line-number">30</span>
<span class="line-number">31</span>
<span class="line-number">32</span>
<span class="line-number">33</span>
<span class="line-number">34</span>
<span class="line-number">35</span>
<span class="line-number">36</span>
<span class="line-number">37</span>
<span class="line-number">38</span>
<span class="line-number">39</span>
<span class="line-number">40</span>
<span class="line-number">41</span>
<span class="line-number">42</span>
<span class="line-number">43</span>
<span class="line-number">44</span>
<span class="line-number">45</span>
<span class="line-number">46</span>
<span class="line-number">47</span>
<span class="line-number">48</span>
<span class="line-number">49</span>
<span class="line-number">50</span>
<span class="line-number">51</span>
<span class="line-number">52</span>
<span class="line-number">53</span>
<span class="line-number">54</span>
<span class="line-number">55</span>
<span class="line-number">56</span>
<span class="line-number">57</span>
<span class="line-number">58</span>
<span class="line-number">59</span>
<span class="line-number">60</span>
<span class="line-number">61</span>
<span class="line-number">62</span>
<span class="line-number">63</span>
<span class="line-number">64</span>
<span class="line-number">65</span>
<span class="line-number">66</span>
<span class="line-number">67</span>
<span class="line-number">68</span>
<span class="line-number">69</span>
<span class="line-number">70</span>
<span class="line-number">71</span>
<span class="line-number">72</span>
<span class="line-number">73</span>
<span class="line-number">74</span>
<span class="line-number">75</span>
<span class="line-number">76</span>
<span class="line-number">77</span>
<span class="line-number">78</span>
<span class="line-number">79</span>
<span class="line-number">80</span>
<span class="line-number">81</span>
<span class="line-number">82</span>
<span class="line-number">83</span>
<span class="line-number">84</span>
<span class="line-number">85</span>
<span class="line-number">86</span>
<span class="line-number">87</span>
<span class="line-number">88</span>
<span class="line-number">89</span>
<span class="line-number">90</span>
<span class="line-number">91</span>
<span class="line-number">92</span>
<span class="line-number">93</span>
<span class="line-number">94</span>
<span class="line-number">95</span>
<span class="line-number">96</span>
<span class="line-number">97</span>
<span class="line-number">98</span>
<span class="line-number">99</span>
<span class="line-number">100</span>
<span class="line-number">101</span>
<span class="line-number">102</span>
<span class="line-number">103</span>
<span class="line-number">104</span>
<span class="line-number">105</span>
<span class="line-number">106</span>
<span class="line-number">107</span>
<span class="line-number">108</span>
<span class="line-number">109</span>
<span class="line-number">110</span>
<span class="line-number">111</span>
<span class="line-number">112</span>
<span class="line-number">113</span>
<span class="line-number">114</span>
<span class="line-number">115</span>
<span class="line-number">116</span>
<span class="line-number">117</span>
<span class="line-number">118</span>
<span class="line-number">119</span>
<span class="line-number">120</span>
<span class="line-number">121</span>
<span class="line-number">122</span>
<span class="line-number">123</span>
<span class="line-number">124</span>
<span class="line-number">125</span>
<span class="line-number">126</span>
<span class="line-number">127</span>
<span class="line-number">128</span>
<span class="line-number">129</span>
<span class="line-number">130</span>
<span class="line-number">131</span>
<span class="line-number">132</span>
<span class="line-number">133</span>
<span class="line-number">134</span>
<span class="line-number">135</span>
<span class="line-number">136</span>
<span class="line-number">137</span>
<span class="line-number">138</span>
<span class="line-number">139</span>
<span class="line-number">140</span>
<span class="line-number">141</span>
<span class="line-number">142</span>
<span class="line-number">143</span>
<span class="line-number">144</span>
<span class="line-number">145</span>
<span class="line-number">146</span>
<span class="line-number">147</span>
<span class="line-number">148</span>
<span class="line-number">149</span>
<span class="line-number">150</span>
<span class="line-number">151</span>
<span class="line-number">152</span>
<span class="line-number">153</span>
<span class="line-number">154</span>
<span class="line-number">155</span>
<span class="line-number">156</span>
<span class="line-number">157</span>
<span class="line-number">158</span>
<span class="line-number">159</span>
<span class="line-number">160</span>
<span class="line-number">161</span>
<span class="line-number">162</span>
<span class="line-number">163</span>
</pre></td><td class="code"><pre><code class="py"><span class="line"><span class="c"># -*- coding: utf-8</span>
</span><span class="line">
</span><span class="line"><span class="kn">import</span> <span class="nn">sys</span><span class="o">,</span> <span class="nn">os</span>
</span><span class="line"><span class="n">sys</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">insert</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="n">os</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">os</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">dirname</span><span class="p">(</span><span class="n">__file__</span><span class="p">),</span>  <span class="s">&#39;../../lib&#39;</span><span class="p">))</span>
</span><span class="line">
</span><span class="line"><span class="kn">from</span> <span class="nn">SpiffWorkflow.specs</span> <span class="kn">import</span> <span class="o">*</span>
</span><span class="line"><span class="kn">from</span> <span class="nn">SpiffWorkflow</span> <span class="kn">import</span> <span class="n">Task</span><span class="p">,</span> <span class="n">Workflow</span>
</span><span class="line"><span class="kn">from</span> <span class="nn">SpiffWorkflow.storage</span> <span class="kn">import</span> <span class="n">XmlSerializer</span>
</span><span class="line">
</span><span class="line">
</span><span class="line"><span class="k">def</span> <span class="nf">on_entered_cb</span><span class="p">(</span><span class="n">workflow</span><span class="p">,</span> <span class="n">task</span><span class="p">,</span> <span class="n">taken_path</span><span class="p">):</span>
</span><span class="line">    <span class="c">#print &quot;entered:&quot;,task.get_name()</span>
</span><span class="line">    <span class="k">return</span> <span class="bp">True</span>
</span><span class="line">
</span><span class="line"><span class="k">def</span> <span class="nf">on_ready_cb</span><span class="p">(</span><span class="n">workflow</span><span class="p">,</span> <span class="n">task</span><span class="p">,</span> <span class="n">taken_path</span><span class="p">):</span>
</span><span class="line">    <span class="c">#print &quot;ready:&quot;,task.get_name()</span>
</span><span class="line">    <span class="k">return</span> <span class="bp">True</span>
</span><span class="line">
</span><span class="line">
</span><span class="line"><span class="k">def</span> <span class="nf">on_reached_cb</span><span class="p">(</span><span class="n">workflow</span><span class="p">,</span> <span class="n">task</span><span class="p">,</span> <span class="n">taken_path</span><span class="p">):</span>
</span><span class="line">    <span class="c">#print &quot;reached:&quot;,task.get_name()</span>
</span><span class="line">    <span class="k">return</span> <span class="bp">True</span>
</span><span class="line">
</span><span class="line"><span class="k">def</span> <span class="nf">on_complete_cb</span><span class="p">(</span><span class="n">workflow</span><span class="p">,</span> <span class="n">task</span><span class="p">,</span> <span class="n">taken_path</span><span class="p">):</span>
</span><span class="line">    <span class="c"># Record the path.</span>
</span><span class="line">    <span class="k">print</span> <span class="s">&quot;complete:&quot;</span><span class="p">,</span><span class="n">task</span><span class="o">.</span><span class="n">get_name</span><span class="p">()</span>
</span><span class="line">    <span class="c">#print task.get_description()</span>
</span><span class="line">    <span class="n">indent</span> <span class="o">=</span> <span class="s">&#39;  &#39;</span> <span class="o">*</span> <span class="p">(</span><span class="n">task</span><span class="o">.</span><span class="n">_get_depth</span><span class="p">()</span> <span class="o">-</span> <span class="mi">1</span><span class="p">)</span>
</span><span class="line">    <span class="n">taken_path</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="s">&#39;</span><span class="si">%s%s</span><span class="s">&#39;</span> <span class="o">%</span> <span class="p">(</span><span class="n">indent</span><span class="p">,</span> <span class="n">task</span><span class="o">.</span><span class="n">get_name</span><span class="p">()))</span>
</span><span class="line">    <span class="k">return</span> <span class="bp">True</span>
</span><span class="line">
</span><span class="line">
</span><span class="line">
</span><span class="line"><span class="k">class</span> <span class="nc">QuestionError</span><span class="p">(</span><span class="ne">Exception</span><span class="p">):</span>
</span><span class="line">
</span><span class="line">    <span class="k">def</span> <span class="nf">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">value</span><span class="p">):</span>
</span><span class="line">        <span class="bp">self</span><span class="o">.</span><span class="n">value</span> <span class="o">=</span> <span class="n">value</span>
</span><span class="line">
</span><span class="line">    <span class="k">def</span> <span class="nf">__str__</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
</span><span class="line">        <span class="k">return</span> <span class="nb">repr</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">value</span><span class="p">)</span>
</span><span class="line">
</span><span class="line">
</span><span class="line">
</span><span class="line">
</span><span class="line"><span class="k">class</span> <span class="nc">QuestionWorkflow</span><span class="p">(</span><span class="nb">object</span><span class="p">):</span>
</span><span class="line">    <span class="k">def</span> <span class="nf">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
</span><span class="line">        <span class="bp">self</span><span class="o">.</span><span class="n">serializer</span> <span class="o">=</span> <span class="n">XmlSerializer</span><span class="p">()</span>
</span><span class="line">
</span><span class="line">    <span class="k">def</span> <span class="nf">set_up</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span><span class="n">filename</span><span class="p">):</span>
</span><span class="line">        <span class="c"># Test patterns that are defined in XML format.</span>
</span><span class="line">        <span class="n">xml</span> <span class="o">=</span> <span class="nb">open</span><span class="p">(</span><span class="n">filename</span><span class="p">)</span><span class="o">.</span><span class="n">read</span><span class="p">()</span>
</span><span class="line">        <span class="bp">self</span><span class="o">.</span><span class="n">wf_spec</span> <span class="o">=</span> <span class="n">WorkflowSpec</span><span class="o">.</span><span class="n">deserialize</span><span class="p">(</span><span class="n">XmlSerializer</span><span class="p">(),</span> <span class="n">xml</span><span class="p">,</span> <span class="n">filename</span> <span class="o">=</span> <span class="n">filename</span><span class="p">)</span>
</span><span class="line">        <span class="bp">self</span><span class="o">.</span><span class="n">taken_path</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">track_workflow</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">wf_spec</span><span class="p">)</span>
</span><span class="line">        <span class="bp">self</span><span class="o">.</span><span class="n">workflow</span>   <span class="o">=</span> <span class="n">Workflow</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">wf_spec</span><span class="p">)</span>
</span><span class="line">
</span><span class="line">
</span><span class="line">    <span class="k">def</span> <span class="nf">run</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">UserSelection</span><span class="p">,</span> <span class="n">restart</span><span class="o">=</span><span class="bp">False</span><span class="p">):</span>
</span><span class="line">
</span><span class="line">        <span class="k">if</span> <span class="n">restart</span><span class="p">:</span>
</span><span class="line">            <span class="bp">self</span><span class="o">.</span><span class="n">workflow</span> <span class="o">=</span> <span class="n">Workflow</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">wf_spec</span><span class="p">)</span>
</span><span class="line">
</span><span class="line">        <span class="n">workflow</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">workflow</span>
</span><span class="line">        <span class="n">condition_keys</span> <span class="o">=</span> <span class="p">[]</span>
</span><span class="line">        <span class="k">if</span> <span class="n">UserSelection</span> <span class="ow">is</span> <span class="bp">None</span><span class="p">:</span>
</span><span class="line">            <span class="n">UserSelection</span> <span class="o">=</span> <span class="p">{}</span>
</span><span class="line">
</span><span class="line">        <span class="n">task_data_dict</span> <span class="o">=</span> <span class="n">UserSelection</span><span class="o">.</span><span class="n">copy</span><span class="p">()</span>
</span><span class="line">
</span><span class="line">        <span class="k">while</span> <span class="ow">not</span> <span class="n">workflow</span><span class="o">.</span><span class="n">is_completed</span><span class="p">():</span>
</span><span class="line">            <span class="n">tasks</span> <span class="o">=</span> <span class="n">workflow</span><span class="o">.</span><span class="n">get_tasks</span><span class="p">(</span><span class="n">Task</span><span class="o">.</span><span class="n">READY</span><span class="p">)</span>
</span><span class="line">
</span><span class="line">            <span class="k">for</span> <span class="n">t</span> <span class="ow">in</span> <span class="n">tasks</span><span class="p">:</span>
</span><span class="line">                <span class="k">print</span> <span class="s">&quot;Ready:&quot;</span><span class="p">,</span> <span class="n">t</span><span class="o">.</span><span class="n">task_spec</span><span class="o">.</span><span class="n">name</span>
</span><span class="line">                <span class="k">if</span>  <span class="nb">hasattr</span><span class="p">(</span><span class="n">t</span><span class="o">.</span><span class="n">task_spec</span><span class="p">,</span> <span class="s">&quot;cond_task_specs&quot;</span><span class="p">):</span>
</span><span class="line">                    <span class="k">for</span> <span class="n">cond</span><span class="p">,</span> <span class="n">name</span> <span class="ow">in</span> <span class="n">t</span><span class="o">.</span><span class="n">task_spec</span><span class="o">.</span><span class="n">cond_task_specs</span><span class="p">:</span>
</span><span class="line">                        <span class="k">for</span> <span class="n">cond_unit</span> <span class="ow">in</span> <span class="n">cond</span><span class="o">.</span><span class="n">args</span><span class="p">:</span>
</span><span class="line">                            <span class="k">if</span> <span class="nb">hasattr</span><span class="p">(</span><span class="n">cond_unit</span><span class="p">,</span> <span class="s">&quot;name&quot;</span><span class="p">):</span>
</span><span class="line">                                <span class="n">condition_keys</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">cond_unit</span><span class="o">.</span><span class="n">name</span><span class="p">)</span>
</span><span class="line">
</span><span class="line">
</span><span class="line">            <span class="n">flag_keys_in_user_select</span> <span class="o">=</span> <span class="bp">True</span>
</span><span class="line">            <span class="k">for</span> <span class="n">cond_key</span> <span class="ow">in</span> <span class="n">condition_keys</span><span class="p">:</span>
</span><span class="line">                <span class="k">if</span> <span class="ow">not</span> <span class="n">task_data_dict</span><span class="o">.</span><span class="n">has_key</span><span class="p">(</span><span class="n">cond_key</span><span class="p">):</span>
</span><span class="line">                    <span class="k">print</span> <span class="n">cond_key</span>
</span><span class="line">                    <span class="n">flag_keys_in_user_select</span> <span class="o">=</span> <span class="bp">False</span>
</span><span class="line">                    <span class="k">break</span>
</span><span class="line">
</span><span class="line">            <span class="k">if</span> <span class="ow">not</span> <span class="n">flag_keys_in_user_select</span><span class="p">:</span>
</span><span class="line">                <span class="c"># some tast&#39;s condition&#39;s key not in input userselect dict</span>
</span><span class="line">                <span class="k">return</span>
</span><span class="line">
</span><span class="line">            <span class="k">for</span> <span class="n">t</span> <span class="ow">in</span> <span class="n">tasks</span><span class="p">:</span>
</span><span class="line">                <span class="n">t</span><span class="o">.</span><span class="n">set_data</span><span class="p">(</span><span class="o">**</span><span class="n">task_data_dict</span><span class="p">)</span>
</span><span class="line">
</span><span class="line">            <span class="n">workflow</span><span class="o">.</span><span class="n">complete_next</span><span class="p">()</span>
</span><span class="line">
</span><span class="line">        <span class="k">if</span> <span class="ow">not</span> <span class="n">workflow</span><span class="o">.</span><span class="n">is_completed</span><span class="p">():</span>
</span><span class="line">            <span class="k">raise</span> <span class="n">QuestionError</span><span class="p">(</span><span class="s">&#39;invalid feature[</span><span class="si">%s</span><span class="s">]&#39;</span> <span class="o">%</span> <span class="n">filename</span><span class="p">)</span>
</span><span class="line">
</span><span class="line">    <span class="k">def</span> <span class="nf">print_trace</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
</span><span class="line">        <span class="n">path</span> <span class="o">=</span> <span class="s">&#39;</span><span class="se">\n</span><span class="s">&#39;</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">taken_path</span><span class="p">)</span> <span class="o">+</span> <span class="s">&#39;</span><span class="se">\n</span><span class="s">&#39;</span>
</span><span class="line">        <span class="n">info</span> <span class="o">=</span> <span class="s">&quot;&quot;</span>
</span><span class="line">        <span class="n">info</span> <span class="o">+=</span> <span class="s">&#39;the workflowrun path:</span><span class="se">\n</span><span class="s">&#39;</span>
</span><span class="line">        <span class="n">info</span> <span class="o">+=</span> <span class="s">&#39;</span><span class="si">%s</span><span class="se">\n</span><span class="s">&#39;</span> <span class="o">%</span> <span class="n">path</span>
</span><span class="line">        <span class="k">print</span> <span class="n">info</span>
</span><span class="line">
</span><span class="line">
</span><span class="line">    <span class="k">def</span> <span class="nf">track_task</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">task_spec</span><span class="p">,</span> <span class="n">taken_path</span><span class="p">):</span>
</span><span class="line">
</span><span class="line">        <span class="c">#reached event call back</span>
</span><span class="line">        <span class="k">if</span> <span class="n">task_spec</span><span class="o">.</span><span class="n">reached_event</span><span class="o">.</span><span class="n">is_connected</span><span class="p">(</span><span class="n">on_reached_cb</span><span class="p">):</span>
</span><span class="line">            <span class="n">task_spec</span><span class="o">.</span><span class="n">reached_event</span><span class="o">.</span><span class="n">disconnect</span><span class="p">(</span><span class="n">on_reached_cb</span><span class="p">)</span>
</span><span class="line">        <span class="n">task_spec</span><span class="o">.</span><span class="n">reached_event</span><span class="o">.</span><span class="n">connect</span><span class="p">(</span><span class="n">on_reached_cb</span><span class="p">,</span> <span class="n">taken_path</span><span class="p">)</span>
</span><span class="line">
</span><span class="line">        <span class="c">#completed event call back</span>
</span><span class="line">        <span class="k">if</span> <span class="n">task_spec</span><span class="o">.</span><span class="n">completed_event</span><span class="o">.</span><span class="n">is_connected</span><span class="p">(</span><span class="n">on_complete_cb</span><span class="p">):</span>
</span><span class="line">            <span class="n">task_spec</span><span class="o">.</span><span class="n">completed_event</span><span class="o">.</span><span class="n">disconnect</span><span class="p">(</span><span class="n">on_complete_cb</span><span class="p">)</span>
</span><span class="line">        <span class="n">task_spec</span><span class="o">.</span><span class="n">completed_event</span><span class="o">.</span><span class="n">connect</span><span class="p">(</span><span class="n">on_complete_cb</span><span class="p">,</span> <span class="n">taken_path</span><span class="p">)</span>
</span><span class="line">
</span><span class="line">        <span class="c">#enter event call back</span>
</span><span class="line">        <span class="k">if</span> <span class="n">task_spec</span><span class="o">.</span><span class="n">entered_event</span><span class="o">.</span><span class="n">is_connected</span><span class="p">(</span><span class="n">on_entered_cb</span><span class="p">):</span>
</span><span class="line">            <span class="n">task_spec</span><span class="o">.</span><span class="n">entered_event</span><span class="o">.</span><span class="n">disconnect</span><span class="p">(</span><span class="n">on_entered_cb</span><span class="p">)</span>
</span><span class="line">        <span class="n">task_spec</span><span class="o">.</span><span class="n">entered_event</span><span class="o">.</span><span class="n">connect</span><span class="p">(</span><span class="n">on_entered_cb</span><span class="p">,</span> <span class="n">taken_path</span><span class="p">)</span>
</span><span class="line">
</span><span class="line">        <span class="c">#ready event call back</span>
</span><span class="line">        <span class="k">if</span> <span class="n">task_spec</span><span class="o">.</span><span class="n">ready_event</span><span class="o">.</span><span class="n">is_connected</span><span class="p">(</span><span class="n">on_ready_cb</span><span class="p">):</span>
</span><span class="line">            <span class="n">task_spec</span><span class="o">.</span><span class="n">ready_event</span><span class="o">.</span><span class="n">disconnect</span><span class="p">(</span><span class="n">on_ready_cb</span><span class="p">)</span>
</span><span class="line">        <span class="n">task_spec</span><span class="o">.</span><span class="n">ready_event</span><span class="o">.</span><span class="n">connect</span><span class="p">(</span><span class="n">on_ready_cb</span><span class="p">,</span> <span class="n">taken_path</span><span class="p">)</span>
</span><span class="line">
</span><span class="line">
</span><span class="line">
</span><span class="line">    <span class="k">def</span> <span class="nf">track_workflow</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">wf_spec</span><span class="p">,</span> <span class="n">taken_path</span> <span class="o">=</span> <span class="bp">None</span><span class="p">):</span>
</span><span class="line">        <span class="k">if</span> <span class="n">taken_path</span> <span class="ow">is</span> <span class="bp">None</span><span class="p">:</span>
</span><span class="line">            <span class="n">taken_path</span> <span class="o">=</span> <span class="p">[]</span>
</span><span class="line">        <span class="k">for</span> <span class="n">name</span> <span class="ow">in</span> <span class="n">wf_spec</span><span class="o">.</span><span class="n">task_specs</span><span class="p">:</span>
</span><span class="line">            <span class="c">#print &quot;track_workflow:&quot;,name</span>
</span><span class="line">            <span class="bp">self</span><span class="o">.</span><span class="n">track_task</span><span class="p">(</span><span class="n">wf_spec</span><span class="o">.</span><span class="n">task_specs</span><span class="p">[</span><span class="n">name</span><span class="p">],</span> <span class="n">taken_path</span><span class="p">)</span>
</span><span class="line">        <span class="k">return</span> <span class="n">taken_path</span>
</span><span class="line">
</span><span class="line"><span class="k">if</span> <span class="n">__name__</span> <span class="o">==</span> <span class="s">&#39;__main__&#39;</span><span class="p">:</span>
</span><span class="line">    <span class="n">qw</span> <span class="o">=</span> <span class="n">QuestionWorkflow</span><span class="p">()</span>
</span><span class="line">    <span class="n">qw</span><span class="o">.</span><span class="n">set_up</span><span class="p">(</span><span class="s">&quot;./case.xml&quot;</span><span class="p">)</span>
</span><span class="line">    <span class="k">print</span> <span class="s">&quot;==========1st question==========&quot;</span>
</span><span class="line">    <span class="n">user_selct</span> <span class="o">=</span> <span class="p">{</span><span class="s">&#39;man&#39;</span><span class="p">:</span><span class="s">&#39;1&#39;</span><span class="p">}</span>
</span><span class="line">    <span class="n">qw</span><span class="o">.</span><span class="n">run</span><span class="p">(</span><span class="n">user_selct</span><span class="p">)</span>
</span><span class="line">    <span class="k">print</span> <span class="s">&quot;==========2nd question==========&quot;</span>
</span><span class="line">    <span class="n">user_selct</span> <span class="o">=</span> <span class="p">{</span><span class="s">&#39;man&#39;</span><span class="p">:</span><span class="s">&#39;1&#39;</span><span class="p">,</span> <span class="s">&#39;house&#39;</span><span class="p">:</span> <span class="s">&#39;2&#39;</span><span class="p">}</span>
</span><span class="line">    <span class="n">qw</span><span class="o">.</span><span class="n">run</span><span class="p">(</span><span class="n">user_selct</span><span class="p">)</span>
</span><span class="line">    <span class="k">print</span> <span class="s">&quot;==========3rd question==========&quot;</span>
</span><span class="line">    <span class="n">user_selct</span> <span class="o">=</span> <span class="p">{</span><span class="s">&#39;man&#39;</span><span class="p">:</span><span class="s">&#39;1&#39;</span><span class="p">,</span> <span class="s">&#39;house&#39;</span><span class="p">:</span> <span class="s">&#39;2&#39;</span><span class="p">,</span> <span class="s">&#39;why&#39;</span><span class="p">:</span> <span class="s">&#39;because you are a hero&#39;</span><span class="p">}</span>
</span><span class="line">    <span class="n">qw</span><span class="o">.</span><span class="n">run</span><span class="p">(</span><span class="n">user_selct</span><span class="p">)</span>
</span><span class="line">
</span><span class="line">    <span class="sd">&#39;&#39;&#39;</span>
</span><span class="line"><span class="sd">    print &quot;==========4th question=========&quot;</span>
</span><span class="line"><span class="sd">    user_selct = {&#39;man&#39;:&#39;1&#39;, &#39;house&#39;: &#39;2&#39;, &#39;role&#39;:&#39;5&#39;}</span>
</span><span class="line"><span class="sd">    qw.run(user_selct)</span>
</span><span class="line"><span class="sd">    &#39;&#39;&#39;</span>
</span><span class="line">
</span><span class="line">    <span class="k">print</span> <span class="s">&quot;==========fix some question==========&quot;</span>
</span><span class="line">    <span class="n">user_selct</span> <span class="o">=</span> <span class="p">{</span><span class="s">&#39;man&#39;</span><span class="p">:</span><span class="s">&#39;1&#39;</span><span class="p">,</span> <span class="s">&#39;house&#39;</span><span class="p">:</span> <span class="s">&#39;1&#39;</span><span class="p">,</span> <span class="s">&#39;role&#39;</span><span class="p">:</span><span class="s">&#39;5&#39;</span><span class="p">}</span>
</span><span class="line">    <span class="n">qw</span><span class="o">.</span><span class="n">run</span><span class="p">(</span><span class="n">user_selct</span><span class="p">,</span><span class="bp">True</span><span class="p">)</span>
</span><span class="line">
</span><span class="line">    <span class="k">print</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>the template case.xml file</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
<span class="line-number">23</span>
<span class="line-number">24</span>
<span class="line-number">25</span>
<span class="line-number">26</span>
<span class="line-number">27</span>
<span class="line-number">28</span>
<span class="line-number">29</span>
<span class="line-number">30</span>
<span class="line-number">31</span>
<span class="line-number">32</span>
<span class="line-number">33</span>
<span class="line-number">34</span>
<span class="line-number">35</span>
<span class="line-number">36</span>
<span class="line-number">37</span>
<span class="line-number">38</span>
<span class="line-number">39</span>
<span class="line-number">40</span>
<span class="line-number">41</span>
<span class="line-number">42</span>
<span class="line-number">43</span>
<span class="line-number">44</span>
<span class="line-number">45</span>
<span class="line-number">46</span>
<span class="line-number">47</span>
<span class="line-number">48</span>
<span class="line-number">49</span>
<span class="line-number">50</span>
<span class="line-number">51</span>
<span class="line-number">52</span>
<span class="line-number">53</span>
<span class="line-number">54</span>
<span class="line-number">55</span>
<span class="line-number">56</span>
<span class="line-number">57</span>
<span class="line-number">58</span>
<span class="line-number">59</span>
<span class="line-number">60</span>
<span class="line-number">61</span>
<span class="line-number">62</span>
<span class="line-number">63</span>
<span class="line-number">64</span>
<span class="line-number">65</span>
<span class="line-number">66</span>
<span class="line-number">67</span>
</pre></td><td class="code"><pre><code class="xml"><span class="line"><span class="cp">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span>
</span><span class="line"><span class="nt">&lt;process-definition</span> <span class="na">name=</span><span class="s">&quot;Daixm Workflow&quot;</span> <span class="na">revision=</span><span class="s">&quot;1.6&quot;</span><span class="nt">&gt;</span>
</span><span class="line">    <span class="nt">&lt;description&gt;</span>
</span><span class="line">    A test workflow that contains all possible tasks.
</span><span class="line">    <span class="nt">&lt;/description&gt;</span>
</span><span class="line">
</span><span class="line">    <span class="c">&lt;!-- Start with an implicit simple split. --&gt;</span>
</span><span class="line">    <span class="nt">&lt;start-task&gt;</span>
</span><span class="line">        <span class="nt">&lt;successor&gt;</span>house_choice<span class="nt">&lt;/successor&gt;</span>
</span><span class="line">    <span class="nt">&lt;/start-task&gt;</span>
</span><span class="line">
</span><span class="line">    <span class="nt">&lt;exclusive-choice</span> <span class="na">name=</span><span class="s">&quot;house_choice&quot;</span><span class="nt">&gt;</span>
</span><span class="line">        <span class="c">&lt;!-- No House --&gt;</span>
</span><span class="line">        <span class="nt">&lt;default-successor&gt;</span>role_choice<span class="nt">&lt;/default-successor&gt;</span>
</span><span class="line">
</span><span class="line">        <span class="nt">&lt;conditional-successor&gt;</span>
</span><span class="line">            <span class="nt">&lt;equals</span> <span class="na">left-field=</span><span class="s">&quot;house&quot;</span> <span class="na">right-value=</span><span class="s">&quot;1&quot;</span> <span class="nt">/&gt;</span>
</span><span class="line">            <span class="nt">&lt;successor&gt;</span>build_house<span class="nt">&lt;/successor&gt;</span>
</span><span class="line">        <span class="nt">&lt;/conditional-successor&gt;</span>
</span><span class="line">
</span><span class="line">        <span class="nt">&lt;conditional-successor&gt;</span>
</span><span class="line">            <span class="nt">&lt;equals</span> <span class="na">left-field=</span><span class="s">&quot;house&quot;</span> <span class="na">right-value=</span><span class="s">&quot;2&quot;</span> <span class="nt">/&gt;</span>
</span><span class="line">            <span class="nt">&lt;successor&gt;</span>buy_house<span class="nt">&lt;/successor&gt;</span>
</span><span class="line">        <span class="nt">&lt;/conditional-successor&gt;</span>
</span><span class="line">    <span class="nt">&lt;/exclusive-choice&gt;</span>
</span><span class="line">
</span><span class="line">    <span class="nt">&lt;task</span> <span class="na">name=</span><span class="s">&quot;buy_house&quot;</span><span class="nt">&gt;</span>
</span><span class="line">        <span class="nt">&lt;description&gt;</span><span class="nt">&lt;/description&gt;</span>
</span><span class="line">        <span class="nt">&lt;successor&gt;</span>house_location<span class="nt">&lt;/successor&gt;</span>
</span><span class="line">    <span class="nt">&lt;/task&gt;</span>
</span><span class="line">
</span><span class="line">    <span class="nt">&lt;task</span> <span class="na">name=</span><span class="s">&quot;house_location&quot;</span><span class="nt">&gt;</span>
</span><span class="line">        <span class="nt">&lt;successor&gt;</span>house_age<span class="nt">&lt;/successor&gt;</span>
</span><span class="line">    <span class="nt">&lt;/task&gt;</span>
</span><span class="line">
</span><span class="line">    <span class="nt">&lt;task</span> <span class="na">name=</span><span class="s">&quot;house_age&quot;</span><span class="nt">&gt;</span>
</span><span class="line">        <span class="nt">&lt;successor&gt;</span>role_choice<span class="nt">&lt;/successor&gt;</span>
</span><span class="line">    <span class="nt">&lt;/task&gt;</span>
</span><span class="line">
</span><span class="line">    <span class="nt">&lt;task</span> <span class="na">name=</span><span class="s">&quot;build_house&quot;</span><span class="nt">&gt;</span>
</span><span class="line">        <span class="nt">&lt;successor&gt;</span>role_choice<span class="nt">&lt;/successor&gt;</span>
</span><span class="line">    <span class="nt">&lt;/task&gt;</span>
</span><span class="line">
</span><span class="line">
</span><span class="line">    <span class="nt">&lt;exclusive-choice</span> <span class="na">name=</span><span class="s">&quot;role_choice&quot;</span><span class="nt">&gt;</span>
</span><span class="line">        <span class="c">&lt;!-- No House --&gt;</span>
</span><span class="line">        <span class="nt">&lt;default-successor&gt;</span>no_jobs<span class="nt">&lt;/default-successor&gt;</span>
</span><span class="line">        <span class="nt">&lt;conditional-successor&gt;</span>
</span><span class="line">            <span class="nt">&lt;equals</span> <span class="na">left-field=</span><span class="s">&quot;role&quot;</span> <span class="na">right-value=</span><span class="s">&quot;1&quot;</span> <span class="nt">/&gt;</span>
</span><span class="line">            <span class="nt">&lt;successor&gt;</span>jobs_working<span class="nt">&lt;/successor&gt;</span>
</span><span class="line">        <span class="nt">&lt;/conditional-successor&gt;</span>
</span><span class="line">    <span class="nt">&lt;/exclusive-choice&gt;</span>
</span><span class="line">
</span><span class="line">
</span><span class="line">    <span class="nt">&lt;task</span> <span class="na">name=</span><span class="s">&quot;no_jobs&quot;</span><span class="nt">&gt;</span>
</span><span class="line">        <span class="nt">&lt;successor&gt;</span>last<span class="nt">&lt;/successor&gt;</span>
</span><span class="line">    <span class="nt">&lt;/task&gt;</span>
</span><span class="line">
</span><span class="line">    <span class="nt">&lt;task</span> <span class="na">name=</span><span class="s">&quot;jobs_working&quot;</span><span class="nt">&gt;</span>
</span><span class="line">        <span class="nt">&lt;successor&gt;</span>last<span class="nt">&lt;/successor&gt;</span>
</span><span class="line">    <span class="nt">&lt;/task&gt;</span>
</span><span class="line">
</span><span class="line">    <span class="c">&lt;!-- A final task. --&gt;</span>
</span><span class="line">    <span class="nt">&lt;task</span> <span class="na">name=</span><span class="s">&quot;last&quot;</span><span class="nt">&gt;</span>
</span><span class="line">        <span class="nt">&lt;successor&gt;</span>end<span class="nt">&lt;/successor&gt;</span>
</span><span class="line">    <span class="nt">&lt;/task&gt;</span>
</span><span class="line"><span class="nt">&lt;/process-definition&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Setting up Django and your web server with uWSGI and nginx]]></title>
    <link href="http://arekyao.github.io/blog/2013/09/15/setting-up-django-and-your-web-server-with-uwsgi-and-nginx/"/>
    <updated>2013-09-15T21:21:00+08:00</updated>
    <id>http://arekyao.github.io/blog/2013/09/15/setting-up-django-and-your-web-server-with-uwsgi-and-nginx</id>
    <content type="html"><![CDATA[<p>Recently, there are many modules or system in python.</p>

<p>This post, let’s focus on webserver system</p>

<p>Out of <a href="https://wiki.python.org/moin/WebFrameworks">Web Framework for python</a>, the most famous is django.
And the most popular httpserver is nginx, apache, lighttpd.</p>

<p>Python is a script language, how does it communicate with httpserver?</p>

<p>The answer is the sgi or cgi,kind of things, which is used to a bridge.</p>

<p>Here is a tuturial which is aimed at the Django user who wants to set up a production web
server. It takes you through the steps required to set up Django so that it
works nicely with uWSGI and nginx. It covers all three components, providing a
complete stack of web application and server software.</p>

<p><a href="http://djangoproject.com/">Django</a> is a high-level Python Web framework that encourages rapid development and clean, pragmatic design.</p>

<!-- more -->

<p><a href="http://nginx.org/">nginx</a> (pronounced <em>engine-x</em>) is a free, open-source, high-performance HTTP server and reverse proxy, as well as an IMAP/POP3 proxy server.</p>

<h2 id="some-notes-about-this-tutorial">Some notes about this tutorial</h2>

<h3 id="note">Note</h3>

<pre><code>This is a **tutorial**. It is not intended to provide a reference guide,
never mind an exhaustive reference, to the subject of deployment.
</code></pre>

<p>nginx and uWSGI are good choices for Django deployment, but they are not the
only ones, or the ‘official’ ones. There are excellent alternatives to both, and
you are encouraged to investigate them.</p>

<p>The way we deploy Django here is a good way, but it is <strong>not</strong> the <em>only</em> way;
for some purposes it is probably not even the best way.</p>

<p>It is however a reliable and easy way, and the material covered here will
introduce you to concepts and procedures you will need to be familiar with
whatever software you use for deploying Django. By providing you with a working
setup, and rehearsing the steps you must take to get there, it will offer you a
basis for exploring other ways to achieve this.</p>

<h3 id="note-1">Note</h3>

<pre><code>This tutorial makes some assumptions about the system you are using.
</code></pre>

<p>It is assumed that you are using a Unix-like system, and that it features
an aptitude-like package manager. However if you need to ask questions like
“What’s the equivalent of aptitude on Mac OS X?”, you’ll be able to find that
kind of help fairly easily.</p>

<p>While this tutorial assumes Django 1.4 or later, which will automatically create
a wsgi module in your new project, the instructions will work with earlier
versions. You will though need to obtain that Django wsgi module yourself, and
you may find that the Django project directory structure is slightly different.</p>

<h2 id="concept">Concept</h2>

<p>A web server faces the outside world. It can serve files (HTML, images, CSS,
etc) directly from the file system. However, it can’t talk <em>directly</em> to Django
applications; it needs something that will run the application, feed it requests
from web clients (such as browsers) and return responses.</p>

<p>A Web Server Gateway Interface - WSGI - does this job. WSGI_ is a Python standard.</p>

<p><a href="http://wsgi.org/">WSGI</a></p>

<p>uWSGI is a WSGI implementation. In this tutorial we will set up uWSGI so that it
creates a Unix socket, and serves responses to the web server via the WSGI
protocol. At the end, our complete stack of components will look like this:</p>

<pre><code>the web client &lt;-&gt; the web server &lt;-&gt; the socket &lt;-&gt; uwsgi &lt;-&gt; Django
</code></pre>

<h2 id="before-you-start-setting-up-uwsgi">Before you start setting up uWSGI</h2>

<h4 id="virtualenv">virtualenv</h4>

<p>Make sure you are in a virtualenv for the software we need to install (we will
describe how to install a system-wide uwsgi later):</p>

<pre><code>virtualenv uwsgi-tutorial
cd uwsgi-tutorial
source bin/activate
</code></pre>

<h4 id="django">Django</h4>

<p>Install Django into your virtualenv, create a new project, and <code>cd</code> into the
project:</p>

<pre><code>pip install Django
django-admin.py startproject mysite 
cd mysite
</code></pre>

<h4 id="about-the-domain-and-port">About the domain and port</h4>

<p>In this tutorial we will call your domain <code>example.com</code>. Substitute your own
FQDN or IP address.</p>

<p>Throughout, we’ll using port 8000 for the web server to publish on, just like
the Django runserver does by default. You can use whatever port you want of
course, but I have chosen this one so it doesn’t conflict with anything a web
server might be doing already.</p>

<h2 id="basic-uwsgi-installation-and-configuration">Basic uWSGI installation and configuration</h2>

<h4 id="install-uwsgi-into-your-virtualenv">Install uWSGI into your virtualenv</h4>

<pre><code>pip install uwsgi
</code></pre>

<p>Of course there are other ways to install uWSGI, but this one is as good as
any. Remember that you will need to have Python development packages installed. 
In the case of Debian, or Debian-derived systems such as Ubuntu, what you need 
to have installed is <code>pythonX.Y-dev</code>, where X.Y is your version of Python.</p>

<h4 id="basic-test">Basic test</h4>

<p>Create a file called <code>test.py</code>:</p>

<pre><code># test.py
def application(env, start_response):
    start_response('200 OK', [('Content-Type','text/html')])
    return "Hello World"
</code></pre>

<p>Run uWSGI:</p>

<pre><code>uwsgi --http :8000 --wsgi-file test.py
</code></pre>

<p>The options mean:</p>

<ul>
  <li>
    <p><code>http :8000</code>: use protocol http, port 8000 </p>
  </li>
  <li>
    <p><code>wsgi-file test.py</code>: load the specified file, test.py</p>
  </li>
</ul>

<p>This should serve a ‘hello world’ message directly to the browser on port 8000.
Visit:</p>

<pre><code>http://example.com:8000
</code></pre>

<p>to check. If so, it means the following stack of components works:</p>

<pre><code>the web client &lt;-&gt; uWSGI &lt;-&gt; Python
</code></pre>

<h4 id="test-your-django-project">Test your Django project</h4>

<p>Now we want uWSGI to do the same thing, but to run a Django site instead of the
<code>test.py</code> module.</p>

<p>If you haven’t already done so, make sure that your <code>mysite</code> project actually works:</p>

<pre><code>python manage.py runserver 0.0.0.0:8000
</code></pre>

<p>And if it that works, run it using uWSGI:</p>

<pre><code>uwsgi --http :8000 --module mysite.wsgi
</code></pre>

<ul>
  <li><code>module mysite.wsgi</code>: load the specified wsgi module</li>
</ul>

<p>Point your browser at the server; if the site appears, it means uWSGI is able
serve your Django application from your virtualenv, and this stack operates
correctly:</p>

<pre><code>the web client &lt;-&gt; uWSGI &lt;-&gt; Django
</code></pre>

<p>Now normally we won’t have the browser speaking directly to uWSGI. That’s a job
for the webserver, which will act as a go-between.</p>

<h2 id="basic-nginx">Basic nginx</h2>

<h4 id="install-nginx">Install nginx</h4>

<pre><code>sudo apt-get install nginx  
sudo /etc/init.d/nginx start    # start nginx
</code></pre>

<p>And now check that the nginx is serving by visiting it in a web browser on port
80 - you should get a message from nginx: “Welcome to nginx!”. That means these
components of the full stack are working together:</p>

<pre><code>the web client &lt;-&gt; the web server
</code></pre>

<p>If something else <em>is</em> already serving on port 80 and you want to use nginx
there, you’ll have to reconfigure nginx to serve on a different port. For this
tutorial though, we’re going to be using port 8000.</p>

<h4 id="configure-nginx-for-your-site">Configure nginx for your site</h4>

<p>You will need the <code>uwsgi_params</code> file, which is available in the <code>nginx</code>
directory of the uWSGI distribution, or from
https://github.com/nginx/nginx/blob/master/conf/uwsgi_params</p>

<p>Copy it into your project directory. In a moment we will tell nginx to refer to
it.</p>

<p>Now create a file called mysite_nginx.conf, and put this in it:</p>

<pre><code># mysite_nginx.conf

# the upstream component nginx needs to connect to
upstream django {
    # server unix:///path/to/your/mysite/mysite.sock; # for a file socket
    server 127.0.0.1:8001; # for a web port socket (we'll use this first) 
    }
 
# configuration of the server
server {
    # the port your site will be served on
    listen      8000;
    # the domain name it will serve for
    server_name .example.com; # substitute your machine's IP address or FQDN
    charset     utf-8;
   
    # max upload size
    client_max_body_size 75M;   # adjust to taste

    # Django media
    location /media  {
        alias /path/to/your/mysite/mysite/media;  # your Django project's media files - amend as required
    }
   
    location /static {
        alias /path/to/your/mysite/mysite/static; # your Django project's static files - amend as required
    }
   
    # Finally, send all non-media requests to the Django server.
    location / {
        uwsgi_pass  django;
        include     /path/to/your/mysite/uwsgi_params; # the uwsgi_params file you installed
        }
    }
</code></pre>

<p>This conf file tells nginx to serve up media and static files from the
filesystem, as well as handle requests that require Django’s intervention. For a
large deployment it is considered good practice to let one server handle
static/media files, and another handle Django applications, but for now, this
will do just fine.</p>

<p>Symlink to this file from /etc/nginx/sites-enabled so nginx can see it:</p>

<pre><code>sudo ln -s ~/path/to/your/mysite/mysite_nginx.conf /etc/nginx/sites-enabled/
</code></pre>

<h4 id="basic-nginx-test">Basic nginx test</h4>

<p>Restart nginx:</p>

<pre><code>sudo /etc/init.d/nginx restart
</code></pre>

<p>To check that media files are being served correctly, add an image called
<code>media.png</code> to the <code>/path/to/your/project/project/media directory</code>, then
visit http://example.com:8000/media/media.png - if this works, you’ll know at
least that nginx is serving files correctly.</p>

<p>It is worth not just restarting nginx, but actually stopping and then starting
it again, which will inform you if there is a problem, and where it is.</p>

<h2 id="nginx-and-uwsgi-and-testpy">nginx and uWSGI and test.py</h2>

<p>Let’s get nginx to speak to the “hello world” <code>test.py</code> application.</p>

<pre><code>uwsgi --socket :8001 --wsgi-file test.py
</code></pre>

<p>This is nearly the same as before, except this time one of the options is
different:</p>

<ul>
  <li><code>socket :8001</code>: use protocol uwsgi, port 8001 </li>
</ul>

<p>nginx meanwhile has been configured to communicate with uWSGI on that port, and
with the outside world on port 8000. Visit:</p>

<p>http://example.com:8000/</p>

<p>to check. And this is our stack:</p>

<pre><code>the web client &lt;-&gt; the web server &lt;-&gt; the socket &lt;-&gt; uWSGI &lt;-&gt; Python
</code></pre>

<p>Meanwhile, you can try to have a look at the uswgi output at
http://example.com:8001 - but quite probably, it won’t work because your browser
speaks http, not uWSGI, though you should see output from uWSGI in your
terminal.</p>

<h2 id="using-unix-sockets-instead-of-ports">Using Unix sockets instead of ports</h2>

<p>So far we have used a TCP port socket, because it’s simpler, but in fact it’s
better to use Unix sockets than ports - there’s less overhead.</p>

<p>Edit <code>mysite_nginx.conf</code>, changing it to match: </p>

<pre><code>server unix:///path/to/your/mysite/mysite.sock; # for a file socket
# server 127.0.0.1:8001; # for a web port socket (we'll use this first) 
</code></pre>

<p>and restart nginx.</p>

<p>Runs uWSGI again:</p>

<pre><code>uwsgi --socket mysite.sock --wsgi-file test.py 
</code></pre>

<p>This time the <code>socket</code> option tells uWSGI which file to use.</p>

<p>Try http://example.com:8000/ in the browser.</p>

<h4 id="if-that-doesnt-work">If that doesn’t work</h4>

<p>Check your nginx error log(/var/log/nginx/error.log). If you see something like:</p>

<pre><code>connect() to unix:///path/to/your/mysite/mysite.sock failed (13: Permission
denied)
</code></pre>

<p>then probably you need to manage the permissions on the socket so that nginx is
allowed to use it.</p>

<p>Try:</p>

<pre><code>uwsgi --socket mysite.sock --wsgi-file test.py --chmod-socket=666 # (very permissive)
</code></pre>

<p>or:</p>

<pre><code>uwsgi --socket mysite.sock --wsgi-file test.py --chmod-socket=664 # (more sensible) 
</code></pre>

<p>You may also have to add your user to nginx’s group (which is probably
www-data), or vice-versa, so that nginx can read and write to your socket
properly. </p>

<p>It’s worth keeping the output of the nginx log running in a terminal window so
you can easily refer to it while troubleshooting.</p>

<h2 id="running-the-django-application-with-uswgi-and-nginx">Running the Django application with uswgi and nginx</h2>

<p>Let’s run our Django application:</p>

<pre><code>uwsgi --socket mysite.sock --module mysite.wsgi --chmod-socket=664
</code></pre>

<p>Now uWSGI and nginx should be serving up not just a “Hello World” module, but
your Django project.</p>

<h2 id="configuring-uwsgi-to-run-with-a-ini-file">Configuring uWSGI to run with a .ini file</h2>

<p>We can put the same options that we used with uWSGI into a file, and then ask
uWSGI to run with that file. It makes it easier to manage configurations.</p>

<p>Create a file called <code>mysite_uwsgi.ini</code>:</p>

<pre><code># mysite_uwsgi.ini file
[uwsgi]

# Django-related settings
# the base directory (full path)
chdir           = /path/to/your/project 
# Django's wsgi file
module          = project.wsgi
# the virtualenv (full path) 
home            = /path/to/virtualenv

# process-related settings
# master
master          = true
# maximum number of worker processes
processes       = 10
# the socket (use the full path to be safe
socket          = /path/to/your/project/mysite.sock 
# ... with appropriate permissions - may be needed
# chmod-socket    = 664
# clear environment on exit
vacuum          = true           
</code></pre>

<p>And run uswgi using this file:</p>

<pre><code>uwsgi --ini mysite_uwsgi.ini # the --ini option is used to specify a file
</code></pre>

<p>Once again, test that the Django site works as expected.</p>

<h2 id="install-uwsgi-system-wide">Install uWSGI system-wide</h2>

<p>So far, uWSGI is only installed in our virtualenv; we’ll need it installed
system-wide for deployment purposes.</p>

<p>Deactivate your virtualenv:</p>

<pre><code>deactivate
</code></pre>

<p>and install uWSGI system-wide:</p>

<pre><code>sudo pip install uwsgi
                                                         
# Or install LTS (long term support).
pip install http://projects.unbit.it/downloads/uwsgi-lts.tar.gz
</code></pre>

<p>The uWSGI wiki describes several <code>installation procedures</code>_. Before installing
uWSGI system-wide, it’s worth considering which version to choose and the most
apppropriate way of installing it.</p>

<p>.. _installation procedures: http://projects.unbit.it/uwsgi/wiki/Install</p>

<p>Check again that you can still run uWSGI just like you did before:</p>

<pre><code>uwsgi --ini mysite_uwsgi.ini # the --ini option is used to specify a file
</code></pre>

<h2 id="emperor-mode">Emperor mode</h2>

<p>uWSGI can run in ‘emperor’ mode. In this mode it keeps an eye on a directory of
uWSGI config files, and will spawn instances (‘vassals’) for each one it finds.</p>

<p>Whenever a config file is amended, the emperor will automatically restart the
vassal.</p>

<pre><code># create a directory for the vassals
sudo mkdir /etc/uwsgi
sudo mkdir /etc/uwsgi/vassals
# symlink from the default config directory to your config file
sudo ln -s /path/to/your/mysite/mysite_uwsgi.ini /etc/uwsgi/vassals/
# run the emperor
uwsgi --emperor /etc/uwsgi/vassals --uid www-data --gid www-data
</code></pre>

<p>You may need to run uWSGI with sudo:</p>

<pre><code>sudo uwsgi --emperor /etc/uwsgi/vassals --uid www-data --gid www-data
</code></pre>

<p>The options mean:</p>

<ul>
  <li><code>emperor</code>: where to look for vassals (config files)</li>
  <li><code>uid</code>: the user id of the process once it’s started</li>
  <li><code>gid</code>: the group id of the process once it’s started</li>
</ul>

<p>Check the site; it should be running.</p>

<h2 id="make-uwsgi-startup-when-the-system-boots">Make uWSGI startup when the system boots</h2>

<p>The last step is to make it all happen automatically at system startup time.</p>

<p>Edit <code>/etc/rc.local</code> and add:</p>

<pre><code>/usr/local/bin/uwsgi --emperor /etc/uwsgi/vassals --uid www-data --gid www-data
</code></pre>

<p>before the line “exit 0”.</p>

<p>And that should be it!</p>

<h2 id="further-configuration">Further configuration</h2>

<p>It is important to understand that this has been a <em>tutorial</em>, to get you
started. You <strong>do</strong> need to read the nginx and uWSGI documentation, and study
the options available before deployment in a production environment.</p>

<p>Both nginx and uWSGI benefit from friendly communities, who are able to offer
invaluable advice about configuration and usage.</p>

<p>nginx
^^^^^</p>

<p>General configuration of nginx is not within the scope of this tutorial though
you’ll probably want to it to listen on port 80, not 8000, for a production
website.</p>

<p>You also ought to consider at having a separate server for non-Django
serving, of static files for example.</p>

<p>uWSGI
^^^^^</p>

<p>uWSGI supports multiple ways to configure it. See <code>uWSGI's documentation</code> and
<code>examples</code>.</p>

<p>Some uWSGI options have been mentioned in this tutorial; others you ought to
look at for a deployment in production include (listed here with example
settings):</p>

<pre><code>env = DJANGO_SETTINGS_MODULE=mysite.settings # set an environment variable
pidfile = /tmp/project-master.pid # create a pidfile
harakiri = 20 # respawn processes taking more than 20 seconds
limit-as = 128 # limit the project to 128 MB
max-requests = 5000 # respawn processes after serving 5000 requests
daemonize = /var/log/uwsgi/yourproject.log # background the process &amp; log
</code></pre>

<h2 id="copy-from">Copy From:</h2>

<p>https://github.com/unbit/uwsgi-docs/blob/master/tutorials/Django_and_nginx.rst</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How to Add Category list to your octopress blog]]></title>
    <link href="http://arekyao.github.io/blog/2013/09/09/how-to-add-category-list-to-your-octopress-blog/"/>
    <updated>2013-09-09T22:22:00+08:00</updated>
    <id>http://arekyao.github.io/blog/2013/09/09/how-to-add-category-list-to-your-octopress-blog</id>
    <content type="html"><![CDATA[<h3 id="generate-category-list">1,generate category list</h3>

<p>save code to the file plugins/category_list_tag.rb</p>

<!-- more -->

<div class="highlight"><pre><code class="ruby"><span class="k">module</span> <span class="nn">Jekyll</span>
  <span class="k">class</span> <span class="nc">CategoryListTag</span> <span class="o">&lt;</span> <span class="ss">Liquid</span><span class="p">:</span><span class="ss">:Tag</span>
    <span class="k">def</span> <span class="nf">render</span><span class="p">(</span><span class="n">context</span><span class="p">)</span>
      <span class="n">html</span> <span class="o">=</span> <span class="s2">&quot;&quot;</span>
      <span class="n">categories</span> <span class="o">=</span> <span class="n">context</span><span class="o">.</span><span class="n">registers</span><span class="o">[</span><span class="ss">:site</span><span class="o">].</span><span class="n">categories</span><span class="o">.</span><span class="n">keys</span>
      <span class="n">categories</span><span class="o">.</span><span class="n">sort</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">category</span><span class="o">|</span>
        <span class="n">posts_in_category</span> <span class="o">=</span> <span class="n">context</span><span class="o">.</span><span class="n">registers</span><span class="o">[</span><span class="ss">:site</span><span class="o">].</span><span class="n">categories</span><span class="o">[</span><span class="n">category</span><span class="o">].</span><span class="n">size</span>
        <span class="n">category_dir</span> <span class="o">=</span> <span class="n">context</span><span class="o">.</span><span class="n">registers</span><span class="o">[</span><span class="ss">:site</span><span class="o">].</span><span class="n">config</span><span class="o">[</span><span class="s1">&#39;category_dir&#39;</span><span class="o">]</span>
        <span class="n">category_url</span> <span class="o">=</span> <span class="no">File</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">category_dir</span><span class="p">,</span> <span class="n">category</span><span class="o">.</span><span class="n">gsub</span><span class="p">(</span><span class="sr">/_|\P{Word}/</span><span class="p">,</span> <span class="s1">&#39;-&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">gsub</span><span class="p">(</span><span class="sr">/-{2,}/</span><span class="p">,</span> <span class="s1">&#39;-&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">downcase</span><span class="p">)</span>
        <span class="n">html</span> <span class="o">&lt;&lt;</span> <span class="s2">&quot;&lt;li class=&#39;category&#39;&gt;&lt;a href=&#39;/</span><span class="si">#{</span><span class="n">category_url</span><span class="si">}</span><span class="s2">/&#39;&gt;</span><span class="si">#{</span><span class="n">category</span><span class="si">}</span><span class="s2"> (</span><span class="si">#{</span><span class="n">posts_in_category</span><span class="si">}</span><span class="s2">)&lt;/a&gt;&lt;/li&gt;</span><span class="se">\n</span><span class="s2">&quot;</span>
      <span class="k">end</span>
      <span class="n">html</span>
    <span class="k">end</span>
  <span class="k">end</span>
<span class="k">end</span>

<span class="ss">Liquid</span><span class="p">:</span><span class="ss">:Template</span><span class="o">.</span><span class="n">register_tag</span><span class="p">(</span><span class="s1">&#39;category_list&#39;</span><span class="p">,</span> <span class="ss">Jekyll</span><span class="p">:</span><span class="ss">:CategoryListTag</span><span class="p">)</span>
</code></pre></div>

<p>This plugin will register a tag『in xml 』 called catetory_list in liquid.<br />
All your category in you blog, will be organised in li.  </p>

<h3 id="add-aside">2,add aside</h3>

<p>copy those code to source/_includes/asides/category_list.html</p>

<p>del the ‘\’</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
</pre></td><td class="code"><pre><code class="xml"><span class="line"><span class="nt">&lt;section&gt;</span>
</span><span class="line">  <span class="nt">&lt;h1&gt;</span>Categories<span class="nt">&lt;/h1&gt;</span>
</span><span class="line">  <span class="nt">&lt;ul</span> <span class="na">id=</span><span class="s">&quot;categories&quot;</span><span class="nt">&gt;</span>
</span><span class="line">    {\% category_list %}
</span><span class="line">  <span class="nt">&lt;/ul&gt;</span>
</span><span class="line"><span class="nt">&lt;/section&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>then modify config file _config.yml:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="xml"><span class="line">default_asides: [asides/category_list.html, asides/recent_posts.html]
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>or include the category_list.html in some file</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How to change your octopress blog theme]]></title>
    <link href="http://arekyao.github.io/blog/2013/08/09/how-to-change-your-octopress-blog-theme/"/>
    <updated>2013-08-09T22:51:00+08:00</updated>
    <id>http://arekyao.github.io/blog/2013/08/09/how-to-change-your-octopress-blog-theme</id>
    <content type="html"><![CDATA[<h3 id="get-the-theme">Get the theme</h3>

<p>There are 3rd Party Octopress Themes in :<br />
https://github.com/imathis/octopress/wiki/3rd-Party-Octopress-Themes</p>

<p>I pretty love FoxSlide and Reynard, but the reynard does not work in my octopress with some unknown problme.<br />
So I forked FoxSlide and make one by myself.</p>

<p>Here is my product:<br />
https://github.com/arekyao/everyday</p>

<h3 id="install-the-theme">Install the theme</h3>

<!-- more -->

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
</pre></td><td class="code"><pre><code class="sh"><span class="line"><span class="nv">$ </span><span class="nb">cd </span>yourOctopress
</span><span class="line"><span class="nv">$ </span>git clone https://github.com/arekyao/everyday .themes/everyday
</span><span class="line"><span class="nv">$ </span>rake install<span class="o">[</span><span class="s1">&#39;everyday&#39;</span><span class="o">]</span>
</span><span class="line"><span class="nv">$ </span>rake generate
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>‘rake generate’ is very important and you would face lots of problems without it.</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[The Key Technologies in Simple XiangQi Engine MaxQi]]></title>
    <link href="http://arekyao.github.io/blog/2013/07/02/the-key-technologies-in-simple-xiangqi-engine-maxqi/"/>
    <updated>2013-07-02T08:30:00+08:00</updated>
    <id>http://arekyao.github.io/blog/2013/07/02/the-key-technologies-in-simple-xiangqi-engine-maxqi</id>
    <content type="html"><![CDATA[<h2 id="mini-max-algorithm">1,mini-max algorithm</h2>

<p>minimize the opponent’s potential max profit.</p>

<p>easy to understand,right?</p>

<h2 id="alpha-beta-cutoff">2,alpha-beta cutoff</h2>

<p>It stops completely evaluating a move when at least one possibility has been found that proves the move to be worse than a previously examined move.  <br />
  <!-- more -->
 Such moves need not be evaluated further. </p>

<p>When applied to a standard minimax tree, it returns the same move as minimax would, but prunes away branches that cannot possibly influence the final decision</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
</pre></td><td class="code"><pre><code class=""><span class="line">function alphabeta(node, depth, a, b, Player)        
</span><span class="line">    if depth = 0 or node is a terminal node
</span><span class="line">        return the heuristic value of node
</span><span class="line">    if Player = MaxPlayer
</span><span class="line">        for each child of node
</span><span class="line">            a := max(a, alphabeta(child, depth-1, a, b, not(Player) ))    
</span><span class="line">            if b &lt;= a
</span><span class="line">                break                             (* Beta cut-off *)
</span><span class="line">        return a
</span><span class="line">    else
</span><span class="line">        for each child of node
</span><span class="line">            b := min(b, alphabeta(child, depth-1, a, b, not(Player) ))    
</span><span class="line">            if b &lt;= a
</span><span class="line">                break                             (* Alpha cut-off *)
</span><span class="line">        return b
</span><span class="line">(* Initial call *)
</span><span class="line">alphabeta(origin, depth, -infinity, +infinity, MaxPlayer)</span></code></pre></td></tr></table></div></figure></notextile></div>

<h2 id="quiescence-search">3,Quiescence search</h2>

<p>When have to recapture , it have to search until there is no tradeoff</p>

<h2 id="iterative-search">4,Iterative search</h2>

<p>the key is the search depth.</p>

<p>The efficiency of the alpha-beta search is strongly enhanced (in terms of the number of nodes searched) <br />
if the best move is tried first, and trying idiotic moves first (such as both Queens getting berserk) can easily lead to an explosion of the search.  </p>

<p>Rather than aggressively starting a search of the required depth, proceed carefully and first invest some time doing a search of shallower depth.  </p>

<p>What it can get ,through the shallower depth search , the window (alpha-beta,the min &amp; max) and the best move, which is supposed to search first in deepen search</p>

<h2 id="hash-table">5, Hash table</h2>

<p>Use the result which has been faced last time.</p>

<p>So it is needed some hash key to describe the whole board </p>

<p>The Zobrist Keys show up!</p>

<h2 id="zobrist-hashing">6,Zobrist hashing</h2>

<p>Zobrist hashing starts by randomly generating bitstrings for each possible element of a board game</p>

<p>The final Zobrist hash is computed by combining those bitstrings using bitwise XOR.</p>

<p>the good is the hash key is recalculated by two “xor”</p>

<h2 id="monte-carlo-methods">7,Monte Carlo methods</h2>

<p>This method can be used to estimate the board status(which side is at better thant the other side)</p>

<p>Monte Carlo methods vary, but tend to follow a particular pattern:</p>

<p>a). Define a domain of possible inputs.<br />
  b). Generate inputs randomly from a probability distribution over the domain.<br />
  c). Perform a deterministic computation on the inputs.<br />
  d). Aggregate the results.  </p>

<p>However, in maxqi, it’s not used.<br />
The other way the piece’s weight sum is used to estimate.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Something about Chess series with AI]]></title>
    <link href="http://arekyao.github.io/blog/2013/06/23/something-about-chess-series-with-ai/"/>
    <updated>2013-06-23T20:48:00+08:00</updated>
    <id>http://arekyao.github.io/blog/2013/06/23/something-about-chess-series-with-ai</id>
    <content type="html"><![CDATA[<h2 id="preface">Preface</h2>
<p>One day, I want to learn some knowledge about the Game AI topic.
Chess series is supposed to a big collection in Game.
Xiangqi is my fav chess game, and I am familiar with it.
It’s a good choice.</p>

<p>Besides, six years ago, I have developed xiangqi program both in java &amp; C++.
I can use it to learn AI engine ,and the program developed before , can be seen as a GUI.
Techinically, it will be OK then.
Reality is cruel, the Java version is lost at home, and the C++ version have to run on Window, not my Mac OSX.</p>

<h2 id="chess--ai">Chess &amp; AI</h2>

<!-- more -->

<p><a href="http://www.chessvariants.org/d.chess/chess.html">Chess</a> is a two-player strategy board game played on a chessboard, a checkered gameboard with 64 squares arranged in an eight-by-eight grid. <br />
It is one of the world’s most popular games, played by millions of people worldwide at home, in clubs, online, by correspondence, and in tournaments.</p>

<p>So if chess has AI, then we can compete with Computer.  </p>

<p>More interestingly, we can let two Computer with AI fight with each other.</p>

<p>There are all kinds of chess game, which seems alike.</p>

<p>They have these Feature:
* board with X * Y
* pieces with some rule</p>

<p>Chess(International)
http://www.chessvariants.org/d.chess/chess.html</p>

<p>Xiangqi(Chinese Chess)
http://www.chessvariants.org/xiangqi.html</p>

<h2 id="xboard--fairymax">Xboard &amp; FairyMax</h2>
<p>Xboard is a chess program, FairyMax is a chess engine(AI)</p>

<p><a href="http://www.gnu.org/software/xboard/">Xboard</a> is a graphical user interface for chess in all its major forms, <br />
including international chess, xiangqi (Chinese chess), shogi (Japanese chess) and Makruk, <br />
in addition to many minor variants such as Losers Chess, Crazyhouse, Chess960 and Capablanca Chess.  </p>

<p><a href="http://home.hccnet.nl/h.g.muller/CVfairy.html">FairyMax</a>
FairyMax is developed by H.G.Muller, who is super fan of chess.
Maxqi is the xiangqi engine.</p>

<h2 id="learing">Learing</h2>

<h5 id="first--install-xboard--fairymax">First , install xboard &amp; Fairymax</h5>

<p>Here is a way:</p>

<p><a href="">https://github.com/Homebrew/homebrew-games</a></p>

<h5 id="second-problem-is-how-to-run-xboard">Second Problem is how to run xboard….</h5>

<p>Don’t underestimate it.
It takes me lots of time to test it.</p>

<p>Help information? xboard help?     It does not work <br />
The output is full of useless infomation</p>

<p>Xboard web help? User guide ? It does not work.<br />
http://www.gnu.org/software/xboard/user_guide/UserGuide.html</p>

<p>at last, I have to learn how to run, From an appication on Window..</p>

<p>OMG….</p>

<p>1, copy the xboard.ini to be used as xboard.rc</p>

<p>2, then I got the knowledge, the viariant arg…supposed to be the xiangqi</p>

<p>3, use fcp can call the maxqi. from user guide</p>

<p>now, it almost works but have a problem
xiangqi can compatible with maxqi engine</p>

<p>4, firstProtocolVersion is need.</p>

<p>ok,then you can run xboard</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class=""><span class="line">xboard -variant xiangqi -firstProtocolVersion 1 -fcp maxqi</span></code></pre></td></tr></table></div></figure></notextile></div>

<h5 id="review-the-maxqi-code">review the maxqi code</h5>
<p>Now the biggest problem,which I will face, is coming….</p>

<p>Why?</p>

<p>Becaure somebody want to program the engine with 1200 characters.</p>

<p>Here is the code, are you crazy? especially, the Function D()…..</p>

<p>I got the code little by little, and hesitate when D() function come to me…</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>Function D</span><a href="http://fairymax.sourcearchive.com/documentation/4.8q-2/maxqi_8c_source.html">Source Article</a></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
<span class="line-number">23</span>
<span class="line-number">24</span>
<span class="line-number">25</span>
<span class="line-number">26</span>
<span class="line-number">27</span>
<span class="line-number">28</span>
<span class="line-number">29</span>
<span class="line-number">30</span>
<span class="line-number">31</span>
<span class="line-number">32</span>
<span class="line-number">33</span>
<span class="line-number">34</span>
<span class="line-number">35</span>
<span class="line-number">36</span>
<span class="line-number">37</span>
<span class="line-number">38</span>
<span class="line-number">39</span>
<span class="line-number">40</span>
<span class="line-number">41</span>
<span class="line-number">42</span>
<span class="line-number">43</span>
<span class="line-number">44</span>
<span class="line-number">45</span>
<span class="line-number">46</span>
<span class="line-number">47</span>
<span class="line-number">48</span>
<span class="line-number">49</span>
<span class="line-number">50</span>
<span class="line-number">51</span>
<span class="line-number">52</span>
<span class="line-number">53</span>
<span class="line-number">54</span>
<span class="line-number">55</span>
<span class="line-number">56</span>
<span class="line-number">57</span>
<span class="line-number">58</span>
<span class="line-number">59</span>
<span class="line-number">60</span>
<span class="line-number">61</span>
<span class="line-number">62</span>
<span class="line-number">63</span>
<span class="line-number">64</span>
<span class="line-number">65</span>
<span class="line-number">66</span>
<span class="line-number">67</span>
<span class="line-number">68</span>
<span class="line-number">69</span>
<span class="line-number">70</span>
<span class="line-number">71</span>
<span class="line-number">72</span>
<span class="line-number">73</span>
<span class="line-number">74</span>
<span class="line-number">75</span>
<span class="line-number">76</span>
<span class="line-number">77</span>
<span class="line-number">78</span>
<span class="line-number">79</span>
<span class="line-number">80</span>
<span class="line-number">81</span>
<span class="line-number">82</span>
<span class="line-number">83</span>
<span class="line-number">84</span>
<span class="line-number">85</span>
<span class="line-number">86</span>
<span class="line-number">87</span>
<span class="line-number">88</span>
<span class="line-number">89</span>
<span class="line-number">90</span>
<span class="line-number">91</span>
<span class="line-number">92</span>
<span class="line-number">93</span>
<span class="line-number">94</span>
<span class="line-number">95</span>
<span class="line-number">96</span>
</pre></td><td class="code"><pre><code class="c"><span class="line"><span class="n">D</span><span class="p">(</span><span class="n">k</span><span class="p">,</span><span class="n">q</span><span class="p">,</span><span class="n">l</span><span class="p">,</span><span class="n">e</span><span class="p">,</span><span class="n">z</span><span class="p">,</span><span class="n">n</span><span class="p">)</span>          <span class="cm">/* recursive minimax search, k=moving side, n=depth*/</span>
</span><span class="line">    <span class="kt">int</span> <span class="n">k</span><span class="p">,</span><span class="n">q</span><span class="p">,</span><span class="n">l</span><span class="p">,</span><span class="n">e</span><span class="p">,</span><span class="n">z</span><span class="p">,</span><span class="n">n</span><span class="p">;</span>        <span class="cm">/* (q,l)=window, e=current eval. score, E=e.p. sqr.*/</span>
</span><span class="line"><span class="p">{</span>                       <span class="cm">/* e=score, z=prev.dest; J,Z=hashkeys; return score*/</span>
</span><span class="line">    <span class="kt">int</span> <span class="n">j</span><span class="p">,</span><span class="n">r</span><span class="p">,</span><span class="n">m</span><span class="p">,</span><span class="n">v</span><span class="p">,</span><span class="n">d</span><span class="p">,</span><span class="n">h</span><span class="p">,</span><span class="n">i</span><span class="p">,</span><span class="n">P</span><span class="p">,</span><span class="n">V</span><span class="p">,</span><span class="n">f</span><span class="o">=</span><span class="n">J</span><span class="p">,</span><span class="n">g</span><span class="o">=</span><span class="n">Z</span><span class="p">,</span><span class="n">C</span><span class="p">,</span><span class="n">s</span><span class="p">,</span><span class="n">flag</span><span class="p">,</span><span class="n">F</span><span class="p">;</span>
</span><span class="line">    <span class="kt">unsigned</span> <span class="kt">char</span> <span class="n">t</span><span class="p">,</span><span class="n">p</span><span class="p">,</span><span class="n">u</span><span class="p">,</span><span class="n">x</span><span class="p">,</span><span class="n">y</span><span class="p">,</span><span class="n">X</span><span class="p">,</span><span class="n">Y</span><span class="p">,</span><span class="n">B</span><span class="p">,</span><span class="n">lu</span><span class="p">;</span>
</span><span class="line">    <span class="k">struct</span> <span class="n">_</span><span class="o">*</span><span class="n">a</span><span class="o">=</span><span class="n">A</span><span class="o">+</span><span class="p">(</span><span class="n">J</span><span class="o">+</span><span class="n">k</span><span class="o">&amp;</span><span class="n">U</span><span class="o">-</span><span class="mi">1</span><span class="p">);</span>                       <span class="cm">/* lookup pos. in hash table*/</span>
</span><span class="line">    <span class="n">q</span><span class="o">-=</span><span class="n">q</span><span class="o">&lt;</span><span class="n">e</span><span class="p">;</span><span class="n">l</span><span class="o">-=</span><span class="n">l</span><span class="o">&lt;=</span><span class="n">e</span><span class="p">;</span>                               <span class="cm">/* adj. window: delay bonus */</span>
</span><span class="line">    <span class="n">d</span><span class="o">=</span><span class="n">a</span><span class="o">-&gt;</span><span class="n">D</span><span class="p">;</span><span class="n">m</span><span class="o">=</span><span class="n">a</span><span class="o">-&gt;</span><span class="n">V</span><span class="p">;</span><span class="n">F</span><span class="o">=</span><span class="n">a</span><span class="o">-&gt;</span><span class="n">F</span><span class="p">;</span>                         <span class="cm">/* resume at stored depth   */</span>
</span><span class="line">    <span class="n">X</span><span class="o">=</span><span class="n">a</span><span class="o">-&gt;</span><span class="n">X</span><span class="p">;</span><span class="n">Y</span><span class="o">=</span><span class="n">a</span><span class="o">-&gt;</span><span class="n">Y</span><span class="p">;</span>                                <span class="cm">/* start at best-move hint  */</span>
</span><span class="line">    <span class="k">if</span><span class="p">(</span><span class="n">z</span><span class="o">&amp;</span><span class="n">S</span><span class="o">&amp;&amp;</span><span class="n">a</span><span class="o">-&gt;</span><span class="n">K</span><span class="o">==</span><span class="n">Z</span><span class="p">)</span><span class="n">printf</span><span class="p">(</span><span class="s">&quot;# root hit %d %d %x</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span><span class="n">a</span><span class="o">-&gt;</span><span class="n">D</span><span class="p">,</span><span class="n">a</span><span class="o">-&gt;</span><span class="n">V</span><span class="p">,</span><span class="n">a</span><span class="o">-&gt;</span><span class="n">F</span><span class="p">);</span>
</span><span class="line">    <span class="k">if</span><span class="p">(</span><span class="n">a</span><span class="o">-&gt;</span><span class="n">K</span><span class="o">-</span><span class="n">Z</span><span class="o">|</span><span class="n">z</span><span class="o">&amp;</span><span class="n">S</span>  <span class="o">|</span>                              <span class="cm">/* miss: other pos. or empty*/</span>
</span><span class="line">            <span class="o">!</span><span class="p">(</span><span class="n">m</span><span class="o">&lt;=</span><span class="n">q</span><span class="o">|</span><span class="n">F</span><span class="o">&amp;</span><span class="mi">8</span><span class="o">&amp;&amp;</span><span class="n">m</span><span class="o">&gt;=</span><span class="n">l</span><span class="o">|</span><span class="n">F</span><span class="o">&amp;</span><span class="n">S</span><span class="p">))</span>                       <span class="cm">/*   or window incompatible */</span>
</span><span class="line">        <span class="n">d</span><span class="o">=</span><span class="n">X</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="n">Y</span><span class="o">=-</span><span class="mi">1</span><span class="p">;</span>                                  <span class="cm">/* start iter. from scratch */</span>
</span><span class="line">    <span class="n">W</span><span class="p">(</span><span class="n">d</span><span class="o">++&lt;</span><span class="n">n</span><span class="o">||</span><span class="n">d</span><span class="o">&lt;</span><span class="mi">3</span><span class="o">||</span>              <span class="cm">/*** min depth = 2   iterative deepening loop */</span>
</span><span class="line">            <span class="n">z</span><span class="o">&amp;</span><span class="n">S</span><span class="o">&amp;&amp;</span><span class="n">K</span><span class="o">==</span><span class="n">I</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="n">GetTickCount</span><span class="p">()</span><span class="o">-</span><span class="n">Ticks</span><span class="o">&lt;</span><span class="n">tlim</span><span class="o">&amp;</span><span class="n">d</span><span class="o">&lt;=</span><span class="n">MaxDepth</span><span class="o">||</span> <span class="cm">/* root: deepen upto time   */</span>
</span><span class="line">                <span class="p">(</span><span class="n">K</span><span class="o">=</span><span class="n">X</span><span class="p">,</span><span class="n">L</span><span class="o">=</span><span class="n">Y</span><span class="p">,</span><span class="n">d</span><span class="o">=</span><span class="mi">3</span><span class="p">)))</span>                             <span class="cm">/* time&#39;s up: go do best    */</span>
</span><span class="line">    <span class="p">{</span><span class="n">x</span><span class="o">=</span><span class="n">B</span><span class="o">=</span><span class="n">X</span><span class="p">;</span><span class="n">lu</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span>                                  <span class="cm">/* start scan at prev. best */</span>
</span><span class="line">        <span class="n">h</span><span class="o">=</span><span class="n">Y</span><span class="o">-</span><span class="mi">255</span><span class="p">;</span>                                       <span class="cm">/* if move, request 1st try */</span>
</span><span class="line">        <span class="n">P</span><span class="o">=</span><span class="n">d</span><span class="o">&gt;</span><span class="mi">2</span><span class="o">&amp;&amp;</span><span class="n">l</span><span class="o">+</span><span class="n">I</span><span class="o">?</span><span class="n">D</span><span class="p">(</span><span class="mi">16</span><span class="o">-</span><span class="n">k</span><span class="p">,</span><span class="o">-</span><span class="n">l</span><span class="p">,</span><span class="mi">1</span><span class="o">-</span><span class="n">l</span><span class="p">,</span><span class="o">-</span><span class="n">e</span><span class="p">,</span><span class="mi">2</span><span class="o">*</span><span class="n">S</span><span class="p">,</span><span class="n">d</span><span class="o">-</span><span class="mi">3</span><span class="p">)</span><span class="o">:</span><span class="n">I</span><span class="p">;</span>      <span class="cm">/* search null move         */</span>
</span><span class="line">        <span class="n">m</span><span class="o">=-</span><span class="n">P</span><span class="o">&lt;</span><span class="n">l</span><span class="o">|</span><span class="n">R</span><span class="o">&lt;</span><span class="mi">5</span><span class="o">?</span><span class="n">d</span><span class="o">-</span><span class="mi">2</span><span class="o">?-</span><span class="n">I</span><span class="o">:</span><span class="n">e</span><span class="o">:-</span><span class="n">P</span><span class="p">;</span>   <span class="cm">/*** prune if &gt; beta  unconsidered:static eval */</span>
</span><span class="line">        <span class="n">N</span><span class="o">++</span><span class="p">;</span>                                         <span class="cm">/* node count (for timing)  */</span>
</span><span class="line">        <span class="k">do</span><span class="p">{</span><span class="n">u</span><span class="o">=</span><span class="n">b</span><span class="p">[</span><span class="n">x</span><span class="p">];</span>                                   <span class="cm">/* scan board looking for   */</span>
</span><span class="line">            <span class="k">if</span><span class="p">(</span><span class="n">u</span><span class="p">)</span><span class="n">m</span><span class="o">=</span><span class="n">lu</span><span class="o">|</span><span class="n">u</span><span class="o">&amp;</span><span class="mi">15</span><span class="o">^</span><span class="mi">3</span><span class="o">?</span><span class="n">m</span><span class="o">:</span><span class="p">(</span><span class="n">d</span><span class="o">=</span><span class="mi">98</span><span class="p">,</span><span class="n">I</span><span class="p">),</span><span class="n">lu</span><span class="o">=</span><span class="n">u</span><span class="o">&amp;</span><span class="mi">15</span><span class="o">^</span><span class="mi">3</span><span class="p">;</span>        <span class="cm">/* Kings facing each other  */</span>
</span><span class="line">            <span class="k">if</span><span class="p">(</span><span class="n">u</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="n">u</span><span class="o">&amp;</span><span class="mi">16</span><span class="p">)</span><span class="o">==</span><span class="n">k</span><span class="p">)</span>                            <span class="cm">/*  own piece (inefficient!)*/</span>
</span><span class="line">            <span class="p">{</span><span class="n">r</span><span class="o">=</span><span class="n">p</span><span class="o">=</span><span class="n">u</span><span class="o">&amp;</span><span class="mi">15</span><span class="p">;</span>                                  <span class="cm">/* p = piece type (set r&gt;0) */</span>
</span><span class="line">                <span class="n">j</span><span class="o">=</span><span class="n">od</span><span class="p">[</span><span class="n">p</span><span class="p">];</span>                                   <span class="cm">/* first step vector f.piece*/</span>
</span><span class="line">                <span class="n">W</span><span class="p">(</span><span class="n">r</span><span class="o">=</span><span class="n">o</span><span class="p">[</span><span class="o">++</span><span class="n">j</span><span class="p">])</span>                                <span class="cm">/* loop over directions o[] */</span>
</span><span class="line">                <span class="p">{</span><span class="n">A</span><span class="o">:</span>                                        <span class="cm">/* resume normal after best */</span>
</span><span class="line">                    <span class="n">flag</span><span class="o">=</span><span class="n">h</span><span class="o">?</span><span class="mi">3</span><span class="o">:</span><span class="n">of</span><span class="p">[</span><span class="n">j</span><span class="p">];</span>                           <span class="cm">/* move modes (for fairies) */</span>
</span><span class="line">                    <span class="n">y</span><span class="o">=</span><span class="n">x</span><span class="p">;</span>                                      <span class="cm">/* (x,y)=move               */</span>
</span><span class="line">                    <span class="k">do</span><span class="p">{</span>                                       <span class="cm">/* y traverses ray, or:     */</span>
</span><span class="line">                        <span class="n">y</span><span class="o">=</span><span class="n">h</span><span class="o">?</span><span class="n">Y</span><span class="o">:</span><span class="n">y</span><span class="o">+</span><span class="n">r</span><span class="p">;</span>                               <span class="cm">/* sneak in prev. best move */</span>
</span><span class="line">                        <span class="k">if</span><span class="p">(</span><span class="n">y</span><span class="o">&gt;=</span><span class="mi">16</span><span class="o">*</span><span class="n">BH</span><span class="o">|</span><span class="p">(</span><span class="n">y</span><span class="o">&amp;</span><span class="mi">15</span><span class="p">)</span><span class="o">&gt;=</span><span class="n">BW</span><span class="p">)</span><span class="k">break</span><span class="p">;</span>            <span class="cm">/* board edge hit           */</span>
</span><span class="line">                        <span class="n">t</span><span class="o">=</span><span class="n">b</span><span class="p">[</span><span class="n">y</span><span class="p">];</span>                                  <span class="cm">/* captured piece           */</span>
</span><span class="line">                        <span class="k">if</span><span class="p">(</span><span class="n">flag</span><span class="o">&amp;</span><span class="mi">1</span><span class="o">+!</span><span class="n">t</span><span class="p">)</span>                            <span class="cm">/* mode (capt/nonc) allowed?*/</span>
</span><span class="line">                        <span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="n">t</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="n">t</span><span class="o">&amp;</span><span class="mi">16</span><span class="p">)</span><span class="o">==</span><span class="n">k</span><span class="o">||</span><span class="n">flag</span><span class="o">&gt;&gt;</span><span class="mi">10</span><span class="o">&amp;</span><span class="n">zn</span><span class="p">[</span><span class="n">y</span><span class="p">])</span><span class="k">break</span><span class="p">;</span>  <span class="cm">/* capture own or bad zone  */</span>
</span><span class="line">                            <span class="n">i</span><span class="o">=</span><span class="n">w</span><span class="p">[</span><span class="n">t</span><span class="o">&amp;</span><span class="mi">15</span><span class="p">];</span>                              <span class="cm">/* value of capt. piece t   */</span>
</span><span class="line">                            <span class="k">if</span><span class="p">(</span><span class="n">i</span><span class="o">&lt;</span><span class="mi">0</span><span class="p">)</span><span class="n">m</span><span class="o">=</span><span class="n">I</span><span class="p">,</span><span class="n">d</span><span class="o">=</span><span class="mi">98</span><span class="p">;</span>                        <span class="cm">/* K capture                */</span>
</span><span class="line">                            <span class="k">if</span><span class="p">(</span><span class="n">m</span><span class="o">&gt;=</span><span class="n">l</span><span class="o">&amp;</span><span class="n">d</span><span class="o">&gt;</span><span class="mi">1</span><span class="p">)</span><span class="k">goto</span> <span class="n">C</span><span class="p">;</span>                     <span class="cm">/* abort on fail high       */</span>
</span><span class="line">                            <span class="n">v</span><span class="o">=</span><span class="n">d</span><span class="o">-</span><span class="mi">1</span><span class="o">?</span><span class="n">e</span><span class="o">:</span><span class="n">i</span><span class="o">-</span><span class="n">p</span><span class="p">;</span>                            <span class="cm">/*** MVV/LVA scoring if d=1**/</span>
</span><span class="line">                            <span class="k">if</span><span class="p">(</span><span class="n">d</span><span class="o">-!</span><span class="n">t</span><span class="o">&gt;</span><span class="mi">1</span><span class="p">)</span>                              <span class="cm">/*** all captures if d=2  ***/</span>
</span><span class="line">                            <span class="p">{</span><span class="n">v</span><span class="o">=</span><span class="n">centr</span><span class="p">[</span><span class="n">p</span><span class="p">]</span><span class="o">?</span><span class="n">b</span><span class="p">[</span><span class="n">x</span><span class="o">+</span><span class="mi">257</span><span class="p">]</span><span class="o">-</span><span class="n">b</span><span class="p">[</span><span class="n">y</span><span class="o">+</span><span class="mi">257</span><span class="p">]</span><span class="o">:</span><span class="mi">0</span><span class="p">;</span>        <span class="cm">/* center positional pts.   */</span>
</span><span class="line">                                <span class="n">b</span><span class="p">[</span><span class="n">x</span><span class="p">]</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="n">b</span><span class="p">[</span><span class="n">y</span><span class="p">]</span><span class="o">=</span><span class="n">u</span><span class="p">;</span>                         <span class="cm">/* do move                  */</span>
</span><span class="line">                                <span class="n">v</span><span class="o">-=</span><span class="n">w</span><span class="p">[</span><span class="n">p</span><span class="p">]</span><span class="o">&gt;</span><span class="mi">0</span><span class="o">|</span><span class="n">R</span><span class="o">&lt;</span><span class="mi">10</span><span class="o">?</span><span class="mi">0</span><span class="o">:</span><span class="mi">20</span><span class="p">;</span>                   <span class="cm">/*** freeze K in mid-game ***/</span>
</span><span class="line">                                <span class="k">if</span><span class="p">(</span><span class="n">p</span><span class="o">&lt;</span><span class="mi">3</span><span class="p">)</span>                                <span class="cm">/* pawns:                   */</span>
</span><span class="line">                                <span class="p">{</span><span class="n">v</span><span class="o">+=</span><span class="mi">2</span><span class="p">;</span>                                 <span class="cm">/* end-game Pawn-push bonus */</span>
</span><span class="line">                                    <span class="k">if</span><span class="p">(</span><span class="n">zn</span><span class="p">[</span><span class="n">x</span><span class="p">]</span><span class="o">-</span><span class="n">zn</span><span class="p">[</span><span class="n">y</span><span class="p">])</span><span class="n">b</span><span class="p">[</span><span class="n">y</span><span class="p">]</span><span class="o">+=</span><span class="mi">5</span><span class="p">,</span>               <span class="cm">/* upgrade Pawn and         */</span>
</span><span class="line">                                        <span class="n">i</span><span class="o">+=</span><span class="n">w</span><span class="p">[</span><span class="n">p</span><span class="o">+</span><span class="mi">5</span><span class="p">]</span><span class="o">-</span><span class="n">w</span><span class="p">[</span><span class="n">p</span><span class="p">];</span>                      <span class="cm">/*          promotion bonus */</span>
</span><span class="line">                                <span class="p">}</span>
</span><span class="line">                                <span class="k">if</span><span class="p">(</span><span class="n">z</span><span class="o">&amp;</span><span class="n">S</span> <span class="o">&amp;&amp;</span> <span class="n">GamePtr</span><span class="o">&lt;</span><span class="mi">6</span><span class="p">)</span> <span class="n">v</span><span class="o">+=</span><span class="p">(</span><span class="n">rand</span><span class="p">()</span><span class="o">&gt;&gt;</span><span class="mi">10</span><span class="o">&amp;</span><span class="mi">31</span><span class="p">)</span><span class="o">-</span><span class="mi">16</span><span class="p">;</span> <span class="c1">// randomize in root</span>
</span><span class="line">                                <span class="n">J</span><span class="o">+=</span><span class="n">J</span><span class="p">(</span><span class="mi">0</span><span class="p">);</span><span class="n">Z</span><span class="o">+=</span><span class="n">J</span><span class="p">(</span><span class="mi">4</span><span class="p">);</span>
</span><span class="line">                                <span class="n">v</span><span class="o">+=</span><span class="n">e</span><span class="o">+</span><span class="n">i</span><span class="p">;</span><span class="n">V</span><span class="o">=</span><span class="n">m</span><span class="o">&gt;</span><span class="n">q</span><span class="o">?</span><span class="n">m</span><span class="o">:</span><span class="n">q</span><span class="p">;</span>                      <span class="cm">/*** new eval &amp; alpha    ****/</span>
</span><span class="line">                                <span class="n">C</span><span class="o">=</span><span class="n">d</span><span class="o">-</span><span class="mi">1</span><span class="o">-</span><span class="p">(</span><span class="n">d</span><span class="o">&gt;</span><span class="mi">5</span><span class="o">&amp;</span><span class="n">p</span><span class="o">&gt;</span><span class="mi">2</span><span class="o">&amp;!</span><span class="n">t</span><span class="o">&amp;!</span><span class="n">h</span><span class="p">);</span>                 <span class="cm">/* nw depth, reduce non-cpt.*/</span>
</span><span class="line">                                <span class="n">C</span><span class="o">=</span><span class="n">R</span><span class="o">&lt;</span><span class="mi">10</span><span class="o">|</span><span class="n">P</span><span class="o">-</span><span class="n">I</span><span class="o">|</span><span class="n">d</span><span class="o">&lt;</span><span class="mi">3</span><span class="o">||</span><span class="n">t</span><span class="o">&amp;&amp;</span><span class="n">p</span><span class="o">-</span><span class="mi">3</span><span class="o">?</span><span class="n">C</span><span class="o">:</span><span class="n">d</span><span class="p">;</span>            <span class="cm">/* extend 1 ply if in-check */</span>
</span><span class="line">                                <span class="k">do</span>
</span><span class="line">                                    <span class="n">s</span><span class="o">=</span><span class="n">C</span><span class="o">&gt;</span><span class="mi">2</span><span class="o">|</span><span class="n">v</span><span class="o">&gt;</span><span class="n">V</span><span class="o">?-</span><span class="n">D</span><span class="p">(</span><span class="mi">16</span><span class="o">-</span><span class="n">k</span><span class="p">,</span><span class="o">-</span><span class="n">l</span><span class="p">,</span><span class="o">-</span><span class="n">V</span><span class="p">,</span><span class="o">-</span><span class="n">v</span><span class="p">,</span><span class="cm">/*** futility, recursive eval. of reply */</span>
</span><span class="line">                                            <span class="mi">0</span><span class="p">,</span><span class="n">C</span><span class="p">)</span><span class="o">:</span><span class="n">v</span><span class="p">;</span>
</span><span class="line">                                <span class="n">W</span><span class="p">(</span><span class="n">s</span><span class="o">&gt;</span><span class="n">q</span><span class="o">&amp;++</span><span class="n">C</span><span class="o">&lt;</span><span class="n">d</span><span class="p">);</span> <span class="n">v</span><span class="o">=</span><span class="n">s</span><span class="p">;</span>                     <span class="cm">/* no fail:re-srch unreduced*/</span>
</span><span class="line">                                <span class="k">if</span><span class="p">(</span><span class="n">z</span><span class="o">&amp;</span><span class="n">S</span><span class="o">&amp;&amp;</span><span class="n">K</span><span class="o">-</span><span class="n">I</span><span class="p">)</span>                           <span class="cm">/* move pending: check legal*/</span>
</span><span class="line">                                <span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="n">v</span><span class="o">+</span><span class="n">I</span><span class="o">&amp;&amp;</span><span class="n">x</span><span class="o">==</span><span class="n">K</span><span class="o">&amp;</span><span class="n">y</span><span class="o">==</span><span class="n">L</span><span class="p">)</span>                    <span class="cm">/*   if move found          */</span>
</span><span class="line">                                    <span class="p">{</span><span class="n">Q</span><span class="o">=-</span><span class="n">e</span><span class="o">-</span><span class="n">i</span><span class="p">;</span>
</span><span class="line">                                        <span class="n">a</span><span class="o">-&gt;</span><span class="n">D</span><span class="o">=</span><span class="mi">99</span><span class="p">;</span><span class="n">a</span><span class="o">-&gt;</span><span class="n">V</span><span class="o">=</span><span class="mi">500</span><span class="p">;</span>                    <span class="cm">/* lock game in hash as loss*/</span>
</span><span class="line">                                        <span class="n">R</span><span class="o">-=</span><span class="n">i</span><span class="o">/</span><span class="n">FAC</span><span class="p">;</span>                            <span class="cm">/*** total captd material ***/</span>
</span><span class="line">                                        <span class="n">Fifty</span> <span class="o">=</span> <span class="n">t</span><span class="o">|</span><span class="n">p</span><span class="o">&lt;</span><span class="mi">3</span><span class="o">?</span><span class="mi">0</span><span class="o">:</span><span class="n">Fifty</span><span class="o">+</span><span class="mi">1</span><span class="p">;</span>
</span><span class="line">                                        <span class="k">return</span> <span class="n">l</span><span class="p">;}</span>                <span class="cm">/*   &amp; not in check, signal */</span>
</span><span class="line">                                        <span class="n">v</span><span class="o">=</span><span class="n">m</span><span class="p">;</span>                                  <span class="cm">/* (prevent fail-lows on    */</span>
</span><span class="line">                                <span class="p">}</span>                                      <span class="cm">/*   K-capt. replies)       */</span>
</span><span class="line">                                <span class="n">J</span><span class="o">=</span><span class="n">f</span><span class="p">;</span><span class="n">Z</span><span class="o">=</span><span class="n">g</span><span class="p">;</span>
</span><span class="line">                                <span class="n">b</span><span class="p">[</span><span class="n">y</span><span class="p">]</span><span class="o">=</span><span class="n">t</span><span class="p">;</span><span class="n">b</span><span class="p">[</span><span class="n">x</span><span class="p">]</span><span class="o">=</span><span class="n">u</span><span class="p">;</span>                         <span class="cm">/* undo move                */</span>
</span><span class="line">                            <span class="p">}</span>                                       <span class="cm">/*          if non-castling */</span>
</span><span class="line">                            <span class="k">if</span><span class="p">(</span><span class="n">v</span><span class="o">&gt;</span><span class="n">m</span><span class="p">)</span>                                 <span class="cm">/* new best, update max,best*/</span>
</span><span class="line">                                <span class="n">m</span><span class="o">=</span><span class="n">v</span><span class="p">,</span><span class="n">X</span><span class="o">=</span><span class="n">x</span><span class="p">,</span><span class="n">Y</span><span class="o">=</span><span class="n">y</span><span class="p">;</span>                           <span class="cm">/* no marking!              */</span>
</span><span class="line">                            <span class="k">if</span><span class="p">(</span><span class="n">h</span><span class="p">){</span><span class="n">h</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">goto</span> <span class="n">A</span><span class="p">;}</span>                      <span class="cm">/* redo after doing old best*/</span>
</span><span class="line">                        <span class="p">}</span>
</span><span class="line">                        <span class="n">s</span><span class="o">=</span><span class="n">t</span><span class="p">;</span>
</span><span class="line">                        <span class="n">t</span><span class="o">+=</span><span class="n">flag</span><span class="o">&amp;</span><span class="mi">4</span><span class="p">;</span>                               <span class="cm">/* fake capt. for nonsliding*/</span>
</span><span class="line">                        <span class="k">if</span><span class="p">(</span><span class="n">s</span><span class="o">&amp;&amp;</span><span class="n">flag</span><span class="o">&amp;</span><span class="mi">8</span><span class="p">)</span><span class="n">t</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="n">flag</span><span class="o">^=</span><span class="n">flag</span><span class="o">&gt;&gt;</span><span class="mi">4</span><span class="o">&amp;</span><span class="mi">15</span><span class="p">;</span>       <span class="cm">/* hoppers go to next phase */</span>
</span><span class="line">                        <span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="p">(</span><span class="n">flag</span><span class="o">&amp;</span><span class="n">S</span><span class="p">))</span>                            <span class="cm">/* zig-zag piece?           */</span>
</span><span class="line">                            <span class="n">r</span><span class="o">^=</span><span class="n">flag</span><span class="o">&gt;&gt;</span><span class="mi">12</span><span class="p">,</span><span class="n">flag</span><span class="o">^=</span><span class="n">flag</span><span class="o">&gt;&gt;</span><span class="mi">4</span><span class="o">&amp;</span><span class="mi">15</span><span class="p">;</span>           <span class="cm">/* alternate vector &amp; mode  */</span>
</span><span class="line">                    <span class="p">}</span><span class="n">W</span><span class="p">(</span><span class="o">!</span><span class="n">t</span><span class="p">);</span>                                   <span class="cm">/* if not capt. continue ray*/</span>
</span><span class="line">                <span class="p">}}</span>
</span><span class="line">                <span class="k">if</span><span class="p">((</span><span class="o">++</span><span class="n">x</span><span class="o">&amp;</span><span class="mi">15</span><span class="p">)</span><span class="o">&gt;=</span><span class="n">BW</span><span class="p">)</span><span class="n">x</span><span class="o">=</span><span class="n">x</span><span class="o">+</span><span class="mi">16</span><span class="o">&amp;</span><span class="mi">240</span><span class="p">,</span><span class="n">lu</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span>            <span class="cm">/* next sqr. of board, wrap */</span>
</span><span class="line">                <span class="k">if</span><span class="p">(</span><span class="n">x</span><span class="o">&gt;=</span><span class="mi">16</span><span class="o">*</span><span class="n">BH</span><span class="p">)</span><span class="n">x</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span>
</span><span class="line">        <span class="p">}</span><span class="n">W</span><span class="p">(</span><span class="n">x</span><span class="o">-</span><span class="n">B</span><span class="p">);</span>
</span><span class="line"><span class="nl">C:</span><span class="k">if</span><span class="p">(</span><span class="n">a</span><span class="o">-&gt;</span><span class="n">D</span><span class="o">&lt;</span><span class="mi">99</span><span class="p">)</span>                                  <span class="cm">/* protect game history     */</span>
</span><span class="line">      <span class="n">a</span><span class="o">-&gt;</span><span class="n">K</span><span class="o">=</span><span class="n">Z</span><span class="p">,</span><span class="n">a</span><span class="o">-&gt;</span><span class="n">V</span><span class="o">=</span><span class="n">m</span><span class="p">,</span><span class="n">a</span><span class="o">-&gt;</span><span class="n">D</span><span class="o">=</span><span class="n">d</span><span class="p">,</span><span class="n">a</span><span class="o">-&gt;</span><span class="n">X</span><span class="o">=</span><span class="n">X</span><span class="p">,</span>                <span class="cm">/* always store in hash tab */</span>
</span><span class="line">          <span class="n">a</span><span class="o">-&gt;</span><span class="n">F</span><span class="o">=</span><span class="mi">8</span><span class="o">*</span><span class="p">(</span><span class="n">m</span><span class="o">&gt;</span><span class="n">q</span><span class="p">)</span><span class="o">|</span><span class="n">S</span><span class="o">*</span><span class="p">(</span><span class="n">m</span><span class="o">&lt;</span><span class="n">l</span><span class="p">),</span><span class="n">a</span><span class="o">-&gt;</span><span class="n">Y</span><span class="o">=</span><span class="n">Y</span><span class="p">;</span>                <span class="cm">/* move, type (bound/exact),*/</span>
</span><span class="line">  <span class="k">if</span><span class="p">(</span><span class="n">z</span><span class="o">&amp;</span><span class="n">S</span><span class="o">&amp;&amp;</span><span class="n">Post</span><span class="p">){</span>
</span><span class="line">      <span class="n">printf</span><span class="p">(</span><span class="s">&quot;%2d &quot;</span><span class="p">,</span><span class="n">d</span><span class="o">-</span><span class="mi">2</span><span class="p">);</span>
</span><span class="line">      <span class="n">printf</span><span class="p">(</span><span class="s">&quot;%6d &quot;</span><span class="p">,</span><span class="n">m</span><span class="p">);</span>
</span><span class="line">      <span class="n">printf</span><span class="p">(</span><span class="s">&quot;%8d %10d %c%c%c%c</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,(</span><span class="n">GetTickCount</span><span class="p">()</span><span class="o">-</span><span class="n">Ticks</span><span class="p">)</span><span class="o">/</span><span class="mi">10</span><span class="p">,</span><span class="n">N</span><span class="p">,</span>
</span><span class="line">              <span class="sc">&#39;i&#39;</span><span class="o">-</span><span class="p">(</span><span class="n">X</span><span class="o">&gt;&gt;</span><span class="mi">4</span><span class="o">&amp;</span><span class="mi">15</span><span class="p">),</span><span class="sc">&#39;9&#39;</span><span class="o">-</span><span class="p">(</span><span class="n">X</span><span class="o">&amp;</span><span class="mi">15</span><span class="p">),</span><span class="sc">&#39;i&#39;</span><span class="o">-</span><span class="p">(</span><span class="n">Y</span><span class="o">&gt;&gt;</span><span class="mi">4</span><span class="o">&amp;</span><span class="mi">15</span><span class="p">),</span><span class="sc">&#39;9&#39;</span><span class="o">-</span><span class="p">(</span><span class="n">Y</span><span class="o">&amp;</span><span class="mi">15</span><span class="p">)),</span><span class="n">fflush</span><span class="p">(</span><span class="n">stdout</span><span class="p">);}</span>
</span><span class="line">    <span class="p">}</span>                                             <span class="cm">/*    encoded in X S,8 bits */</span>
</span><span class="line">    <span class="k">if</span><span class="p">(</span><span class="n">z</span><span class="o">&amp;</span><span class="mi">4</span><span class="o">*</span><span class="n">S</span><span class="p">)</span><span class="n">K</span><span class="o">=</span><span class="n">X</span><span class="p">,</span><span class="n">L</span><span class="o">=</span><span class="n">Y</span><span class="o">&amp;~</span><span class="n">S</span><span class="p">;</span>
</span><span class="line">    <span class="k">return</span> <span class="n">m</span><span class="o">+=</span><span class="n">m</span><span class="o">&lt;</span><span class="n">e</span><span class="p">;</span>                                <span class="cm">/* delayed-loss bonus       */</span>
</span><span class="line"><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>Then I think for a while….</p>

<p>maxqi engine is so pop, why nobody discuss this??</p>

<p>why no notes? Google maxqi,no good results.</p>

<p>Then I Google fairymax, still no good results…</p>

<p>At last, I saw that the fairymax derived from Micro-Max…</p>

<p>then ,i got everything….</p>

<h5 id="micro-maxhttphomehccnetnlhgmullermax-src2html"><a href="http://home.hccnet.nl/h.g.muller/max-src2.html">micro-max</a></h5>

<h6 id="basic-data-representations"># Basic Data Representations</h6>

<ul>
  <li>Piece Encoding</li>
  <li>Board Representation</li>
  <li>Move Generation</li>
</ul>

<h6 id="basic-moves"># Basic Moves</h6>

<ul>
  <li>En Passant Capture</li>
  <li>Castling</li>
  <li>Pawn Promotions</li>
</ul>

<h6 id="search-algorithm"># Search Algorithm</h6>

<ul>
  <li>Alpha-Beta Minimax</li>
  <li>Quiescence Search</li>
  <li>Do and Undo Move</li>
  <li>Iterative Deepening</li>
  <li>Move Sorting</li>
</ul>

<h6 id="transposition-table"># Transposition Table</h6>

<ul>
  <li>Hashing</li>
  <li>Replacement</li>
</ul>

<h6 id="evaluation">#Evaluation</h6>
<ul>
  <li>Material</li>
  <li>Piece-Square Table</li>
  <li>Checkmate and Stalemate</li>
  <li>Delay Penalty</li>
</ul>

<h6 id="the-interface"># The Interface</h6>
<p>Move Legality Checking</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Database Overview]]></title>
    <link href="http://arekyao.github.io/blog/2013/04/23/database-overview/"/>
    <updated>2013-04-23T22:46:00+08:00</updated>
    <id>http://arekyao.github.io/blog/2013/04/23/database-overview</id>
    <content type="html"><![CDATA[<h2 id="preface">Preface</h2>

<p>What’s the most important?
Infomation!</p>

<p>How to get and save infomation?
Database.</p>

<p>Here is some story about database.</p>

<p>Generally, database can be divided into two arm, SQL and NoSQL.</p>

<h2 id="sqlhttpenwikipediaorgwikistructuredquerylanguage"><a href="http://en.wikipedia.org/wiki/Structured_Query_Language">SQL</a></h2>

<!-- more -->

<p>SQL (Structured Query Language) is very common.<br />
mysql ,sybase and oracle are well-known as database, which is used a lot</p>

<table class="mytable">
  <thead>
    <tr>
      <th>Source</th>
      <th style="text-align: left">Common name</th>
      <th style="text-align: center">Full name</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>Microsoft / Sybase</td>
      <td style="text-align: left">T-SQL</td>
      <td style="text-align: center">Transact-SQL</td>
    </tr>
    <tr>
      <td>MySQL</td>
      <td style="text-align: left">SQL/PSM</td>
      <td style="text-align: center">SQL/Persistent Stored Module (implements SQL/PSM)</td>
    </tr>
    <tr>
      <td>Oracle</td>
      <td style="text-align: left">PL/SQL</td>
      <td style="text-align: center">Procedural Language/SQL (based on Ada)</td>
    </tr>
    <tr>
      <td>Sybase</td>
      <td style="text-align: left">Watcom-SQL	SQL Anywhere</td>
      <td style="text-align: center">Watcom-SQL Dialect</td>
    </tr>
  </tbody>
</table>

<h2 id="nosqlhttpenwikipediaorgwikinosql"><a href="http://en.wikipedia.org/wiki/Nosql">NoSQL</a></h2>

<p>Feature:
It provides mechanism for storage and retrieval of data that use looser consistency models than traditional relational databases  </p>

<p>Achieve horizontal scaling and higher availability</p>

<ul>
  <li>
    <h5 id="document-store">Document Store</h5>
  </li>
</ul>

<p>Document is encoded to some 
In general, they all assume that documents <strong>encapsulate</strong> and <strong>encode</strong> data (or information) in some standard formats or encodings.
Such as, XML, Jason, YAML etc.</p>

<table class="mytable">
  <thead>
    <tr>
      <th>Name</th>
      <th style="text-align: left">Language</th>
      <th style="text-align: center">Notes</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>BaseX</td>
      <td style="text-align: left">Java, XQuery</td>
      <td style="text-align: center">XML database</td>
    </tr>
    <tr>
      <td>Couchbase Server</td>
      <td style="text-align: left">Erlang, C++</td>
      <td style="text-align: center">Support for JSON and binary documents</td>
    </tr>
    <tr>
      <td>Apache CouchDB</td>
      <td style="text-align: left">Erlang</td>
      <td style="text-align: center">JSON store</td>
    </tr>
    <tr>
      <td>MongoDB</td>
      <td style="text-align: left">C++, C#</td>
      <td style="text-align: center">BSON store (binary format JSON)</td>
    </tr>
    <tr>
      <td>SimpleDB</td>
      <td style="text-align: left">Erlang</td>
      <td style="text-align: center"> </td>
    </tr>
    <tr>
      <td>Oracle NoSQL Database</td>
      <td style="text-align: left">Java</td>
      <td style="text-align: center"> </td>
    </tr>
  </tbody>
</table>

<ul>
  <li>
    <h5 id="graph">Graph</h5>
  </li>
</ul>

<p>The kind of data could be social relations, public transport links, road maps or network topologies, for example.</p>

<ul>
  <li>
    <h5 id="key-value-store">Key Value Store</h5>
    <p>kv cache in RAM  </p>
  </li>
</ul>

<p>Radis </p>

<p>Memcached</p>

<p>Keyvalue stores on solid state or rotating disk</p>

<p>MemcacheDB</p>

<p>MongoDB</p>

<ul>
  <li>
    <h5 id="multivalue-database">Multivalue database</h5>
  </li>
</ul>

<p>InfinityDB</p>

<ul>
  <li>
    <h5 id="object-databasehttpenwikipediaorgwikiobjectdatabase"><a href="http://en.wikipedia.org/wiki/Object_database">Object database</a></h5>
  </li>
  <li>
    <h5 id="tabular">Tabular</h5>
  </li>
</ul>

<p>Apache Accumulo</p>

<p>BigTable</p>

<p>Apache Hbase</p>

<p>Hypertable</p>

<p>Reference</p>

<ol>
  <li><a href="">http://nosql-database.org/</a></li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Something Interesting about AI]]></title>
    <link href="http://arekyao.github.io/blog/2013/04/21/something-interesting-about-ai/"/>
    <updated>2013-04-21T19:53:00+08:00</updated>
    <id>http://arekyao.github.io/blog/2013/04/21/something-interesting-about-ai</id>
    <content type="html"><![CDATA[<ul>
  <li>
    <h2 id="generate-music-algorithmicallyhttpwwwdatabozocom20130412generatingmusicalgorithmicallyhtml"><a href="http://www.databozo.com/2013/04/12/Generating_music_algorithmically.html">Generate Music Algorithmically</a></h2>
  </li>
</ul>

<h3 id="music-feature">Music Feature</h3>

<p>Music is compose by lots of note.<br />
The feature of note is frequece and length.</p>

<h3 id="markov-chain">Markov Chain</h3>

<p>The idea tech of Markov Chain is that, the next state (to us,it’s music note) is decided by the previous N states, only.
<!-- more -->
That means:<br />
the next note’s freq is decided by the previous’s.
the next note’s length is decided by the previous’s.</p>

<h3 id="machine-learning">Machine Learning</h3>

<p>First, learn the trans probability throught lots of music sample.</p>

<p>Then, we got the probability from Freq A to Freq B, From length 1/2 to 1/4</p>

<p>Last, generate note by probability, random. Create music file according to the note data.</p>

<h3 id="code">Code</h3>

<p>The lib “pysynth.py” for gen music through two arg (freq and length)</p>

<p>The key program “MarkovBuilder.py” for TransArray&amp;GenerateNote</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
<span class="line-number">23</span>
<span class="line-number">24</span>
<span class="line-number">25</span>
<span class="line-number">26</span>
<span class="line-number">27</span>
<span class="line-number">28</span>
<span class="line-number">29</span>
<span class="line-number">30</span>
<span class="line-number">31</span>
<span class="line-number">32</span>
<span class="line-number">33</span>
<span class="line-number">34</span>
<span class="line-number">35</span>
<span class="line-number">36</span>
<span class="line-number">37</span>
<span class="line-number">38</span>
<span class="line-number">39</span>
<span class="line-number">40</span>
<span class="line-number">41</span>
<span class="line-number">42</span>
<span class="line-number">43</span>
</pre></td><td class="code"><pre><code class="py"><span class="line"><span class="sd">&#39;&#39;&#39;</span>
</span><span class="line"><span class="sd">Created on May 14, 2009</span>
</span><span class="line">
</span><span class="line"><span class="sd">@author: darkxanthos</span>
</span><span class="line"><span class="sd">&#39;&#39;&#39;</span>
</span><span class="line"><span class="kn">import</span> <span class="nn">random</span>
</span><span class="line">
</span><span class="line"><span class="k">class</span> <span class="nc">MarkovBuilder</span><span class="p">:</span>
</span><span class="line">    <span class="k">def</span> <span class="nf">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">value_list</span><span class="p">):</span>
</span><span class="line">        <span class="bp">self</span><span class="o">.</span><span class="n">_values_added</span> <span class="o">=</span> <span class="mi">0</span>
</span><span class="line">        <span class="bp">self</span><span class="o">.</span><span class="n">_reverse_value_lookup</span> <span class="o">=</span> <span class="n">value_list</span>
</span><span class="line">        <span class="bp">self</span><span class="o">.</span><span class="n">_value_lookup</span> <span class="o">=</span> <span class="p">{}</span>
</span><span class="line">        <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="nb">len</span><span class="p">(</span><span class="n">value_list</span><span class="p">)):</span>
</span><span class="line">            <span class="bp">self</span><span class="o">.</span><span class="n">_value_lookup</span><span class="p">[</span><span class="n">value_list</span><span class="p">[</span><span class="n">i</span><span class="p">]]</span> <span class="o">=</span> <span class="n">i</span>
</span><span class="line">        <span class="c">#Initialize our adjacency matrix with the initial</span>
</span><span class="line">        <span class="c">#probabilities for note transitions.</span>
</span><span class="line">        <span class="bp">self</span><span class="o">.</span><span class="n">_matrix</span><span class="o">=</span><span class="p">[[</span><span class="mi">0</span> <span class="k">for</span> <span class="n">x</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="nb">len</span><span class="p">(</span><span class="n">value_list</span><span class="p">))]</span> <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="nb">len</span><span class="p">(</span><span class="n">value_list</span><span class="p">))]</span>
</span><span class="line">
</span><span class="line">    <span class="k">def</span> <span class="nf">add</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">from_value</span><span class="p">,</span> <span class="n">to_value</span><span class="p">):</span>
</span><span class="line">        <span class="sd">&quot;&quot;&quot;Add a path from a note to another note. Re-adding a path between notes will increase the associated weight.&quot;&quot;&quot;</span>
</span><span class="line">        <span class="n">value</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">_value_lookup</span>
</span><span class="line">        <span class="bp">self</span><span class="o">.</span><span class="n">_matrix</span><span class="p">[</span><span class="n">value</span><span class="p">[</span><span class="n">from_value</span><span class="p">]][</span><span class="n">value</span><span class="p">[</span><span class="n">to_value</span><span class="p">]]</span> <span class="o">+=</span> <span class="mi">1</span>
</span><span class="line">        <span class="bp">self</span><span class="o">.</span><span class="n">_values_added</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">_values_added</span> <span class="o">+</span> <span class="mi">1</span>
</span><span class="line">
</span><span class="line">    <span class="k">def</span> <span class="nf">next_value</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">from_value</span><span class="p">):</span>
</span><span class="line">        <span class="n">value</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">_value_lookup</span><span class="p">[</span><span class="n">from_value</span><span class="p">]</span>
</span><span class="line">        <span class="n">value_counts</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">_matrix</span><span class="p">[</span><span class="n">value</span><span class="p">]</span>
</span><span class="line">        <span class="n">value_index</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">randomly_choose</span><span class="p">(</span><span class="n">value_counts</span><span class="p">)</span>
</span><span class="line">        <span class="k">if</span><span class="p">(</span><span class="n">value_index</span> <span class="o">&lt;</span> <span class="mi">0</span><span class="p">):</span>
</span><span class="line">            <span class="k">raise</span> <span class="ne">RuntimeError</span><span class="p">,</span> <span class="s">&quot;Non-existent value selected.&quot;</span>
</span><span class="line">        <span class="k">else</span><span class="p">:</span>
</span><span class="line">            <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">_reverse_value_lookup</span><span class="p">[</span><span class="n">value_index</span><span class="p">]</span>
</span><span class="line">
</span><span class="line">    <span class="k">def</span> <span class="nf">randomly_choose</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">choice_counts</span><span class="p">):</span>
</span><span class="line">        <span class="sd">&quot;&quot;&quot;Given an array of counts, returns the index that was randomly chosen&quot;&quot;&quot;</span>
</span><span class="line">        <span class="n">counted_sum</span> <span class="o">=</span> <span class="mi">0</span>
</span><span class="line">        <span class="n">count_sum</span> <span class="o">=</span> <span class="nb">sum</span><span class="p">(</span><span class="n">choice_counts</span><span class="p">)</span>
</span><span class="line">        <span class="n">selected_count</span> <span class="o">=</span> <span class="n">random</span><span class="o">.</span><span class="n">randrange</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="n">count_sum</span> <span class="o">+</span> <span class="mi">1</span><span class="p">)</span>
</span><span class="line">        <span class="k">for</span> <span class="n">index</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="nb">len</span><span class="p">(</span><span class="n">choice_counts</span><span class="p">)):</span>
</span><span class="line">            <span class="n">counted_sum</span> <span class="o">+=</span> <span class="n">choice_counts</span><span class="p">[</span><span class="n">index</span><span class="p">]</span>
</span><span class="line">            <span class="k">if</span><span class="p">(</span><span class="n">counted_sum</span> <span class="o">&gt;=</span> <span class="n">selected_count</span><span class="p">):</span>
</span><span class="line">                <span class="k">return</span> <span class="n">index</span>
</span><span class="line">        <span class="k">raise</span> <span class="ne">RuntimeError</span><span class="p">,</span> <span class="s">&quot;Impossible value selection made. BAD!&quot;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>Main Program “MarkovMusic.py”</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
<span class="line-number">23</span>
<span class="line-number">24</span>
<span class="line-number">25</span>
<span class="line-number">26</span>
<span class="line-number">27</span>
<span class="line-number">28</span>
<span class="line-number">29</span>
<span class="line-number">30</span>
<span class="line-number">31</span>
<span class="line-number">32</span>
<span class="line-number">33</span>
<span class="line-number">34</span>
<span class="line-number">35</span>
<span class="line-number">36</span>
<span class="line-number">37</span>
<span class="line-number">38</span>
<span class="line-number">39</span>
<span class="line-number">40</span>
<span class="line-number">41</span>
<span class="line-number">42</span>
<span class="line-number">43</span>
<span class="line-number">44</span>
<span class="line-number">45</span>
<span class="line-number">46</span>
<span class="line-number">47</span>
<span class="line-number">48</span>
<span class="line-number">49</span>
<span class="line-number">50</span>
<span class="line-number">51</span>
<span class="line-number">52</span>
<span class="line-number">53</span>
<span class="line-number">54</span>
<span class="line-number">55</span>
<span class="line-number">56</span>
<span class="line-number">57</span>
<span class="line-number">58</span>
<span class="line-number">59</span>
<span class="line-number">60</span>
<span class="line-number">61</span>
<span class="line-number">62</span>
<span class="line-number">63</span>
<span class="line-number">64</span>
<span class="line-number">65</span>
<span class="line-number">66</span>
<span class="line-number">67</span>
<span class="line-number">68</span>
<span class="line-number">69</span>
<span class="line-number">70</span>
<span class="line-number">71</span>
<span class="line-number">72</span>
<span class="line-number">73</span>
<span class="line-number">74</span>
<span class="line-number">75</span>
<span class="line-number">76</span>
<span class="line-number">77</span>
</pre></td><td class="code"><pre><code class="py"><span class="line"><span class="sd">&#39;&#39;&#39;</span>
</span><span class="line"><span class="sd">Created on May 12, 2009</span>
</span><span class="line">
</span><span class="line"><span class="sd">@author: Justin Bozonier</span>
</span><span class="line"><span class="sd">&#39;&#39;&#39;</span>
</span><span class="line"><span class="kn">import</span> <span class="nn">pysynth</span>
</span><span class="line"><span class="kn">from</span> <span class="nn">MarkovBuilder</span> <span class="kn">import</span> <span class="n">MarkovBuilder</span>
</span><span class="line">
</span><span class="line"><span class="k">class</span> <span class="nc">MusicMatrix</span><span class="p">:</span>
</span><span class="line">    <span class="k">def</span> <span class="nf">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
</span><span class="line">        <span class="bp">self</span><span class="o">.</span><span class="n">_previous_note</span> <span class="o">=</span> <span class="bp">None</span>
</span><span class="line">        <span class="bp">self</span><span class="o">.</span><span class="n">_markov</span> <span class="o">=</span> <span class="n">MarkovBuilder</span><span class="p">([</span><span class="s">&quot;a&quot;</span><span class="p">,</span> <span class="s">&quot;a#&quot;</span><span class="p">,</span> <span class="s">&quot;b&quot;</span><span class="p">,</span> <span class="s">&quot;c&quot;</span><span class="p">,</span> <span class="s">&quot;c#&quot;</span><span class="p">,</span> <span class="s">&quot;d&quot;</span><span class="p">,</span> <span class="s">&quot;d#&quot;</span><span class="p">,</span> <span class="s">&quot;e&quot;</span><span class="p">,</span> <span class="s">&quot;f&quot;</span><span class="p">,</span> <span class="s">&quot;f#&quot;</span><span class="p">,</span> <span class="s">&quot;g&quot;</span><span class="p">,</span> <span class="s">&quot;g#&quot;</span><span class="p">])</span>
</span><span class="line">        <span class="bp">self</span><span class="o">.</span><span class="n">_timings</span> <span class="o">=</span> <span class="n">MarkovBuilder</span><span class="p">([</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">8</span><span class="p">,</span> <span class="mi">16</span><span class="p">])</span>
</span><span class="line">
</span><span class="line">    <span class="k">def</span> <span class="nf">add</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">to_note</span><span class="p">):</span>
</span><span class="line">        <span class="sd">&quot;&quot;&quot;Add a path from a note to another note. Re-adding a path between notes will increase the associated weight.&quot;&quot;&quot;</span>
</span><span class="line">        <span class="k">if</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">_previous_note</span> <span class="ow">is</span> <span class="bp">None</span><span class="p">):</span>
</span><span class="line">            <span class="bp">self</span><span class="o">.</span><span class="n">_previous_note</span> <span class="o">=</span> <span class="n">to_note</span>
</span><span class="line">            <span class="k">return</span>
</span><span class="line">        <span class="n">from_note</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">_previous_note</span>
</span><span class="line">        <span class="bp">self</span><span class="o">.</span><span class="n">_markov</span><span class="o">.</span><span class="n">add</span><span class="p">(</span><span class="n">from_note</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span> <span class="n">to_note</span><span class="p">[</span><span class="mi">0</span><span class="p">])</span>
</span><span class="line">        <span class="bp">self</span><span class="o">.</span><span class="n">_timings</span><span class="o">.</span><span class="n">add</span><span class="p">(</span><span class="n">from_note</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span> <span class="n">to_note</span><span class="p">[</span><span class="mi">1</span><span class="p">])</span>
</span><span class="line">        <span class="bp">self</span><span class="o">.</span><span class="n">_previous_note</span> <span class="o">=</span> <span class="n">to_note</span>
</span><span class="line">
</span><span class="line">    <span class="k">def</span> <span class="nf">next_note</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">from_note</span><span class="p">):</span>
</span><span class="line">        <span class="k">return</span> <span class="p">[</span><span class="bp">self</span><span class="o">.</span><span class="n">_markov</span><span class="o">.</span><span class="n">next_value</span><span class="p">(</span><span class="n">from_note</span><span class="p">[</span><span class="mi">0</span><span class="p">]),</span> <span class="bp">self</span><span class="o">.</span><span class="n">_timings</span><span class="o">.</span><span class="n">next_value</span><span class="p">(</span><span class="n">from_note</span><span class="p">[</span><span class="mi">1</span><span class="p">])]</span>
</span><span class="line">
</span><span class="line"><span class="c"># Playing it comes next :)</span>
</span><span class="line"><span class="c">#test = [[&#39;c&#39;,4], [&#39;e&#39;,4], [&#39;g&#39;,4], [&#39;c5&#39;,1]]</span>
</span><span class="line"><span class="c">#pysynth.make_wav(test, fn = &quot;test.wav&quot;)</span>
</span><span class="line">
</span><span class="line"><span class="n">musicLearner</span> <span class="o">=</span> <span class="n">MusicMatrix</span><span class="p">()</span>
</span><span class="line">
</span><span class="line"><span class="c"># Input the melody of Row, Row, Row Your Boat</span>
</span><span class="line"><span class="c"># The MusicMatrix will automatically use this to </span>
</span><span class="line"><span class="c"># model our own song after it.</span>
</span><span class="line"><span class="n">musicLearner</span><span class="o">.</span><span class="n">add</span><span class="p">([</span><span class="s">&quot;c&quot;</span><span class="p">,</span> <span class="mi">4</span><span class="p">])</span>
</span><span class="line"><span class="n">musicLearner</span><span class="o">.</span><span class="n">add</span><span class="p">([</span><span class="s">&quot;c&quot;</span><span class="p">,</span> <span class="mi">4</span><span class="p">])</span>
</span><span class="line"><span class="n">musicLearner</span><span class="o">.</span><span class="n">add</span><span class="p">([</span><span class="s">&quot;c&quot;</span><span class="p">,</span> <span class="mi">4</span><span class="p">])</span>
</span><span class="line"><span class="n">musicLearner</span><span class="o">.</span><span class="n">add</span><span class="p">([</span><span class="s">&quot;d&quot;</span><span class="p">,</span> <span class="mi">8</span><span class="p">])</span>
</span><span class="line"><span class="n">musicLearner</span><span class="o">.</span><span class="n">add</span><span class="p">([</span><span class="s">&quot;e&quot;</span><span class="p">,</span> <span class="mi">4</span><span class="p">])</span>
</span><span class="line"><span class="n">musicLearner</span><span class="o">.</span><span class="n">add</span><span class="p">([</span><span class="s">&quot;e&quot;</span><span class="p">,</span> <span class="mi">4</span><span class="p">])</span>
</span><span class="line"><span class="n">musicLearner</span><span class="o">.</span><span class="n">add</span><span class="p">([</span><span class="s">&quot;d&quot;</span><span class="p">,</span> <span class="mi">8</span><span class="p">])</span>
</span><span class="line"><span class="n">musicLearner</span><span class="o">.</span><span class="n">add</span><span class="p">([</span><span class="s">&quot;e&quot;</span><span class="p">,</span> <span class="mi">4</span><span class="p">])</span>
</span><span class="line"><span class="n">musicLearner</span><span class="o">.</span><span class="n">add</span><span class="p">([</span><span class="s">&quot;f&quot;</span><span class="p">,</span> <span class="mi">8</span><span class="p">])</span>
</span><span class="line"><span class="n">musicLearner</span><span class="o">.</span><span class="n">add</span><span class="p">([</span><span class="s">&quot;g&quot;</span><span class="p">,</span> <span class="mi">2</span><span class="p">])</span>
</span><span class="line">
</span><span class="line"><span class="n">musicLearner</span><span class="o">.</span><span class="n">add</span><span class="p">([</span><span class="s">&quot;c&quot;</span><span class="p">,</span> <span class="mi">8</span><span class="p">])</span>
</span><span class="line"><span class="n">musicLearner</span><span class="o">.</span><span class="n">add</span><span class="p">([</span><span class="s">&quot;c&quot;</span><span class="p">,</span> <span class="mi">8</span><span class="p">])</span>
</span><span class="line"><span class="n">musicLearner</span><span class="o">.</span><span class="n">add</span><span class="p">([</span><span class="s">&quot;c&quot;</span><span class="p">,</span> <span class="mi">8</span><span class="p">])</span>
</span><span class="line">
</span><span class="line"><span class="n">musicLearner</span><span class="o">.</span><span class="n">add</span><span class="p">([</span><span class="s">&quot;g&quot;</span><span class="p">,</span> <span class="mi">8</span><span class="p">])</span>
</span><span class="line"><span class="n">musicLearner</span><span class="o">.</span><span class="n">add</span><span class="p">([</span><span class="s">&quot;g&quot;</span><span class="p">,</span> <span class="mi">8</span><span class="p">])</span>
</span><span class="line"><span class="n">musicLearner</span><span class="o">.</span><span class="n">add</span><span class="p">([</span><span class="s">&quot;g&quot;</span><span class="p">,</span> <span class="mi">8</span><span class="p">])</span>
</span><span class="line">
</span><span class="line"><span class="n">musicLearner</span><span class="o">.</span><span class="n">add</span><span class="p">([</span><span class="s">&quot;e&quot;</span><span class="p">,</span> <span class="mi">8</span><span class="p">])</span>
</span><span class="line"><span class="n">musicLearner</span><span class="o">.</span><span class="n">add</span><span class="p">([</span><span class="s">&quot;e&quot;</span><span class="p">,</span> <span class="mi">8</span><span class="p">])</span>
</span><span class="line"><span class="n">musicLearner</span><span class="o">.</span><span class="n">add</span><span class="p">([</span><span class="s">&quot;e&quot;</span><span class="p">,</span> <span class="mi">8</span><span class="p">])</span>
</span><span class="line">
</span><span class="line"><span class="n">musicLearner</span><span class="o">.</span><span class="n">add</span><span class="p">([</span><span class="s">&quot;c&quot;</span><span class="p">,</span> <span class="mi">8</span><span class="p">])</span>
</span><span class="line"><span class="n">musicLearner</span><span class="o">.</span><span class="n">add</span><span class="p">([</span><span class="s">&quot;c&quot;</span><span class="p">,</span> <span class="mi">8</span><span class="p">])</span>
</span><span class="line"><span class="n">musicLearner</span><span class="o">.</span><span class="n">add</span><span class="p">([</span><span class="s">&quot;c&quot;</span><span class="p">,</span> <span class="mi">8</span><span class="p">])</span>
</span><span class="line">
</span><span class="line"><span class="n">musicLearner</span><span class="o">.</span><span class="n">add</span><span class="p">([</span><span class="s">&quot;g&quot;</span><span class="p">,</span> <span class="mi">4</span><span class="p">])</span>
</span><span class="line"><span class="n">musicLearner</span><span class="o">.</span><span class="n">add</span><span class="p">([</span><span class="s">&quot;f&quot;</span><span class="p">,</span> <span class="mi">8</span><span class="p">])</span>
</span><span class="line"><span class="n">musicLearner</span><span class="o">.</span><span class="n">add</span><span class="p">([</span><span class="s">&quot;e&quot;</span><span class="p">,</span> <span class="mi">4</span><span class="p">])</span>
</span><span class="line"><span class="n">musicLearner</span><span class="o">.</span><span class="n">add</span><span class="p">([</span><span class="s">&quot;d&quot;</span><span class="p">,</span> <span class="mi">8</span><span class="p">])</span>
</span><span class="line"><span class="n">musicLearner</span><span class="o">.</span><span class="n">add</span><span class="p">([</span><span class="s">&quot;c&quot;</span><span class="p">,</span> <span class="mi">2</span><span class="p">])</span>
</span><span class="line">
</span><span class="line"><span class="n">random_score</span> <span class="o">=</span> <span class="p">[]</span>
</span><span class="line"><span class="n">current_note</span> <span class="o">=</span> <span class="p">[</span><span class="s">&quot;c&quot;</span><span class="p">,</span> <span class="mi">4</span><span class="p">]</span>
</span><span class="line"><span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">100</span><span class="p">):</span>
</span><span class="line">    <span class="k">print</span> <span class="n">current_note</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">+</span> <span class="s">&quot;, &quot;</span> <span class="o">+</span> <span class="nb">str</span><span class="p">(</span><span class="n">current_note</span><span class="p">[</span><span class="mi">1</span><span class="p">])</span>
</span><span class="line">    <span class="n">current_note</span> <span class="o">=</span> <span class="n">musicLearner</span><span class="o">.</span><span class="n">next_note</span><span class="p">(</span><span class="n">current_note</span><span class="p">)</span>
</span><span class="line">    <span class="n">random_score</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">current_note</span><span class="p">)</span>
</span><span class="line">
</span><span class="line"><span class="n">pysynth</span><span class="o">.</span><span class="n">make_wav</span><span class="p">(</span><span class="n">random_score</span><span class="p">,</span> <span class="n">fn</span> <span class="o">=</span> <span class="s">&quot;first_score.wav&quot;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>code src: <br />
<a href="http://github.com/jcbozonier/MarkovMusic/tree/master">http://github.com/jcbozonier/MarkovMusic/tree/master</a></p>

<ul>
  <li>
    <h2 id="ai-snakehttphawsteincompostssnake-aihtml"><a href="http://hawstein.com/posts/snake-ai.html">AI Snake</a></h2>
  </li>
</ul>

<h4 id="strategy-1">Strategy 1</h4>

<p>If Target is the food, choose the shortest path</p>

<h4 id="strategy-2">Strategy 2</h4>

<p>If Target is the tail, choose the longest path</p>

<p>code src:<br />
<a href="">https://github.com/Hawstein/snake-ai</a></p>

<ul>
  <li>
    <h2 id="ai-solves-super-mario-bros-and-other-classic-nes-gameshttpwwwwiredcouknewsarchive2013-0412super-mario-solved"><a href="http://www.wired.co.uk/news/archive/2013-04/12/super-mario-solved">AI ‘solves’ Super Mario Bros. and other classic NES games</a></h2>
  </li>
</ul>

<embed src="http://player.youku.com/player.php/sid/XNTQzMTM1NDky/v.swf" allowfullscreen="true" quality="high" width="480" height="400" align="middle" allowscriptaccess="always" type="application/x-shockwave-flash" />

<p><a href="">http://v.youku.com/v_show/id_XNTQzMTM1NDky.html</a></p>

<p><a href="">http://www.cs.cmu.edu/~tom7/mario/mario.pdf</a></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Android Dev on OSX]]></title>
    <link href="http://arekyao.github.io/blog/2013/04/20/android-dev-on-osx/"/>
    <updated>2013-04-20T00:00:00+08:00</updated>
    <id>http://arekyao.github.io/blog/2013/04/20/android-dev-on-osx</id>
    <content type="html"><![CDATA[<h2 id="some-gossip">Some gossip</h2>

<p>Today it prove the conclusion that Google is much better than baidu, esp in Tech Problem.</p>

<p>here is one:</p>

<p>Android Emulation Key HOME is not found on OSX.  </p>

<p>There is not HOME key on OSX.</p>

<p>After lots of try, i got ESC, but it’s BACK key.</p>

<p>By Bidu, try lots of query, it does not work.</p>

<p>By google, it works immediately</p>

<h2 id="android-emulator-key-mapping-on-osx">Android Emulator Key Mapping On OSX</h2>

<!-- more -->

<p>from <a href="">http://developer.android.com/tools/help/emulator.html</a></p>

<p>Home = HOME (FN + left_arrow on Macbooks)<br />
Menu (left softkey) = F2 or Page-up button<br />
Star (right softkey) = Shift-F2 or Page Down<br />
Back = ESC<br />
Call/dial button = F3<br />
Hangup/end call button = F4<br />
Search = F5<br />
Power button = F7<br />
Audio volume up button = KEYPAD_PLUS, Ctrl-F5<br />
Audio volume down button = KEYPAD_MINUS, Ctrl-F6<br />
Camera button = Ctrl-KEYPAD<em>5, Ctrl-F3<br />
Switch to previous layout orientation (for example, portrait, landscape) = KEYPAD</em>7, Ctrl-F11<br />
Switch to next layout orientation (for example, portrait, landscape) = KEYPAD<em>9, Ctrl-F12<br />
Toggle cell networking on/off = F8<br />
Toggle code profiling = F9 (only with -trace startup option)<br />
Toggle fullscreen mode = Alt-Enter<br />
Toggle trackball mode = F6
Enter trackball mode temporarily (while key is pressed) = Delete
DPad left/up/right/down = KEYPAD</em>4/8/6/2
DPad center click = KEYPAD_5
Onion alpha increase/decrease = KEYPAD_MULTIPLY(*) / KEYPAD_DIVIDE(/)</p>

<p><a href="">http://stackoverflow.com/questions/7628606/how-to-emulate-pressing-home-button-in-android-emulator</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[TV series the Practice]]></title>
    <link href="http://arekyao.github.io/blog/2013/04/10/tv-series-the-practice/"/>
    <updated>2013-04-10T22:22:00+08:00</updated>
    <id>http://arekyao.github.io/blog/2013/04/10/tv-series-the-practice</id>
    <content type="html"><![CDATA[<h2 id="whats-the-practice">What’s the practice</h2>

<p>The Practice is an American TV series, legal drama. </p>

<p>This show won the Emmy in 1998 and 1999 for Best Drama Series.<br />
The Practice focused on the law firm of Robert Donnell and Associates (later becoming Donnell, Young, Dole, &amp; Frutt, and ultimately Young, Frutt, &amp; Berluti).   </p>

<p>Every story per ep, is made up one or two cases, including both criminal and civil cases, which often mirror current events.Conflict between legal ethics and personal morality was a recurring theme.   </p>

<!-- more -->

<p>Robert Donnell is the boss, which is tall, handsome, rich, whose gf, linsay Dole and Helen Gamble.<br />
Eugene Young is my favourite lawyer actor, black, strong in debating. <br />
Rebecca Washington, assist of the law firm.<br />
Jimmy Berluti, some poooor guy, fired by last firm for doing something awful and cheating to help bobby donnell.<br />
Ellenor Frutt, fat woman, with a sharp teeth.  </p>

<p>Bobby is an idealist, a lawyer and wanna help the innocent men out.  However, he soon learns that drug dealers and other undeniably guilty clients tend to be the ones who provide the business that keep the firm running.
After realize that, Bobby change his idea that defending for the innocent to defending for the system.</p>

<p>(the jury system, defend lawyer and district attorney PK, the judge is just a monitor, the jury make the decision)</p>

<p>Helen is a DA, wanna to put the bad men into jail, limited to the jury system, which is her tool too.</p>

<p>The Practice is the greatest legal drama, no other series in the same level with it.</p>

<h2 id="my-practice">My Practice</h2>
<p>The practice has eight season.
Seaon 8 is my first.</p>

<p>I got shocked and attracted as soon as the s8ep1. even though, at first the reason is alan shore (some guy from Boston Legal)</p>

<p>Maybe two or three years later, the season 1 ,2, 3 come out ,thanks for Douban KW Group.</p>

<p>Here is the problem.
After KW group has tranlated S1,S2,S3, they decided to stop their work.
The stop reason is heard that Season 4,5,6,7 is not as good as S1-3
However, I still wanna see them, so far</p>

<p>It’s difficult for me to see them totally without any subtitle.
So I got some english subtitle from shooter.cn
Generally, it is OK for me, but still a litter confusing when debating in the law room.
It’s too fast to follow it.</p>

<p>So I decide to do a chn &amp; eng mixed subtitle.</p>

<h2 id="mixed-subtitle">Mixed Subtitle</h2>
<p>1, Got the English subtitle</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
</pre></td><td class="code"><pre><code class=""><span class="line">
</span><span class="line">1
</span><span class="line">00:00:00,312 --&gt; 00:00:01,833
</span><span class="line">Previously on The Practice
</span><span class="line">
</span><span class="line">2
</span><span class="line">00:00:01,959 --&gt; 00:00:03,488
</span><span class="line">Something wrong, Ellenor? 
</span><span class="line">
</span><span class="line">3
</span><span class="line">00:00:03,584 --&gt; 00:00:04,848
</span><span class="line">You came to kill me? 
</span><span class="line">
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>2, translate it to Chinese </p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
</pre></td><td class="code"><pre><code class=""><span class="line">
</span><span class="line">1 
</span><span class="line">00:00:00,312 - &gt; 00:00:01,833 
</span><span class="line">以前的做法 
</span><span class="line">
</span><span class="line">2 
</span><span class="line">00:00:01,959 - &gt; 00:00:03,488 
</span><span class="line">有什么问题，Ellenor？ 
</span><span class="line">
</span><span class="line">3 
</span><span class="line">00:00:03,584 - &gt; 00:00:04,848 
</span><span class="line">你来杀我吗？ 
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>3, Merge it </p>

<p>the code is like this:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
<span class="line-number">23</span>
<span class="line-number">24</span>
<span class="line-number">25</span>
<span class="line-number">26</span>
<span class="line-number">27</span>
<span class="line-number">28</span>
<span class="line-number">29</span>
<span class="line-number">30</span>
<span class="line-number">31</span>
<span class="line-number">32</span>
<span class="line-number">33</span>
<span class="line-number">34</span>
<span class="line-number">35</span>
<span class="line-number">36</span>
<span class="line-number">37</span>
<span class="line-number">38</span>
<span class="line-number">39</span>
<span class="line-number">40</span>
<span class="line-number">41</span>
<span class="line-number">42</span>
<span class="line-number">43</span>
<span class="line-number">44</span>
<span class="line-number">45</span>
<span class="line-number">46</span>
<span class="line-number">47</span>
<span class="line-number">48</span>
<span class="line-number">49</span>
<span class="line-number">50</span>
<span class="line-number">51</span>
<span class="line-number">52</span>
<span class="line-number">53</span>
<span class="line-number">54</span>
<span class="line-number">55</span>
<span class="line-number">56</span>
<span class="line-number">57</span>
<span class="line-number">58</span>
<span class="line-number">59</span>
<span class="line-number">60</span>
<span class="line-number">61</span>
<span class="line-number">62</span>
<span class="line-number">63</span>
<span class="line-number">64</span>
<span class="line-number">65</span>
<span class="line-number">66</span>
<span class="line-number">67</span>
</pre></td><td class="code"><pre><code class="py"><span class="line"><span class="c">#! /usr/bin/env python</span>
</span><span class="line">
</span><span class="line"><span class="kn">import</span> <span class="nn">time</span>
</span><span class="line"><span class="kn">import</span> <span class="nn">sys</span>
</span><span class="line"><span class="kn">import</span> <span class="nn">exceptions</span>
</span><span class="line"><span class="kn">import</span> <span class="nn">string</span>
</span><span class="line">
</span><span class="line">
</span><span class="line"><span class="k">def</span> <span class="nf">main</span><span class="p">(</span><span class="n">argv</span><span class="o">=</span><span class="n">sys</span><span class="o">.</span><span class="n">argv</span><span class="p">):</span>
</span><span class="line">	<span class="n">englist_title_file</span> <span class="o">=</span> <span class="nb">open</span><span class="p">(</span><span class="n">argv</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="s">&quot;r&quot;</span><span class="p">)</span>
</span><span class="line">	<span class="n">chinese_title_file</span> <span class="o">=</span> <span class="nb">open</span><span class="p">(</span><span class="n">argv</span><span class="p">[</span><span class="mi">2</span><span class="p">],</span><span class="s">&quot;r&quot;</span><span class="p">)</span>
</span><span class="line">	<span class="n">mixed_title_file</span> <span class="o">=</span> <span class="nb">open</span><span class="p">(</span><span class="n">argv</span><span class="p">[</span><span class="mi">3</span><span class="p">],</span><span class="s">&quot;w&quot;</span><span class="p">)</span>
</span><span class="line">	<span class="n">sub_index</span> <span class="o">=</span> <span class="mi">1</span>
</span><span class="line">	<span class="n">sub_content</span> <span class="o">=</span> <span class="p">{}</span>
</span><span class="line">	<span class="k">while</span> <span class="mi">1</span> <span class="p">:</span>
</span><span class="line">		<span class="c">### index line</span>
</span><span class="line">		<span class="n">line</span> <span class="o">=</span> <span class="n">englist_title_file</span><span class="o">.</span><span class="n">readline</span><span class="p">()</span>
</span><span class="line">
</span><span class="line">		<span class="k">if</span> <span class="ow">not</span> <span class="n">line</span> <span class="ow">or</span> <span class="n">line</span><span class="o">==</span><span class="s">&quot;&quot;</span> <span class="ow">or</span> <span class="n">line</span><span class="o">==</span><span class="s">&quot;</span><span class="se">\r</span><span class="s">&quot;</span> <span class="ow">or</span> <span class="n">line</span><span class="o">==</span><span class="s">&quot;</span><span class="se">\r\n</span><span class="s">&quot;</span><span class="p">:</span>
</span><span class="line">			<span class="k">break</span>
</span><span class="line">
</span><span class="line">		<span class="k">if</span> <span class="n">sub_index</span> <span class="o">==</span> <span class="n">string</span><span class="o">.</span><span class="n">atoi</span><span class="p">(</span><span class="n">line</span><span class="p">):</span>
</span><span class="line">			<span class="c">### sub time line</span>
</span><span class="line">			<span class="n">englist_title_file</span><span class="o">.</span><span class="n">readline</span><span class="p">()</span>
</span><span class="line">			<span class="c">### english subtitle line</span>
</span><span class="line">			<span class="n">sub_content</span><span class="p">[</span><span class="n">sub_index</span><span class="p">]</span> <span class="o">=</span> <span class="n">englist_title_file</span><span class="o">.</span><span class="n">readline</span><span class="p">()</span>
</span><span class="line">			<span class="c">### blank line</span>
</span><span class="line">			<span class="n">englist_title_file</span><span class="o">.</span><span class="n">readline</span><span class="p">()</span>
</span><span class="line">
</span><span class="line">			<span class="n">sub_index</span> <span class="o">+=</span> <span class="mi">1</span>	
</span><span class="line">	<span class="n">sub_index_max</span> <span class="o">=</span> <span class="n">sub_index</span>		
</span><span class="line">	<span class="n">sub_index</span> <span class="o">=</span> <span class="mi">1</span>	
</span><span class="line">	<span class="k">while</span> <span class="mi">1</span> <span class="p">:</span>
</span><span class="line">		<span class="c">### index line</span>
</span><span class="line">		<span class="n">line</span> <span class="o">=</span> <span class="n">chinese_title_file</span><span class="o">.</span><span class="n">readline</span><span class="p">()</span>
</span><span class="line">		<span class="n">mixed_title_file</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="n">line</span><span class="p">)</span>
</span><span class="line">
</span><span class="line">		<span class="k">print</span> <span class="s">&quot;xxxxx=    &quot;</span><span class="o">+</span><span class="n">line</span>
</span><span class="line">		<span class="k">if</span> <span class="ow">not</span> <span class="n">line</span> <span class="ow">or</span> <span class="n">line</span><span class="o">==</span><span class="s">&quot;&quot;</span> <span class="ow">or</span> <span class="n">line</span><span class="o">==</span><span class="s">&quot;</span><span class="se">\r</span><span class="s">&quot;</span> <span class="ow">or</span> <span class="n">line</span><span class="o">==</span><span class="s">&quot;</span><span class="se">\r\n</span><span class="s">&quot;</span><span class="p">:</span>
</span><span class="line">			<span class="k">break</span>
</span><span class="line">
</span><span class="line">		<span class="k">if</span> <span class="n">sub_index</span> <span class="o">==</span> <span class="n">string</span><span class="o">.</span><span class="n">atoi</span><span class="p">(</span><span class="n">line</span><span class="p">):</span>
</span><span class="line">			<span class="c">### sub time line</span>
</span><span class="line">			<span class="n">line</span> <span class="o">=</span> <span class="n">chinese_title_file</span><span class="o">.</span><span class="n">readline</span><span class="p">()</span>
</span><span class="line">			<span class="n">mixed_title_file</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="n">line</span><span class="p">)</span>
</span><span class="line">			<span class="c">### chinese subtitle line</span>
</span><span class="line">			<span class="n">line</span> <span class="o">=</span> <span class="n">chinese_title_file</span><span class="o">.</span><span class="n">readline</span><span class="p">()</span>
</span><span class="line">			<span class="n">mixed_title_file</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="n">line</span><span class="p">)</span>
</span><span class="line">			<span class="c">### english subtitle line</span>
</span><span class="line">			<span class="n">line</span> <span class="o">=</span> <span class="n">sub_content</span><span class="p">[</span><span class="n">sub_index</span><span class="p">]</span>
</span><span class="line">			<span class="n">mixed_title_file</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="n">line</span><span class="p">)</span>
</span><span class="line">			<span class="c">### blank line</span>
</span><span class="line">			<span class="n">line</span> <span class="o">=</span> <span class="n">chinese_title_file</span><span class="o">.</span><span class="n">readline</span><span class="p">()</span>
</span><span class="line">			<span class="n">mixed_title_file</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="n">line</span><span class="p">)</span>
</span><span class="line">
</span><span class="line">			<span class="n">sub_index</span> <span class="o">+=</span> <span class="mi">1</span>
</span><span class="line">		<span class="k">if</span> <span class="n">sub_index</span> <span class="o">&gt;=</span> <span class="n">sub_index_max</span> <span class="p">:</span>
</span><span class="line">			<span class="k">break</span>
</span><span class="line">
</span><span class="line">	<span class="n">englist_title_file</span><span class="o">.</span><span class="n">close</span><span class="p">()</span>
</span><span class="line">	<span class="n">chinese_title_file</span><span class="o">.</span><span class="n">close</span><span class="p">()</span>
</span><span class="line">	<span class="n">mixed_title_file</span><span class="o">.</span><span class="n">close</span><span class="p">()</span>
</span><span class="line">
</span><span class="line">
</span><span class="line">
</span><span class="line"><span class="k">if</span> <span class="n">__name__</span> <span class="o">==</span> <span class="s">&quot;__main__&quot;</span><span class="p">:</span>
</span><span class="line">	<span class="n">sys</span><span class="o">.</span><span class="n">exit</span><span class="p">(</span><span class="n">main</span><span class="p">())</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>4, The mixed subtitle is done</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
</pre></td><td class="code"><pre><code class="py"><span class="line"><span class="mi">1</span>
</span><span class="line"><span class="mo">00</span><span class="p">:</span><span class="mo">00</span><span class="p">:</span><span class="mo">00</span><span class="p">,</span><span class="mi">312</span> <span class="o">-</span> <span class="o">&gt;</span> <span class="mo">00</span><span class="p">:</span><span class="mo">00</span><span class="p">:</span><span class="mo">01</span><span class="p">,</span><span class="mi">833</span>
</span><span class="line"><span class="err">以前的做法</span>
</span><span class="line"><span class="n">Previously</span> <span class="n">on</span> <span class="n">The</span> <span class="n">Practice</span>
</span><span class="line">
</span><span class="line"><span class="mi">2</span>
</span><span class="line"><span class="mo">00</span><span class="p">:</span><span class="mo">00</span><span class="p">:</span><span class="mo">01</span><span class="p">,</span><span class="mi">959</span> <span class="o">-</span> <span class="o">&gt;</span> <span class="mo">00</span><span class="p">:</span><span class="mo">00</span><span class="p">:</span><span class="mo">03</span><span class="p">,</span><span class="mi">488</span>
</span><span class="line"><span class="err">有什么问题，</span><span class="n">Ellenor</span><span class="err">？</span>
</span><span class="line"><span class="n">Something</span> <span class="n">wrong</span><span class="p">,</span> <span class="n">Ellenor</span><span class="err">?</span>
</span><span class="line">
</span><span class="line"><span class="mi">3</span>
</span><span class="line"><span class="mo">00</span><span class="p">:</span><span class="mo">00</span><span class="p">:</span><span class="mo">03</span><span class="p">,</span><span class="mi">584</span> <span class="o">-</span> <span class="o">&gt;</span> <span class="mo">00</span><span class="p">:</span><span class="mo">00</span><span class="p">:</span><span class="mo">04</span><span class="p">,</span><span class="mi">848</span>
</span><span class="line"><span class="err">你来杀我吗？</span>
</span><span class="line"><span class="n">You</span> <span class="n">came</span> <span class="n">to</span> <span class="n">kill</span> <span class="n">me</span><span class="err">?</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>Is that COOOOOOL?!
Tech Changes World</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Life in China]]></title>
    <link href="http://arekyao.github.io/blog/2013/03/24/life-in-china/"/>
    <updated>2013-03-24T15:54:00+08:00</updated>
    <id>http://arekyao.github.io/blog/2013/03/24/life-in-china</id>
    <content type="html"><![CDATA[<h3 id="life-is-a-stuggle">Life is a stuggle</h3>

<p>Human being is a magical kind of animal.</p>

<p>And as part of animal family, it has one same feature, facing death, every second and every day.</p>

<p>As you know, Everyone has its limited life.</p>

<p>In the limited life, the experience may be colorful and wonderful. 
Or maybe the opposite with bad luck.</p>

<p>So there is a proverb said, life is struggle.
espcially, in China.</p>

<h3 id="when-boy">When boy</h3>

<!-- more -->

<p>When I am a little boy, I always had lots of complain about my parents.
The topics, which makes me unhappy, are lifestyle and the dealing skill…</p>

<p>Every time conplain happened, Dad told me,</p>

<blockquote class="information">
  <p>When you are old enough, having your children, then you can understand us more.</p>
</blockquote>

<p>At the moment, I did not understand it really.</p>

<h3 id="now">Now</h3>

<p>After ten years, more or less, a child come to my life.</p>

<p>More than half a year passed, suddenly, I got it.</p>

<p>What parents spend on their child, is priceless.</p>

<p>Time and Money, is too much, which is uncountable.</p>

<h3 id="what-we-faced-are-facing-and-will">What we faced, are facing and will</h3>

<p>When we are bobies, we are dangerous because of bad milk.</p>

<p>When we are children and young, we have to study hard to learn something. It’s hard.</p>

<p>When we are grown, work is necessary, which is hard, too.</p>

<p>When we are old, we have to do sth for our children,( like our parents, now )</p>

<p>When we are older, death is welcoming us…</p>

<h3 id="why">Why</h3>

<p>We are dying every day.</p>

<p>The resource in the world is limited…</p>

<p>It’s impossble for humans to share that equally</p>

<p>So we have to struggle for that…and So ….</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Air cleaner and English study]]></title>
    <link href="http://arekyao.github.io/blog/2013/03/10/air-cleaner-and-english-study/"/>
    <updated>2013-03-10T00:28:00+08:00</updated>
    <id>http://arekyao.github.io/blog/2013/03/10/air-cleaner-and-english-study</id>
    <content type="html"><![CDATA[<p>Here are two interesting stories.</p>

<p>As you know, Peking is a great city, well-known,as big building, huge population, especially the PM2.5 .
So we decided to buy an air-cleaner.
After considering the brand, the work model of air-cleaning, our choice is the SHARP.
Amazon is my fav E-Commerce platform, we bought gift cards on taobao, then ordered the type.</p>

<p>When the machine is sent home by the Express delivery man, we decided to use it immediately.
Everything is fine, until a month goes away.</p>

<!-- more -->

<p>Yep, you know, the air cleaner should be cleaned every month.
(Some part can not cleaned and it’s disposible)
When I open the machine, I am shocked.</p>

<p>The three layer of the air-filter is wrapped by the plastics.
All of them!!!
Unbelievable!!!</p>

<p>That means we just open it for one month, just the status is open. 
It does not work effectively.
Maybe that’s the reason that the water goes very slowly.
(the air-cleaner have a function: air-humidifying)</p>

<p>The another story is about English study.</p>

<p>Every night, when my baby don’t wanna go to sleep, I will turn on the radio, choose the CNN channel.
Then both She and I will have a good night very soon.</p>

]]></content>
  </entry>
  
</feed>
