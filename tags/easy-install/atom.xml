<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Tag: easy_install | YY Every Day]]></title>
  <link href="http://arekyao.github.io/tags/easy-install/atom.xml" rel="self"/>
  <link href="http://arekyao.github.io/"/>
  <updated>2013-10-25T08:21:57+08:00</updated>
  <id>http://arekyao.github.io/</id>
  <author>
    <name><![CDATA[Arek.Yao]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Going to Python World Step by Step]]></title>
    <link href="http://arekyao.github.io/blog/2013/02/17/going-to-python-world-step-by-step/"/>
    <updated>2013-02-17T12:46:00+08:00</updated>
    <id>http://arekyao.github.io/blog/2013/02/17/going-to-python-world-step-by-step</id>
    <content type="html"><![CDATA[<p>First, let me introduce something about develop environment, such as Brew, easy_install,RVM, … etc. </p>

<h1 id="mac-develop-environment">Mac Develop Environment</h1>

<h2 id="homebrew-the-missing-package-manager-for-os-xhttpmxclgithubcomhomebrew"><a href="http://mxcl.github.com/homebrew/">Homebrew: The missing package manager for OS X</a></h2>

<!-- more -->

<p><code>
$ruby -e "$(curl -fsSL https://raw.github.com/mxcl/homebrew/go)"
</code></p>

<p>with brew, you can install anything in command. eg:</p>

<p><code>
$brew install lighttpd
</code></p>

<h2 id="easyinstallhttppypipythonorgpypisetuptools"><a href="http://pypi.python.org/pypi/setuptools/">Easy_install</a></h2>
<blockquote>
  <p>Download the appropriate egg for your version of Python (e.g. setuptools-0.6c9-py2.4.egg). Do NOT rename it.
Run it as if it were a shell script, e.g. sh setuptools-0.6c9-py2.4.egg. 
Setuptools will install itself using the matching version of Python (e.g. python2.4), and will place the easy_install executable in the default location for installing Python scripts (as determined by the standard distutils configuration files, or by the Python installation).</p>

</blockquote>

<p>with this, you can install anything abou python package in command. eg:</p>

<p><code>
easy_install xxx
</code></p>

<p>BTW: 
You can check package info in “/Library/Python/2.7/site-packages”</p>

<h2 id="rvm-ruby-version-managerhttpsrvmio"><a href="https://rvm.io/">RVM: Ruby Version Manager</a></h2>
<p><code>
$ \curl -L https://get.rvm.io | bash -s stable --ruby
</code></p>

<hr />

<h1 id="common-python-library">Common Python Library</h1>

<h2 id="nlp">1, NLP:</h2>
<p>nltk:  <a href="http://nltk.org/">http://nltk.org/</a></p>

<p>chinese word segment <a href="https://github.com/fxsjy/jieba">https://github.com/fxsjy/jieba</a></p>

<h2 id="machine-learning">2, Machine Learning</h2>
<p>scikit_learn: <a href="https://pypi.python.org/pypi/scikit-learn/">https://pypi.python.org/pypi/scikit-learn/</a></p>

<p>However,ML’s scikit-learn lib have to depend on lots of other package(scipy….)
Here is a good scipt for mac 10.8 user
<a href="http://fonnesbeck.github.com/ScipySuperpack/">http://fonnesbeck.github.com/ScipySuperpack/</a></p>

<p><a href="https://raw.github.com/fonnesbeck/ScipySuperpack/master/install_superpack.sh">the scipt code</a> :</p>

<p>```sh
#!/bin/sh
PYTHON=’/usr/bin/python’
GIT_FILENAME=’git-1.7.7.3-intel-universal-snow-leopard’
GIT_VOLUME=’/Volumes/Git 1.7.7.3 Snow Leopard Intel Universal/’
GFORTRAN=’gcc-42-5666.3-darwin11.pkg’
SUDO=’sudo’</p>

<p>if [ -z “$VIRTUAL_ENV” ]; then
    # Standard Python env
    PYTHON=/usr/bin/python
    SUDO=${SUDO}
else
    # Virtualenv
    PYTHON=python
    SUDO=”” #${SUDO} is not required in a virtualenv
fi</p>

<p>if  [ -d “.git” ]; then</p>

<pre><code>SUPERPACK_PATH='.'
</code></pre>

<p>else</p>

<pre><code>SUPERPACK_PATH='ScipySuperpack'

hash git &amp;&gt; /dev/null
if [ $? -eq 1 ]; then
    echo 'Downloading Git for OS X ...'
    curl -o ${GIT_FILENAME}.dmg http://git-osx-installer.googlecode.com/files/${GIT_FILENAME}.dmg
    echo 'Installing Git ...'
    hdiutil mount ${GIT_FILENAME}.dmg
    ${SUDO} installer -pkg "${GIT_VOLUME}${GIT_FILENAME}.pkg" -target '/'
    hdiutil unmount "${GIT_VOLUME}"
    echo 'Cleaning up'
    rm ${GIT_FILENAME}.dmg
    echo 'Cloning Scipy Superpack'
    /usr/local/git/bin/git clone --depth=1 git://github.com/fonnesbeck/ScipySuperpack.git
else
    echo 'Cloning Scipy Superpack'
    git clone --depth=1 git://github.com/fonnesbeck/ScipySuperpack.git
fi fi
</code></pre>

<h1 id="hash-gfortran--devnull">hash gfortran &amp;&gt; /dev/null</h1>
<p># if [ $? -eq 1 ]; then
echo ‘Downloading gFortran …’
curl -o ${GFORTRAN} http://r.research.att.com/tools/${GFORTRAN}
echo ‘Installing gFortran …’
${SUDO} installer -pkg ${GFORTRAN} -target ‘/’
# fi</p>

<p>hash easy_install &amp;&gt; /dev/null
if [ $? -eq 1 ]; then
    echo ‘Downloading ez_setup …’
    curl -o ez_setup.py http://peak.telecommunity.com/dist/ez_setup.py
    echo ‘Installing ez_setup …’
    ${SUDO} “${PYTHON}” ez_setup.py
    rm ez_setup.py
fi</p>

<p>echo ‘Installing Scipy Superpack …’
${SUDO} “${PYTHON}” -m easy_install -N -Z ${SUPERPACK_PATH}/*.egg</p>

<p>echo ‘Installing readline …’
${SUDO} “${PYTHON}” -m easy_install -N -Z readline
echo ‘Installing nose …’
${SUDO} “${PYTHON}” -m easy_install -N -Z nose
echo ‘Installing six’
${SUDO} “${PYTHON}” -m easy_install -N -Z six
echo ‘Installing python-dateutil’
${SUDO} “${PYTHON}” -m easy_install -N -Z python-dateutil
echo ‘Installing pytz’
${SUDO} “${PYTHON}” -m easy_install -N -Z pytz
echo ‘Installing Tornado’
${SUDO} “${PYTHON}” -m easy_install -N -Z tornado
echo ‘Installing pyzmq’
${SUDO} “${PYTHON}” -m easy_install -N -Z pyzmq
echo ‘Installing pika’
${SUDO} “${PYTHON}” -m easy_install -N -Z pika
echo ‘Installing jinja2’
${SUDO} “${PYTHON}” -m easy_install -N -Z jinja2
echo ‘Installing patsy’
${SUDO} “${PYTHON}” -m easy_install -N -Z patsy
if  [ ! -d “.git” ]; then
    echo ‘Cleaning up’<br />
    rm -rf ${SUPERPACK_PATH}
fi</p>

<p>echo ‘Done’</p>

<p>```</p>

<h2 id="scrapyhttpscrapyorgdownload">3, <a href="http://scrapy.org/download/">Scrapy</a></h2>

<p>A Spider Structure based on Python</p>

<h2 id="ipythonhttpipythonorginstallhtml">4, <a href="http://ipython.org/install.html">IPython</a></h2>
<p>a good Python IDE</p>

<h2 id="web-frameworkhttpwikipythonorgmoinwebframeworks">5, <a href="http://wiki.python.org/moin/WebFrameworks">Web Framework</a></h2>

<p><a href="http://www.douban.com/group/web.py/">Web.py</a></p>

<p><a href="http://www.douban.com/group/django/">Django</a></p>

<p>http://www.douban.com/group/django/</p>

<h2 id="python-study">6, Python study</h2>

<p><a href="">http://gnosis.cx/TPiP/</a></p>

<p><a href="">http://docs.python-guide.org/en/latest/</a></p>

<h2 id="morehttpwwwpythonorgaboutapps"><a href="http://www.python.org/about/apps/">More…</a></h2>

<h2 id="reference">Reference</h2>

<p><a href="http://www.cnblogs.com/vamei/archive/2013/02/06/2892628.html">http://www.cnblogs.com/vamei/archive/2013/02/06/2892628.html</a><br />
<a href="http://www.python.org/about/apps/">http://www.python.org/about/apps/</a><br />
<a href="">http://docs.python-guide.org/en/latest/</a>  </p>
]]></content>
  </entry>
  
</feed>
